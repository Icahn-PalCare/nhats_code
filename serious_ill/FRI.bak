= V4 Outline MultiLine NoSorting TabWidth=30

H="Function-Related Indicators"
Looking at the Function-related indicators 
from  "Association Between Preadmission Functional Status and Use and Effectiveness of Secondary Prevention Medications in Elderly Survivors of Acute Myocardial Infarction" by Elizabeth Chrischilles, et al.

-uses NHATS serious illness dataset
-restricted to wave 1 interviews with 12+ months of FFS

FRIs are-
-cane
-walker
-commode
-bedpan
-urinal
-shower/tub/toilet assistive device
-lift, transfer board, safety belt/harness/vest
-hospital bed
-wheelchair
-oxygen

all from the DME file, using the codes from the online Appendix to the paper.  Other indicator: blood transfusion, supplemental nutrition, chronic ulcer of skin, pneumonia, delerium/dementia/alzheimer's, bone marrow failure, depression, respiratory failure/insufficiency/arrest, and malnutition and unintedned weight loss are not included as of 7/25/17

H="tabs, crosstabs with ADL"
clear all 
set more off
capture log close

local intpath "E:\nhats\data\Projects\serious_ill\int_data"
local datapath "E:\nhats\data\Projects\serious_ill\final_data"
local logpath "E:\nhats\data\Projects\serious_ill\logs"

cd `datapath'
log using `logpath'\nhats_dme_function.txt, text replace

use serious_ill_nhats_sample if wave==1 & sp_ivw==1 & ffs_12m==1, clear

local dme cane walker commode urinal bedpan tub_toil_dev lift bed chair //oxy

label var cane "Cane from DME, 12m"
label var walker "Walker from DME, 12m"
label var commode "Commode from DME, 12m"
label var urinal "Urinal from DME, 12m"
label var bedpan "Bedpan from DME, 12m"
label var tub_toil_dev "Toilet/tub/shower assistive device from DME, 12m"
label var lift "Lift, transfer board, safety belt/harness/vest from DME, 12m"
label var bed "Hospital bed from DME, 12m"
label var chair "Wheelchair from DME, 12m"
label var oxygen "Oxygen from DME, 12m"

foreach x of local dme {
	replace `x'=0 if `x'==.
}

gen n_fri=0

foreach x of local dme {
	replace n_fri=n_fri+1 if `x'==1
}
gen ind_fri=n_fri>=1 if !missing(n_fri)
label var ind_fri "Indicator any FRI from DME"
label var n_fri "Count of FRIs from DME"
gen mult_fri=n_fri>=2
label var mult_fri "Indicator of multiple FRIs from DME"

foreach x in `dme' ind_fri mult_fri n_fri {
	tab adl_impair `x', col nokey chi2
}


sum `dme' ind_fri mult_fri n_fri
tab1 `dme' ind_fri mult_fri n_fri

gen ind_snf_12m=snf_paid_by_mc_12m>0
gen ind_hh_12m=hh_paid_by_mc_12m>0
gen ind_snf_or_hh_12m=ind_snf_12m==1 | ind_hh_12m==1
label var ind_snf_12m "Indicator any SNF utilization, 12m"
label var ind_hh_ "Indicator any HH utilization, 12m"
label var ind_snf_or_hh "indicator any HH or SNF utilization, 12m"

gen fri_hh_snf_oxy=ind_fri==1 | ind_snf_or_hh==1 | oxygen==1


H="ADL & FRI with outcomes"
clear all 
set more off
capture log close

local intpath "E:\nhats\data\Projects\serious_ill\int_data"
local datapath "E:\nhats\data\Projects\serious_ill\final_data"
local logpath "E:\nhats\data\Projects\IAH\logs\"

cd `datapath'
log using `logpath'\nhats_dme_function.txt, text replace

use serious_ill_nhats_sample if wave==1 & sp_ivw==1 & ffs_12m==1 & ///
!missing(adl_index), clear
svyset varunit [pw=anfinw], strata(varstrat)
*replace adl_impair=0 if adl_index==1
local dme cane walker commode urinal bedpan tub_toil_dev lift bed chair //oxy
gen n=1
label var cane "Cane from DME"
label var walker "Walker from DME"
label var commode "Commode from DME"
label var urinal "Urinal from DME"
label var bedpan "Bedpan from DME"
label var tub_toil_dev "Toilet/tub/shower assistive device from DME"
label var lift "Lift, transfer board, safety belt/harness/vest from DME"
label var bed "Hospital bed from DME"
label var chair "Wheelchair from DME"
label var oxy "Oxygen from DME"

foreach x of local dme {
	replace `x'=0 if `x'==.
}

gen n_fri=0

foreach x of local dme {
	replace n_fri=n_fri+1 if `x'==1
}
gen ind_fri=n_fri>=1 if !missing(n_fri)
label var ind_fri "Any mobility indicator from DME"
label var n_fri "Count of mobility indicators from DME"
gen mult_fri=n_fri>=2
label var mult_fri "Indicator of multiple mobility indicators from DME"

foreach x in `dme' ind_fri mult_fri n_fri {
	tab adl_impair `x', col nokey chi2
}


sum `dme' ind_fri mult_fri n_fri
tab1 `dme' ind_fri mult_fri n_fri

/*gen ind_snf_12m=snf_paid_by_mc_12m>0
gen ind_hh_12m=hh_paid_by_mc_12m>0*/
gen ind_snf_12m=n_snf_days_12m>0 & !missing(n_snf_days_12m)
replace ind_hh_12m=0 if missing(ind_hh_12m)
gen ind_snf_or_hh_12m=ind_snf_12m==1 | ind_hh_12m==1
label var ind_snf_12m "Any SNF utilization"
label var ind_hh_ "Any HH utilization"
label var ind_snf_or_hh "Any HH or SNF utilization"

gen fri_hh_snf_oxy=ind_fri==1 | ind_snf_or_hh==1 | oxy==1
label var fri_hh_snf_oxy "Any HH, SNF, oxygen, or mobility indicator from DME"
gen fri_hh_snf =ind_snf_or_hh==1 | ind_fri==1
label var fri_hh_snf "Any HH, SNF, or mobility indicator from DME"
gen hh_snf_oxy=ind_snf_or_hh==1 | oxy==1
label var hh_snf_oxy "Any HH, SNF, or oxygen from DME"
gen fri_oxy =ind_fri | oxy
label var fri_oxy "Any mobility indcator or oxygen from DME"
gen bed_or_chair=bed==1 | chair==1
label var bed_or_chair "Hospital bed or wheelchair from DME"



/* table 1
demographics, by SR ADL impairment*/

local cvars age aveincome
gen age_lt75=age<=74
gen age_lt85=age>=75 & age<85
gen age_85=age>=85
label var age_lt75 "Age 65-74"
label var age_lt85 "Age 75-84"
label var age_85 "Age 85+"

tab income_cat, gen(inccat)
label define income_cat 0 "<15000" 1 "15-29,999" 2 "30-59,999" 3 ">60000"
label values income_cat income_cat
forvalues i=0/3 {
local lab : label income_cat `i'
label var inccat`=`i'+1' "`lab'"
}

foreach x  in cancer dem esrd chf copd diab_compl liver {
	local smi `smi' smi_`x'_ind
}


*gen prob_dem=dem_3_cat==1 if !missing(dem_3)
*label var prob_dem "Probable dementia"
label define homebound_cat 1 "Homebound" 2 "Semi (Never by Self)" 3 "Semi: Needs Help/Diff" 4 "Not Homebound"
label values homebound_cat homebound_cat
tab homebound, gen(hb)
forvalues i=1/4 {
	local lab: label homebound_cat `i'
	label var hb`i' "`lab'"
}

gen white_oth=white==1 | other_race==1 if !missing(white)
label var white_oth "White, non-hispanic or other race"
label var educ_hs_ind "Education: HS +"

keep if !missing(adl_index)
gen adl_2=adl_index>=2 if !missing(adl_index)
gen adl_3=adl_index>=3 if !missing(adl_index)
label var adl_2 "Dependent in 2+ ADLs"
label var adl_3 "Dependent in 3+ ADLs"
local ivars age_lt75 age_lt85 age_85 inccat1 inccat2 inccat3 inccat4 ///
female white_oth black hisp married educ_hs_ind proxy ///
medicaid medigap srh_fp adl_impair hb1 hb2 hb3 hb4 prob_dem adl_2 adl_3 /*iadl_independent*/ `pps' `ind_indication' ///
`dmouth' `smi' ind_hosp_adm_12m
local ipps pps100 pps90 pps80 ///
pps70 pps60 pps50 pps40 pps30 
local cout tot_paid_by_mc_12m n_hospd_p12m
local iout ind_hosp_adm_p12m died_12
foreach x of local ivars {
sum `x' if `x'==1 & adl_impair==1
}
local rn : word count `ivars'
local r=1
local c=1
mat tab=J(`rn'+3,3,.)

label var ind_ed_vis_p12m "Indicator any ED use 12m post ivw"
label var tot_paid_by_mc_12m "Total paid by MC 12m post ivw, mean"
local coutcomes tot_paid_by_mc_12m
local ioutcomes ind_hosp_adm_p12m ind_ed_vis_p12m died_12
local ivars `ivars' ind_fri mult_fri ind_hh_12m ind_snf_12m

local rn : word count `ivars' 
local r=1
local c=1
mat tab=J(`rn',4,.)
mat stars=J(`rn',4,0)

gen yes=adl_impair==1 | fri_hh_snf_oxy==1
gen group=1 if adl_impair==1 & fri_hh_snf_oxy==1
replace group=2 if adl_impair==1 & fri_hh_snf_oxy==0
replace group=3 if adl_impair==0 & fri_hh_snf_oxy==1

foreach adl in "1,2,3" 1 2 3 {
	foreach x in `ivars' {
		sum `x' if inlist(group,`adl') 
		mat tab[`r',`c']=r(mean)*r(N)
		local r=`r'+1
}

	local r=1
	local c=`c'+1
}
mat rownames tab=`ivars' 

frmttable using "`logpath'function_adl_w_outcomes.rtf", statmat(tab) replace title("Sample Characteristics") ///
ctitles("" "All SR ADL/FRI" "Both" "ADL only" "FRI only") sdec(0) varlabels ///
 note("NHATS wave 1 SP interviews, restricted to those with 12m FFS Medicare & SR ADL impairment" ///
"ADL impairment defined as having assistance in 1+ ADL")  annotate(stars) asymbol(*,**)


local rn : word count `ivars' `coutcomes' `coutcomes' `ioutcomes'
local r=1
local c=1
mat tab=J(`rn'+5,6,.)
mat stars=J(`rn'+5,6,0)

foreach adl in 1 2 3 {
	tokenize nothing fri_hh_snf_oxy adl_impair
	foreach x in `ivars' {
		sum `x' if inlist(group,`adl') [aw=anfinw]
		mat tab[`r',`c']=r(mean)*100
		if `adl'>1 & "`x'"!="adl_impair" {
			svy, subpop(if inlist(group,1,`adl')): tab `x' ``adl''
			mat tab[`r',`c'+1]=e(p_Pear)
			mat stars[`r',`c'+1]=(e(p_Pear)<.01)+(e(p_Pear)<.05)
}
		if `adl'>2 & "`x'"!="adl_impair" {
			svy, subpop(if inlist(group,2,`adl')): tab `x' ``adl''
			mat tab[`r',`c'+2]=e(p_Pear)
			mat stars[`r',`c'+2]=(e(p_Pear)<.01)+(e(p_Pear)<.05)
}
		local r=`r'+1
}
	local r=`r'+2
	foreach x in `coutcomes' {
		sum `x' if inlist(group,`adl') [aw=anfinw],d
		mat tab[`r',`c']=r(mean)
		mat tab[`r'+1,`c']=r(p50)
		if `adl'>1 {
			svy, subpop(if inlist(group,1,`adl')): mean `x', over(``adl'')
			test [`x']0=[`x']1
			mat tab[`r',`c'+1]=r(p)
			mat stars[`r',`c'+1]=(r(p)<.01)+(r(p)<.05)
}
		if `adl'>2 {
			svy, subpop(if inlist(group,2,`adl')): mean `x', over(``adl'')
			test [`x']0=[`x']1
			mat tab[`r',`c'+2]=r(p)
			mat stars[`r',`c'+2]=(r(p)<.01)+(r(p)<.05)
}
		
		local r=`r'+2
}
	foreach x in `ioutcomes' {
		sum `x' if inlist(group,`adl') [aw=anfinw]
		mat tab[`r',`c']=r(mean)*100
		if `adl'>1 {
			svy, subpop(if inlist(group,1,`adl')): tab `x' ``adl''
			mat tab[`r',`c'+1]=e(p_Pear)
			mat stars[`r',`c'+1]=(e(p_Pear)<.01)+(e(p_Pear)<.05)
}
		if `adl'>2 & "`x'"!="adl_impair" {
			svy, subpop(if inlist(group,2,`adl')): tab `x' ``adl''
			mat tab[`r',`c'+2]=e(p_Pear)
			mat stars[`r',`c'+2]=(e(p_Pear)<.01)+(e(p_Pear)<.05)
}
		local r=`r'+1
}		

	local r=`r'+1
	sum n if inlist(group,`adl')  [aw=anfinw]
	mat tab[`r',`c']=r(N)
	mat tab[`r'+1,`c']=r(sum)
	local r=1
	local c=`c'+1
	if `adl'>1 local c=`c'+1
}
mat rownames tab=`ivars' "_" "Outcomes" `coutcomes' "   median" `ioutcomes' "_" "N" "National Estimate"

frmttable using "`logpath'function_adl_w_outcomes.rtf", statmat(tab) addtable title("Sample Characteristics") ///
ctitles("" "Both" "ADL only" "P (Both/ADL only)" "FRI only" "P (Both/FRI only)" "P (ADL/FRI only)") sdec(2) varlabels ///
 note("NHATS wave 1 SP interviews, restricted to those with 12m FFS Medicare & SR ADL impairment" ///
"ADL impairment defined as having assistance in 1+ ADL" ///
"Claims-based indicators include MeADs, home oxygen, and any HH or SNF claims")  annotate(stars) asymbol(*,**)



H="include nursing home as an outcome?"
clear all 
set more off
capture log close

local intpath "E:\nhats\data\Projects\serious_ill\int_data"
local datapath "E:\nhats\data\Projects\serious_ill\final_data"
local logpath "E:\nhats\data\Projects\serious_ill\logs\"

cd `datapath'
log using `logpath'\nhats_dme_function.txt, text replace

use serious_ill_nhats_sample if wave==1 & sp_ivw==1 & ffs_12m==1 & ///
!missing(adl_index), clear
merge 1:m bene_id using "E:\nhats\data\CMS_DUA_28016\Merged Stata\mds3_10_14.dta", ///
keep(match master) keepusing(trgt_dt)
gen ind_mds=_m==3 & inrange(trgt_dt-ivw_date,0,365)
drop trgt_dt _m
duplicates drop
by spid, sort: gen num=_N
drop if num==2 & ind_mds==0
duplicates report spid

replace wave=2
drop nhres
merge 1:1 spid wave using "E:\nhats\data\NHATS cleaned\sp_round_1_6.dta", keep(match master) ///
keepusing(nhres)
rename nhres nhres_p1
replace nhres_p1=0 if missing(nhres_p1)
label var nhres_p1 "Nursing home resident at next wave"
replace wave=1
gen ind_snf_p12m=snf_paid_by_mc_12m>=1 & !missing(snf_paid_by_mc_12m)
label var ind_snf_p12m "Indicator any SNF use 12m post ivw"
label var ind_mds "Indicator MDS assessment 12m post ivw"
label var died_12 "Death within 12m post ivw"

gen ind_nh=ind_snf_p12m==1 | ind_mds==1 | nhres_p1==1
svyset varunit [pw=anfinw], strata(varstrat)
*replace adl_impair=0 if adl_index==1
local dme cane walker commode urinal bedpan tub_toil_dev lift bed chair //oxy
gen n=1
label var cane "Cane from DME"
label var walker "Walker from DME"
label var commode "Commode from DME"
label var urinal "Urinal from DME"
label var bedpan "Bedpan from DME"
label var tub_toil_dev "Toilet/tub/shower assistive device from DME"
label var lift "Lift, transfer board, safety belt/harness/vest from DME"
label var bed "Hospital bed from DME"
label var chair "Wheelchair from DME"
label var oxy "Oxygen from DME"

foreach x of local dme {
	replace `x'=0 if `x'==.
}

gen n_fri=0

foreach x of local dme {
	replace n_fri=n_fri+1 if `x'==1
}
gen ind_fri=n_fri>=1 if !missing(n_fri)
label var ind_fri "Any mobility indicator from DME"
label var n_fri "Count of mobility indicators from DME"
gen mult_fri=n_fri>=2
label var mult_fri "Indicator of multiple mobility indicators from DME"

foreach x in `dme' ind_fri mult_fri n_fri {
	tab adl_impair `x', col nokey chi2
}


sum `dme' ind_fri mult_fri n_fri
tab1 `dme' ind_fri mult_fri n_fri

/*gen ind_snf_12m=snf_paid_by_mc_12m>0
gen ind_hh_12m=hh_paid_by_mc_12m>0*/
gen ind_snf_12m=n_snf_days_12m>0 & !missing(n_snf_days_12m)
replace ind_hh_12m=0 if missing(ind_hh_12m)
gen ind_snf_or_hh_12m=ind_snf_12m==1 | ind_hh_12m==1
label var ind_snf_12m "Any SNF utilization"
label var ind_hh_ "Any HH utilization"
label var ind_snf_or_hh "Any HH or SNF utilization"

gen fri_hh_snf_oxy=ind_fri==1 | ind_snf_or_hh==1 | oxy==1
label var fri_hh_snf_oxy "Any HH, SNF, oxygen, or mobility indicator from DME"
gen fri_hh_snf =ind_snf_or_hh==1 | ind_fri==1
label var fri_hh_snf "Any HH, SNF, or mobility indicator from DME"
gen hh_snf_oxy=ind_snf_or_hh==1 | oxy==1
label var hh_snf_oxy "Any HH, SNF, or oxygen from DME"
gen fri_oxy =ind_fri | oxy
label var fri_oxy "Any mobility indcator or oxygen from DME"
gen bed_or_chair=bed==1 | chair==1
label var bed_or_chair "Hospital bed or wheelchair from DME"



/* table 1
demographics, by SR ADL impairment*/

local cvars age aveincome
gen age_lt75=age<=74
gen age_lt85=age>=75 & age<85
gen age_85=age>=85
label var age_lt75 "Age 65-74"
label var age_lt85 "Age 75-84"
label var age_85 "Age 85+"

tab income_cat, gen(inccat)
*label define income_cat 0 "<15000" 1 "15-29,999" 2 "30-59,999" 3 ">60000"
label values income_cat income_cat
forvalues i=0/3 {
local lab : label income_cat `i'
label var inccat`=`i'+1' "`lab'"
}

foreach x  in cancer dem esrd chf copd diab_compl liver {
	local smi `smi' smi_`x'_ind
}


*gen prob_dem=dem_3_cat==1 if !missing(dem_3)
*label var prob_dem "Probable dementia"
*label define homebound_cat 1 "Homebound" 2 "Semi (Never by Self)" 3 "Semi: Needs Help/Diff" 4 "Not Homebound"
label values homebound_cat homebound_cat
tab homebound, gen(hb)
forvalues i=1/4 {
	local lab: label homebound_cat `i'
	label var hb`i' "`lab'"
}


label var educ_hs_ind "Education: HS +"

keep if !missing(adl_index)
gen adl_2=adl_index>=2 if !missing(adl_index)
gen adl_3=adl_index>=3 if !missing(adl_index)
label var adl_2 "Dependent in 2+ ADLs"
label var adl_3 "Dependent in 3+ ADLs"
local ivars age_lt75 age_lt85 age_85 inccat1 inccat2 inccat3 inccat4 ///
female white black hisp other_race married educ_hs_ind proxy ///
medicaid medigap srh_fp adl_impair hb1 hb2 hb3 hb4 prob_dem adl_2 adl_3 /*iadl_independent*/ `pps' `ind_indication' ///
`dmouth' `smi' ind_hosp_adm_12m
local ipps pps100 pps90 pps80 ///
pps70 pps60 pps50 pps40 pps30 
local cout tot_paid_by_mc_12m n_hospd_p12m
local iout ind_hosp_adm_p12m died_12
foreach x of local ivars {
sum `x' if `x'==1 & adl_impair==1
}
local rn : word count `ivars'
local r=1
local c=1
mat tab=J(`rn'+3,3,.)

label var ind_nh "Any nursing home use 12m post ivw"
label var ind_ed_vis_p12m "Indicator any ED use 12m post ivw"
label var tot_paid_by_mc_12m "Total paid by MC 12m post ivw, mean"
local coutcomes tot_paid_by_mc_12m
local ioutcomes ind_hosp_adm_p12m ind_ed_vis_p12m died_12 ///
ind_snf_p12m nhres_p1 ind_mds ind_nh
local ivars `ivars' ind_fri mult_fri ind_hh_12m ind_snf_12m

local rn : word count `ivars' 
local r=1
local c=1
mat tab=J(`rn',4,.)
mat stars=J(`rn',4,0)

gen yes=adl_impair==1 | fri_hh_snf_oxy==1
gen group=1 if adl_impair==1 & fri_hh_snf_oxy==1
replace group=2 if adl_impair==1 & fri_hh_snf_oxy==0
replace group=3 if adl_impair==0 & fri_hh_snf_oxy==1

foreach adl in "1,2,3" 1 2 3 {
	foreach x in `ivars' {
		sum `x' if inlist(group,`adl') 
		mat tab[`r',`c']=r(mean)*r(N)
		local r=`r'+1
}

	local r=1
	local c=`c'+1
}
mat rownames tab=`ivars' 

frmttable using "`logpath'function_adl_w_outcomes.rtf", statmat(tab) replace title("Sample Characteristics") ///
ctitles("" "All SR ADL/FRI" "Both" "ADL only" "FRI only") sdec(0) varlabels ///
 note("NHATS wave 1 SP interviews, restricted to those with 12m FFS Medicare & SR ADL impairment" ///
"ADL impairment defined as having assistance in 1+ ADL")  annotate(stars) asymbol(*,**)


local rn : word count `ivars' `coutcomes' `coutcomes' `ioutcomes'
local r=1
local c=1
mat tab=J(`rn'+5,5,.)
mat stars=J(`rn'+5,5,0)

foreach adl in 1 2 3 {
	tokenize nothing fri_hh_snf_oxy adl_impair
	foreach x in `ivars' {
		sum `x' if inlist(group,`adl') [aw=anfinw]
		mat tab[`r',`c']=r(mean)*100
		if `adl'>1 & "`x'"!="adl_impair" {
			svy, subpop(if inlist(group,1,`adl')): tab `x' ``adl''
			mat tab[`r',`c'+1]=e(p_Pear)
			mat stars[`r',`c'+1]=(e(p_Pear)<.01)+(e(p_Pear)<.05)
}
		local r=`r'+1
}
	local r=`r'+2
	foreach x in `coutcomes' {
		sum `x' if inlist(group,`adl') [aw=anfinw],d
		mat tab[`r',`c']=r(mean)
		mat tab[`r'+1,`c']=r(p50)
		if `adl'>1 {
			svy, subpop(if inlist(group,1,`adl')): mean `x', over(``adl'')
			test [`x']0=[`x']1
			mat tab[`r',`c'+1]=r(p)
			mat stars[`r',`c'+1]=(r(p)<.01)+(r(p)<.05)
}
		
		local r=`r'+2
}
	foreach x in `ioutcomes' {
		sum `x' if inlist(group,`adl') [aw=anfinw]
		mat tab[`r',`c']=r(mean)*100
		if `adl'>1 {
			svy, subpop(if inlist(group,1,`adl')): tab `x' ``adl''
			mat tab[`r',`c'+1]=e(p_Pear)
			mat stars[`r',`c'+1]=(e(p_Pear)<.01)+(e(p_Pear)<.05)
}
		local r=`r'+1
}		

	local r=`r'+1
	sum n if inlist(group,`adl')  [aw=anfinw]
	mat tab[`r',`c']=r(N)
	mat tab[`r'+1,`c']=r(sum)
	local r=1
	local c=`c'+1
	if `adl'>1 local c=`c'+1
}
mat rownames tab=`ivars' "_" "Outcomes" `coutcomes' "   median" `ioutcomes' "_" "N" "National Estimate"

frmttable using "`logpath'function_adl_w_outcomes.rtf", statmat(tab) addtable title("Sample Characteristics") ///
ctitles("" "Both" "ADL only" "P" "FRI only" "P") sdec(2) varlabels ///
 note("NHATS wave 1 SP interviews, restricted to those with 12m FFS Medicare & SR ADL impairment" ///
"ADL impairment defined as having assistance in 1+ ADL" ///
"Claims-based indicators include MeADs, home oxygen, and any HH or SNF claims")  annotate(stars) asymbol(*,**)



H="Tables with outcomes, overlapping groups"
clear all 
set more off
capture log close

local intpath "E:\nhats\data\Projects\serious_ill\int_data"
local datapath "E:\nhats\data\Projects\serious_ill\final_data"
local logpath "E:\nhats\data\Projects\IAH\logs\"

cd `datapath'
log using `logpath'\nhats_dme_function.txt, text replace

use serious_ill_nhats_sample if wave==1 & sp_ivw==1 & ffs_12m==1 & ///
!missing(adl_index), clear
svyset varunit [pw=anfinw], strata(varstrat)
*replace adl_impair=0 if adl_index==1
local dme cane walker commode urinal bedpan tub_toil_dev lift bed chair //oxy
gen n=1
label var cane "Cane from DME"
label var walker "Walker from DME"
label var commode "Commode from DME"
label var urinal "Urinal from DME"
label var bedpan "Bedpan from DME"
label var tub_toil_dev "Toilet/tub/shower assistive device from DME"
label var lift "Lift, transfer board, safety belt/harness/vest from DME"
label var bed "Hospital bed from DME"
label var chair "Wheelchair from DME"
label var oxy "Oxygen from DME"

foreach x of local dme {
	replace `x'=0 if `x'==.
}

gen n_fri=0

foreach x of local dme {
	replace n_fri=n_fri+1 if `x'==1
}
gen ind_fri=n_fri>=1 if !missing(n_fri)
label var ind_fri "Any mobility indicator from DME"
label var n_fri "Count of mobility indicators from DME"
gen mult_fri=n_fri>=2
label var mult_fri "Indicator of multiple mobility indicators from DME"

foreach x in `dme' ind_fri mult_fri n_fri {
	tab adl_impair `x', col nokey chi2
}


sum `dme' ind_fri mult_fri n_fri
tab1 `dme' ind_fri mult_fri n_fri

/*gen ind_snf_12m=snf_paid_by_mc_12m>0
gen ind_hh_12m=hh_paid_by_mc_12m>0*/
gen ind_snf_12m=n_snf_days_12m>0 & !missing(n_snf_days_12m)
replace ind_hh_12m=0 if missing(ind_hh_12m)
gen ind_snf_or_hh_12m=ind_snf_12m==1 | ind_hh_12m==1
label var ind_snf_12m "Any SNF utilization"
label var ind_hh_ "Any HH utilization"
label var ind_snf_or_hh "Any HH or SNF utilization"

gen fri_hh_snf_oxy=ind_fri==1 | ind_snf_or_hh==1 | oxy==1
label var fri_hh_snf_oxy "Any HH, SNF, oxygen, or mobility indicator from DME"
gen fri_hh_snf =ind_snf_or_hh==1 | ind_fri==1
label var fri_hh_snf "Any HH, SNF, or mobility indicator from DME"
gen hh_snf_oxy=ind_snf_or_hh==1 | oxy==1
label var hh_snf_oxy "Any HH, SNF, or oxygen from DME"
gen fri_oxy =ind_fri | oxy
label var fri_oxy "Any mobility indcator or oxygen from DME"
gen bed_or_chair=bed==1 | chair==1
label var bed_or_chair "Hospital bed or wheelchair from DME"



/* table 1
demographics, by SR ADL impairment*/

local cvars age aveincome
gen age_lt75=age<=74
gen age_lt85=age>=75 & age<85
gen age_85=age>=85
label var age_lt75 "Age 65-74"
label var age_lt85 "Age 75-84"
label var age_85 "Age 85+"

tab income_cat, gen(inccat)
label define income_cat 0 "<15000" 1 "15-29,999" 2 "30-59,999" 3 ">60000"
label values income_cat income_cat
forvalues i=0/3 {
local lab : label income_cat `i'
label var inccat`=`i'+1' "`lab'"
}

foreach x  in cancer dem esrd chf copd diab_compl liver {
	local smi `smi' smi_`x'_ind
}


*gen prob_dem=dem_3_cat==1 if !missing(dem_3)
*label var prob_dem "Probable dementia"
label define homebound_cat 1 "Homebound" 2 "Semi (Never by Self)" 3 "Semi: Needs Help/Diff" 4 "Not Homebound"
label values homebound_cat homebound_cat
tab homebound, gen(hb)
forvalues i=1/4 {
	local lab: label homebound_cat `i'
	label var hb`i' "`lab'"
}


label var educ_hs_ind "Education: HS +"
gen white_oth=white==1 | other_race==1 if !missing(white)
label var white_oth "White, non-hispanic or other race"
keep if !missing(adl_index)
gen adl_2=adl_index>=2 if !missing(adl_index)
gen adl_3=adl_index>=3 if !missing(adl_index)
label var adl_2 "Dependent in 2+ ADLs"
label var adl_3 "Dependent in 3+ ADLs"
local ivars age_lt75 age_lt85 age_85 inccat1 inccat2 inccat3 inccat4 ///
female white_oth black hisp married educ_hs_ind proxy ///
medicaid medigap srh_fp adl_impair hb1 hb2 hb3 hb4 prob_dem adl_2 adl_3 /*iadl_independent*/ `pps' `ind_indication' ///
`dmouth' `smi' ind_hosp_adm_12m
local ipps pps100 pps90 pps80 ///
pps70 pps60 pps50 pps40 pps30 
local cout tot_paid_by_mc_12m n_hospd_p12m
local iout ind_hosp_adm_p12m died_12
foreach x of local ivars {
sum `x' if `x'==1 & adl_impair==1
}
local rn : word count `ivars'
local r=1
local c=1
mat tab=J(`rn'+3,3,.)

label var ind_ed_vis_p12m "Indicator any ED use 12m post ivw"
label var tot_paid_by_mc_12m "Total paid by MC 12m post ivw, mean"
local coutcomes tot_paid_by_mc_12m
local ioutcomes ind_hosp_adm_p12m ind_ed_vis_p12m died_12
local ivars `ivars' ind_fri mult_fri ind_hh_12m ind_snf_12m

local rn : word count `ivars' 
local r=1
local c=1
mat tab=J(`rn',4,.)
mat stars=J(`rn',4,0)

gen yes=adl_impair==1 | fri_hh_snf_oxy==1
gen group=1 if adl_impair==1 & fri_hh_snf_oxy==1
replace group=2 if adl_impair==1 & fri_hh_snf_oxy==0
replace group=3 if adl_impair==0 & fri_hh_snf_oxy==1

foreach adl in 1 "1,2" "1,3" {
	foreach x in `ivars' {
		sum `x' if inlist(group,`adl') 
		mat tab[`r',`c']=r(mean)*r(N)
		local r=`r'+1
}

	local r=1
	local c=`c'+1
}
mat rownames tab=`ivars' 

frmttable using "`logpath'function_adl_fri_overlapping.rtf", statmat(tab) replace title("Sample Characteristics") ///
ctitles("" "Both" "Any ADL" "Any FRI") sdec(0) varlabels ///
 note("NHATS wave 1 SP interviews, restricted to those with 12m FFS Medicare & SR ADL impairment" ///
"ADL impairment defined as having assistance in 1+ ADL")  annotate(stars) asymbol(*,**)


local rn : word count `ivars' `coutcomes' `coutcomes' `ioutcomes'
local r=1
local c=1
mat tab=J(`rn'+5,3,.)
mat stars=J(`rn'+5,3,0)

foreach adl in 1 "1,2" "1,3" {
	tokenize nothing fri_hh_snf_oxy adl_impair
	foreach x in `ivars' {
		sum `x' if inlist(group,`adl') [aw=anfinw]
		mat tab[`r',`c']=r(mean)*100
	/*	if `adl'>1 & "`x'"!="adl_impair" {
			svy, subpop(if inlist(group,1,`adl')): tab `x' ``adl''
			mat tab[`r',`c'+1]=e(p_Pear)
			mat stars[`r',`c'+1]=(e(p_Pear)<.01)+(e(p_Pear)<.05)
}*/
		local r=`r'+1
}
	local r=`r'+2
	foreach x in `coutcomes' {
		sum `x' if inlist(group,`adl') [aw=anfinw],d
		mat tab[`r',`c']=r(mean)
		mat tab[`r'+1,`c']=r(p50)
	/*	if `adl'>1 {
			svy, subpop(if inlist(group,1,`adl')): mean `x', over(``adl'')
			test [`x']0=[`x']1
			mat tab[`r',`c'+1]=r(p)
			mat stars[`r',`c'+1]=(r(p)<.01)+(r(p)<.05)
}*/
		
		local r=`r'+2
}
	foreach x in `ioutcomes' {
		sum `x' if inlist(group,`adl') [aw=anfinw]
		mat tab[`r',`c']=r(mean)*100
/*		if `adl'>1 {
			svy, subpop(if inlist(group,1,`adl')): tab `x' ``adl''
			mat tab[`r',`c'+1]=e(p_Pear)
			mat stars[`r',`c'+1]=(e(p_Pear)<.01)+(e(p_Pear)<.05)
}*/
		local r=`r'+1
}		

	local r=`r'+1
	sum n if inlist(group,`adl')  [aw=anfinw]
	mat tab[`r',`c']=r(N)
	mat tab[`r'+1,`c']=r(sum)
	local r=1
	local c=`c'+1
	*if `adl'>1 local c=`c'+1
}
mat rownames tab=`ivars' "_" "Outcomes" `coutcomes' "   median" `ioutcomes' "_" "N" "National Estimate"

frmttable using "`logpath'function_adl_fri_overlapping.rtf", statmat(tab) addtable title("Sample Characteristics") ///
ctitles("" "Both" "Any ADL" "Any FRI") sdec(2) varlabels ///
 note("NHATS wave 1 SP interviews, restricted to those with 12m FFS Medicare & SR ADL impairment" ///
"ADL impairment defined as having assistance in 1+ ADL" ///
"Claims-based indicators include MeADs, home oxygen, and any HH or SNF claims")  annotate(stars) asymbol(*,**)



H="tables for graphs"
clear all 
set more off
capture log close

local intpath "E:\nhats\data\Projects\serious_ill\int_data"
local datapath "E:\nhats\data\Projects\serious_ill\final_data"
local logpath "E:\nhats\data\Projects\serious_ill\logs\"

cd `datapath'
log using `logpath'\nhats_dme_function_table2.txt, text replace

use serious_ill_nhats_sample if wave==1 & sp_ivw==1 & ffs_12m==1 & ///
!missing(adl_index), clear
svyset varunit [pw=anfinw], strata(varstrat)
local dme cane walker commode urinal bedpan tub_toil_dev lift bed chair 



gen n=1
label var cane "Cane from DME"
label var walker "Walker from DME"
label var commode "Commode from DME"
label var urinal "Urinal from DME"
label var bedpan "Bedpan from DME"
label var tub_toil_dev "Toilet/tub/shower assistive device from DME"
label var lift "Lift, transfer board, safety belt/harness/vest from DME"
label var bed "Hospital bed from DME"
label var chair "Wheelchair from DME"
label var oxy "Oxygen from DME"

foreach x of local dme {
	replace `x'=0 if `x'==.
}

gen n_fri=0

foreach x of local dme {
	replace n_fri=n_fri+1 if `x'==1
}
gen ind_fri=n_fri>=1 if !missing(n_fri)
label var ind_fri "Any mobility indicator from DME"
label var n_fri "Count of mobility indicators from DME"
gen mult_fri=n_fri>=2
label var mult_fri "Indicator of multiple mobility indicators from DME"

foreach x in `dme' ind_fri mult_fri n_fri {
	tab adl_impair `x', col nokey chi2
}


sum `dme' ind_fri mult_fri n_fri
tab1 `dme' ind_fri mult_fri n_fri

/*gen ind_snf_12m=snf_paid_by_mc_12m>0
gen ind_hh_12m=hh_paid_by_mc_12m>0*/
gen ind_snf_12m=n_snf_days_12m>0 & !missing(n_snf_days_12m)
replace ind_hh_12m=0 if missing(ind_hh_12m)
gen ind_snf_or_hh_12m=ind_snf_12m==1 | ind_hh_12m==1
label var ind_snf_12m "Any SNF utilization"
label var ind_hh_ "Any HH utilization"
label var ind_snf_or_hh "Any HH or SNF utilization"

gen fri_hh_snf_oxy=ind_fri==1 | ind_snf_or_hh==1 | oxy==1
label var fri_hh_snf_oxy "Any HH, SNF, oxygen, or mobility indicator from DME"
gen fri_hh_snf =ind_snf_or_hh==1 | ind_fri==1
label var fri_hh_snf "Any HH, SNF, or mobility indicator from DME"
gen hh_snf_oxy=ind_snf_or_hh==1 | oxy==1
label var hh_snf_oxy "Any HH, SNF, or oxygen from DME"
gen fri_oxy =ind_fri | oxy
label var fri_oxy "Any mobility indcator or oxygen from DME"
gen bed_or_chair=bed==1 | chair==1
label var bed_or_chair "Hospital bed or wheelchair from DME"



/* table 1
demographics, by SR ADL impairment*/

local cvars age aveincome
gen age_lt75=age<=74
gen age_lt85=age>=75 & age<85
gen age_85=age>=85
label var age_lt75 "Age 65-74"
label var age_lt85 "Age 75-84"
label var age_85 "Age 85+"


rename adl_impair adl_any_help
rename adl_independent adl_no_help
gen adl_full_help=1
label var adl_full "Full Sample"

local adls
foreach x in bath dres toil bed ins eat any no {
	local adls `adls' adl_`x'_help
}


gen cane_or_walker=cane==1 | walker==1
label var cane_or_walker

local cols1  cane_or_walker tub_toil_dev bed chair commode lift ind_fri 

local cols2  oxy ind_snf_12m ind_hh_12m ind_snf_or_hh_12m hh_snf_oxy fri_hh_snf_oxy 

local rn : word count `adls'
local cn1 : word count `cols1' n
local cn2 : word count `cols2' n

di `cn2'

local replace replace

foreach i in 1 2 {

mat tab`i'=J(`rn',`cn`i'',.)
local r=1
local c=2

foreach x of local adls {
	sum n if `x'==1
	mat tab`i'[`r',1]=r(N)
	foreach y of local cols`i' {
		sum `y' if `x'==1
		mat tab`i'[`r',`c']=r(mean)*100
		local c=`c'+1
}
	local c=2
	local r=`r'+1
}

mat rownames tab`i'=`adls'
mat colnames tab`i'=N `cols`i''

frmttable using "E:\nhats\data\Projects\serious_ill\logs\tables_for_chart.doc", `replace' varlabels ///
sdec(0,2) statmat(tab`i')
local replace addtable
}


H="Old--tables 1-3"
clear all 
set more off
capture log close

local intpath "E:\nhats\data\Projects\serious_ill\int_data"
local datapath "E:\nhats\data\Projects\serious_ill\final_data"
local logpath "E:\nhats\data\Projects\serious_ill\logs\"

cd `datapath'
*log using `logpath'\nhats_dme_function.txt, text replace

use serious_ill_nhats_sample if wave==1

local vars n nonh sp_ivw_yes nomiss ffs_12m

gen nonh=!nhres
label var nonh "SP interview eligible (not nursing home resident)"
gen n=1
label var n "Total Wave 1"
gen nomiss=!missing(adl_index)
label var nomiss "With responses to ADL questions"
label var sp_ivw_yes "SP interview conducted"

mat tab=J(5,1,.)
local r=1

foreach x in `vars' {
	sum n if `x'==1
	mat tab[`r',1]=r(N)
	drop if `x'!=1
	local r=`r'+1
}

mat rownames tab=`vars'

frmttable using "`logpath'function.rtf", statmat(tab) replace title("Sample Derivation") ///
sdec(0) varlabels

use serious_ill_nhats_sample if wave==1 & sp_ivw==1 & ffs_12m==1 & ///
!missing(adl_index), clear
foreach x of varlist device* {
	local device `device' `x'
}

svyset varunit [pw=anfinw], strata(varstrat)
*replace adl_impair=0 if adl_index==1

gen caneorwalker=cane==1 | walker==1
local dme cane walker caneorwalker commode urinal bedpan tub_toil_dev lift bed chair //oxy
gen n=1

label var caneorwalker "Cane or walker from DME"
label var cane "Cane from DME"
label var walker "Walker from DME"
label var commode "Commode from DME"
label var urinal "Urinal from DME"
label var bedpan "Bedpan from DME"
label var tub_toil_dev "Toilet/tub/shower assistive device from DME"
label var lift "Lift, transfer board, safety belt/harness/vest from DME"
label var bed "Hospital bed from DME"
label var chair "Wheelchair from DME"
label var oxy "Oxygen from DME"

foreach x of local dme {
	replace `x'=0 if `x'==.
}

gen n_fri=0

foreach x of local dme {
	replace n_fri=n_fri+1 if `x'==1
}
gen ind_fri=n_fri>=1 if !missing(n_fri)
label var ind_fri "Any mobility indicator from DME"
label var n_fri "Count of mobility indicators from DME"
gen mult_fri=n_fri>=2
label var mult_fri "Indicator of multiple mobility indicators from DME"

foreach x in `dme' ind_fri mult_fri n_fri {
	tab adl_impair `x', col nokey chi2
}


sum `dme' ind_fri mult_fri n_fri
tab1 `dme' ind_fri mult_fri n_fri

/*
gen ind_snf_12m=snf_paid_by_mc_12m>0
gen ind_hh_12m=hh_paid_by_mc_12m>0
*/

gen ind_snf_12m=n_snf_days_12m>0 & !missing(n_snf_days_12m)
gen ind_snf_or_hh_12m=ind_snf_12m==1 | ind_hh_12m==1
replace ind_hh_12m=0 if missing(ind_hh_12)
label var ind_snf_12m "Any SNF utilization"
label var ind_hh_ "Any HH utilization"
label var ind_snf_or_hh "Any HH or SNF utilization"

gen fri_hh_snf_oxy=ind_fri==1 | ind_snf_or_hh==1 | oxy==1
label var fri_hh_snf_oxy "Any HH, SNF, oxygen, or mobility indicator from DME"
gen fri_hh_snf =ind_snf_or_hh==1 | ind_fri==1
label var fri_hh_snf "Any HH, SNF, or mobility indicator from DME"
gen hh_snf_oxy=ind_snf_or_hh==1 | oxy==1
label var hh_snf_oxy "Any HH, SNF, or oxygen from DME"
gen fri_oxy =ind_fri | oxy
label var fri_oxy "Any mobility indcator or oxygen from DME"
gen bed_or_chair=bed==1 | chair==1
label var bed_or_chair "Hospital bed or wheelchair from DME"



/* table 1
demographics, by SR ADL impairment*/

local cvars age aveincome
gen age_lt75=age<=74
gen age_lt85=age>=75 & age<85
gen age_85=age>=85
label var age_lt75 "Age 65-74"
label var age_lt85 "Age 75-84"
label var age_85 "Age 85+"

tab income_cat, gen(inccat)
cap label define income_cat 0 "<15000" 1 "15-29,999" 2 "30-59,999" 3 ">60000"
label values income_cat income_cat
forvalues i=0/3 {
local lab : label income_cat `i'
label var inccat`=`i'+1' "`lab'"
}

foreach x  in cancer dem esrd chf copd diab_compl liver {
	local smi `smi' smi_`x'_ind
}


*gen prob_dem=dem_3_cat==1 if !missing(dem_3)
label var prob_dem "Probable dementia"
cap label define homebound_cat 1 "Homebound" 2 "Semi (Never by Self)" 3 "Semi: Needs Help/Diff" 4 "Not Homebound"
label values homebound_cat homebound_cat
tab homebound, gen(hb)
forvalues i=1/4 {
	local lab: label homebound_cat `i'
	label var hb`i' "`lab'"
}

local help
foreach x of varlist adl*help {
	local help `help' `x'
}
label var educ_hs_ind "Education: HS +"

keep if !missing(adl_index)
gen adl_2=adl_index>=2 if !missing(adl_index)
gen adl_3=adl_index>=3 if !missing(adl_index)
//note-3/7/18 add indicators for meeting 2 or all 3 criteria
gen ind_2=(ind_fri==1 & oxy==1) | (ind_fri==1 & ind_snf_or_hh==1) | ///
(oxy==1 & ind_snf_or_hh==1)
gen ind_3=ind_fri==1 & oxy==1 & ind_snf_or_hh==1
label var ind_2 "2+ indicators"
label var ind_3 "All 3 indicators"
label var adl_2 "Dependent in 2+ ADLs"
label var adl_3 "Dependent in 3+ ADLs"
local cvars age
local ivars age_lt75 age_lt85 age_85 inccat1 inccat2 inccat3 inccat4 ///
female white black hisp other_race married educ_hs_ind proxy ///
medicaid medigap srh_fp adl_impair hb1 hb2 hb3 hb4 prob_dem adl_2 adl_3 ///
`help' /*iadl_independent*/ `pps' `ind_indication' ///
`dmouth' `smi' `device' ind_hosp_adm_12m
local ipps pps100 pps90 pps80 ///
pps70 pps60 pps50 pps40 pps30 
local cout tot_paid_by_mc_12m n_hospd_p12m
local iout ind_hosp_adm_p12m died_12
foreach x of local ivars {
sum `x' if `x'==1 & adl_impair==1
}
local rn : word count `cvars' `ivars'
local r=1
local c=1
mat tab=J(`rn'+3,6,.)
mat stars=J(`rn'+3,6,0)

gen adl_impair1=1
gen adl_impair2=1 if adl_impair==0
gen adl_impair3=1 if adl_impair==1
gen adl_impair4=1 if adl_index>=2 & !missing(adl_index)
forvalues adl=1/4 {
	replace adl_impair`adl'=0 if missing(adl_impair`adl')
	foreach x in `cvars' {
		sum `x' if inlist(adl_impair`adl',1) [aw=anfinw]
		mat tab[`r',`c']=r(mean)
		if `adl'>2 {
			svy, subpop(if adl_impair2==1 | adl_impair`adl'==1): mean `x', ///
			over(adl_impair2)
			test [`x']0=[`x']1
			mat tab[`r',`c'+1]=r(p)
			mat stars[`r',`c'+1]=(r(p)<.05)+(r(p)<.01)
}
		local r=`r'+1
}
	foreach x in `ivars' {
		qui sum `x' if inlist(adl_impair`adl',1)
		local denom=r(mean)*r(N)
		sum `x' if inlist(adl_impair`adl',1) [aw=anfinw]
		if `denom'>=11 mat tab[`r',`c']=r(mean)*100
		if `adl'>2 {
			svy, subpop(if adl_impair2==1 | adl_impair`adl'==1): tab `x' adl_impair2
			mat tab[`r',`c'+1]=e(p_Pear)
			mat stars[`r',`c'+1]=(e(p_Pear)<.05)+(e(p_Pear)<.01)
}
		local r=`r'+1
}
	local r=`r'+1
	sum n if inlist(adl_impair`adl',1) [aw=anfinw]
	mat tab[`r',`c']=r(N)
	mat tab[`r'+1,`c']=r(sum)
	local r=1
	local c=`c'+1
	if `adl'==3 local c=`c'+1
}
mat rownames tab=`cvars' `ivars' "_" "N" "National Estimate"

frmttable using "`logpath'function.rtf", statmat(tab) addtable title("Sample Characteristics") ///
ctitles("" "Full Sample" "Non-ADL dependent" "ADL dependent 1+" "P" "ADL dependent 2+" "P") ///
sdec(2) varlabels annotate(stars) asymbol(*,**) ///
 note("NHATS wave 1 SP interviews, restricted to those with 12m FFS Medicare" ///
"ADL impairment defined as having assistance in 1+ ADL")

/*table 2
Weighted %
p-value
sensitivity=Indicator and ADL/All ADL
specificity=No Indicator or ADL/All non-ADL
PPV=Indicator and ADL/All Indicator
NPV=No indicator or ADL/All non-indicator
C-statistic=AUC
*/

//note--3/7/18--added indicator of 2 and/or 3
local vars `dme' bed_or_chair ind_fri mult_fri oxy ind_snf_12m ind_hh_12m ///
ind_snf_or_hh_12m ///
fri_hh_snf fri_oxy hh_snf_oxy fri_hh_snf_oxy ind_2 ind_3

local rn : word count `vars' 1 1 


local replace replace
forvalues timethrough=1/3 {
preserve
foreach dem in all {
replace adl_impair=0 if adl_index<`timethrough'
mat tab`dem'=J(`rn',9,.)
mat stars`dem'=J(`rn',9,0)
local r=1
local c=1

foreach i in "0,1" "0" "1" {
	foreach x of local vars {
		sum `x' if inlist(adl_impair,`i')
		if r(mean)*r(N)>=11	mat tab`dem'[`r',`c']=r(mean)*r(N)
		sum `x' if inlist(adl_impair,`i') [aw=anfinw]
		*mat tab`dem'[`r',`c'+1]=r(mean)*100
		if "`i'"=="1" & !inlist("`x'","bedpan","urinal"){
			*svy: tab adl_impair `x'
			*mat tab`dem'[`r',`c'+2]=e(p_Pear)
			*mat stars`dem'[`r',`c'+2]=(e(p_Pear)<.05)+(e(p_Pear)<.01)
			tab `x' adl_impair , matcell(cell) chi2
			mat tab`dem'[`r',`c'+1]=r(p)
			mat stars`dem'[`r',`c'+1]=(r(p)<.05)+(r(p)<.01)
			mat tab`dem'[`r',`c'+2]=(cell[2,2]/(cell[2,2]+cell[1,2]))*100
			mat tab`dem'[`r',`c'+3]=(cell[1,1]/(cell[2,1]+cell[1,1]))*100
			mat tab`dem'[`r',`c'+4]=(cell[2,2]/(cell[2,2]+cell[2,1]))*100
			mat tab`dem'[`r',`c'+5]=(cell[1,1]/(cell[1,2]+cell[1,1]))*100
			roctab adl_impair `x'
			mat tab`dem'[`r',`c'+6]=r(area)
}
		local r=`r'+1
}
	local r=`r'+1
	sum n if inlist(adl_impair,`i') [aw=anfinw]
	mat tab`dem'[`r',`c']=r(N)
	*mat tab`dem'[`r'+1,`c']=r(sum)
	local r=1
	local c=`c'+1
}
keep if dem_3_cat==1
mat rownames tab`dem'=`vars' "_" "N" 
}
restore
/*local vars `dme' ind_fri mult_fri ind_snf_12m ind_hh_12m ind_snf_or_hh_12m ///
fri_hh_snf fri_oxy hh_snf_oxy fri_hh_snf_oxy
*/
foreach x of local vars {
	local lab : var label `x'
	di "`lab'"
	local lab "`lab' \      % \"
	local rows `rows'`lab'
	local sdec `sdec'0,0,0,2\2,2,2,2\
	di "`sdec'"
}

local sdec `sdec'0,0,0,0\2,2,2,2\0,0,0,0
local sdec 0,0,0,2,2,2,2,2,2
frmttable using "`logpath'function.rtf", statmat(taball)  ctitles("" "Full Sample" ///
"Non-ADL dependent" "ADL dependent" "P-value" "Sensitivity" "Specificity" "PPV" "NPV" ///
"AUC") title("SR and claims-based function") ///
annotate(starsall) asymbol(*,**) sdec(`sdec') varlabels ///
note("NHATS wave 1 SP interviews, restricted to those with 12m FFS Medicare" ///
"ADL impairment defined as having assistance in `timethrough'+ ADLs") ///
addtable
local replace addtable


}

local vars age_lt75 age_lt85 age_85 inccat1 inccat2 inccat3 inccat4 ///
female white black hisp other_race married educ_hs_ind ///
medicaid medigap srh_fp adl_impair hb1 hb2 hb3 hb4 prob_dem adl_2 adl_3 ///
sr_cancer_ever

foreach x in sr_cancer_ever prob_dem married female educ_hs_ind {
	gen no_`x'=`x'==0 if !missing(`x')
}
label var no_sr_c "No cancer"
label var no_prob "Not demented"
label var no_marr "Not married"
label var no_fem "Male"
label var no_edu "Education: <HS"

local vars n sr_cancer_ever no_sr_cancer_ever prob_dem no_prob_dem ///
inccat1 inccat2 inccat3 inccat4 hb1 hb2 hb3 hb4 ///
white black hisp other_race age_lt75 age_lt85 age_85 married no_married ///
female no_female educ_hs_ind no_educ_hs_ind
label var n "Full Sample"
local group bed_or_chair ind_fri oxy ind_snf_or_hh_12m fri_hh_snf_oxy

label var fri_hh_snf_oxy "Any HH/SNF/FRI/Oxy"
label var ind_snf_or_hh_12m "Any HH/SNF"



local rn: word count `vars' 

local cn : word count `group' 

mat tab=J(`rn',`cn',.)
mat stars=J(`rn',`cn',0) 
local r=1
local c=1

foreach x of local vars {
	foreach g of local group {
		roctab adl_impair `g' if `x'==1
		mat tab[`r',`c']=r(area)
		local c=`c'+1
}
	local c=1
	local r=`r'+1
}



mat rownames tab=`vars'
mat colnames tab=`group'

frmttable using "`logpath'function.rtf", statmat(tab) varlabels sdec(2) annotate(stars) asymbol(*,**) ///
title ("C-Statistics, stratified by characteristics") addtable


local rn: word count `vars' 

local cn : word count `group' `group'

mat tab=J(`rn',`cn',.)
mat stars=J(`rn',`cn',0) 
local r=1
local c=1

foreach x of local vars {
	foreach g of local group {
		logit adl_impair `g' if `x'==1, or
		mat beta=e(b)
		mat tab[`r',`c']=exp(beta[1,1])
		mat p=r(table)
		scalar p=p[4,1]
		mat tab[`r',`c'+1]=p
		mat stars[`r',`c'+1]=(p<.05)+(p<.01)
		local c=`c'+2
}
	local c=1
	local r=`r'+1
}

foreach x of local group {
	local colnames `colnames' `x' P 
}

mat rownames tab=`vars'
mat colnames tab=`colnames'

frmttable using "`logpath'function.rtf", statmat(tab) varlabels sdec(2) annotate(stars) asymbol(*,**) ///
title ("Bivariate Odds Ratios, stratified by characteristics") substat(1) addtable


H="old--Self-Report from NHATS vs. Claims Tables"
clear all 
set more off
capture log close

local intpath "E:\nhats\data\Projects\serious_ill\int_data"
local datapath "E:\nhats\data\Projects\serious_ill\final_data"
local logpath "E:\nhats\data\Projects\serious_ill\logs\"

cd `datapath'
log using `logpath'\nhats_dme_function.smcl, replace

use serious_ill_nhats_sample if wave==1

local vars n nonh sp_ivw_yes nomiss ffs_12m

gen nonh=!nhres
label var nonh "SP interview eligible (not nursing home resident)"
gen n=1
label var n "Total Wave 1"
gen nomiss=!missing(adl_index)
label var nomiss "With responses to ADL questions"
label var sp_ivw_yes "SP interview conducted"

mat tab=J(5,1,.)
local r=1

foreach x in `vars' {
	sum n if `x'==1
	mat tab[`r',1]=r(N)
	drop if `x'!=1
	local r=`r'+1
}

mat rownames tab=`vars'

frmttable using "`logpath'tables.rtf", statmat(tab) replace title("Sample Derivation") ///
sdec(0) varlabels

use serious_ill_nhats_sample if wave==1 & sp_ivw==1 & ffs_12m==1 & ///
!missing(adl_index), clear
foreach x of varlist device* {
	local device `device' `x'
}

svyset varunit [pw=anfinw], strata(varstrat)
*replace adl_impair=0 if adl_index==1

gen caneorwalker=cane==1 | walker==1
local dme cane walker caneorwalker commode urinal bedpan tub_toil_dev lift bed chair //oxy
gen n=1

label var caneorwalker "Cane or walker from DME"
label var cane "Cane from DME"
label var walker "Walker from DME"
label var commode "Commode from DME"
label var urinal "Urinal from DME"
label var bedpan "Bedpan from DME"
label var tub_toil_dev "Toilet/tub/shower assistive device from DME"
label var lift "Lift, transfer board, safety belt/harness/vest from DME"
label var bed "Hospital bed from DME"
label var chair "Wheelchair from DME"
label var oxy "Oxygen from DME"

foreach x of local dme {
	replace `x'=0 if `x'==.
}

gen n_fri=0

foreach x of local dme {
	replace n_fri=n_fri+1 if `x'==1
}
gen ind_fri=n_fri>=1 if !missing(n_fri)
label var ind_fri "Any mobility indicator from DME"
label var n_fri "Count of mobility indicators from DME"
gen mult_fri=n_fri>=2
label var mult_fri "Indicator of multiple mobility indicators from DME"

foreach x in `dme' ind_fri mult_fri n_fri {
	tab adl_impair `x', col nokey chi2
}


sum `dme' ind_fri mult_fri n_fri
tab1 `dme' ind_fri mult_fri n_fri

/*
gen ind_snf_12m=snf_paid_by_mc_12m>0
gen ind_hh_12m=hh_paid_by_mc_12m>0
*/

gen ind_snf_12m=n_snf_days_12m>0 & !missing(n_snf_days_12m)
gen ind_snf_or_hh_12m=ind_snf_12m==1 | ind_hh_12m==1
replace ind_hh_12m=0 if missing(ind_hh_12)
label var ind_snf_12m "Any SNF utilization"
label var ind_hh_ "Any HH utilization"
label var ind_snf_or_hh "Any HH or SNF utilization"

gen fri_hh_snf_oxy=ind_fri==1 | ind_snf_or_hh==1 | oxy==1
label var fri_hh_snf_oxy "Any HH, SNF, oxygen, or mobility indicator from DME"
gen fri_hh_snf =ind_snf_or_hh==1 | ind_fri==1
label var fri_hh_snf "Any HH, SNF, or mobility indicator from DME"
gen hh_snf_oxy=ind_snf_or_hh==1 | oxy==1
label var hh_snf_oxy "Any HH, SNF, or oxygen from DME"
gen fri_oxy =ind_fri | oxy
label var fri_oxy "Any mobility indcator or oxygen from DME"
gen bed_or_chair=bed==1 | chair==1
label var bed_or_chair "Hospital bed or wheelchair from DME"




/////Tables



tab cane_nhats cane, matcell(Cane)
tab walker_nhats walker, matcell(Walker)
tab wheelchr_nhats chair, matcell(Wheelchair)
tab com_nhats commode,matcell(Commode)
tab bathtoi_nhats tub_toil_dev, matcell(Tub_Toilet)

mat list cane



foreach x in Cane Walker Wheelchair Commode Tub_Toilet {
if "`x'"!="Cane" local add addtable
if "`x'"=="Cane" local title Cane
if "`x'"=="Walker" local title Walker
if "`x'"=="Wheelchair" local title Wheelchair
if "`x'"=="Commode" local title Commode/Bedpan/Urinal
if "`x'"=="Tub_Toilet" local title Shower/Tub/Toilet Assistive Device
frmttable using "E:\nhats\projects\Serious_Ill\FRI\20180309\tab.doc", replace statmat(`x') ///
sdec(0) ctitle("NHATS/DME", No, Yes) rtitle(No\ Yes) ///
title("`title'") `add'
}


tab cane_nhats adl_bath_diff 


foreach x in cane walker wheelchr com bathtoi {
tab `x'_nhats adl_impair, matcell(`x')
}

foreach x in cane walker wheelchr com bathtoi {
//if "`x'"!="cane" local add addtable
if "`x'"=="cane" local title Cane
if "`x'"=="walker" local title Walker
if "`x'"=="wheelchr" local title Wheelchair
if "`x'"=="com" local title Commode/Bedpan/Urinal
if "`x'"=="bathtoi" local title Shower/Tub/Toilet Assistive Device
frmttable using "E:\nhats\projects\Serious_Ill\FRI\20180309\tab.doc", replace statmat(`x') ///
sdec(0) ctitle("NHATS/ADL Impairment", No, Yes) rtitle(No\ Yes) ///
title("`title'") addtable
}


capture drop any_dev_nhats
gen any_dev_nhats=1 if cane_nhats==1 | walker_nhats==1 | wheelchr_nhats==1 | com_nhats==1
replace any_dev_nhats=0 if cane_nhats==0 & walker_nhats==0 & wheelchr_nhats==0 & com_nhats==0 

tab any_dev_nhats adl_impair, matcell(any)
frmttable using "E:\nhats\projects\Serious_Ill\FRI\20180309\tab.doc", replace statmat(any) ///
sdec(0) ctitle("Any Device NHATS/ADL Impairment", No, Yes) rtitle(No\ Yes) ///
title("`title'") addtable

H="xxxxxBasic Tabs for checks FRI Project--not in use"
clear all 
set more off
capture log close

local intpath "E:\nhats\data\Projects\serious_ill\int_data"
local datapath "E:\nhats\data\Projects\serious_ill\final_data"
local logpath "E:\nhats\data\Projects\serious_ill\logs\"

cd `datapath'
*log using `logpath'\nhats_dme_function.txt, text replace

use serious_ill_nhats_sample if wave==1

duplicates drop spid, force

drop adl_eat_help adl_dres_help adl_index
merge 1:1 spid wave using "E:\nhats\data\NHATS cleaned\sp_round_1_6_public_sens_only.dta",  ///
keepusing(insdhlp oftgoarea oflvslepr bedhlp dreshlp dresoft toilhlp bathhlp ///
showrbat1 showrbat2 showrbat3 eathlp eatdev outoft ntlvrmslp bathtoi_nhats adl_dres_help ///
adl_eat_help adl_index) keep(match)
drop _merge

local vars n nonh sp_ivw_yes nomiss ffs_12m

gen nonh=!nhres
label var nonh "SP interview eligible (not nursing home resident)"
gen n=1
label var n "Total Wave 1"
//created new adl_index var b/c we want to keep people who even answered one adl question
egen adl_index_new=rowtotal(adl_*_help) 
tab adl_index_new 


gen nomiss=!missing(adl_index_new)
label var nomiss "With responses to atleast 1 ADL question"
label var sp_ivw_yes "SP interview conducted"

mat tab=J(5,1,.)
local r=1

foreach x in `vars' {
	sum n if `x'==1
	mat tab[`r',1]=r(N)
	drop if `x'!=1
	local r=`r'+1
}

mat rownames tab=`vars'

frmttable using "`logpath'table.rtf", statmat(tab) replace title("Sample Derivation") ///
sdec(0) varlabels

use serious_ill_nhats_sample if wave==1 & sp_ivw==1 & ffs_12m==1, clear 
//& !missing(adl_index), clear
foreach x of varlist device* {
	local device `device' `x'
}
tab bathtoi
tab adl_dres_help
tab adl_eat_help
drop bathtoi adl_dres_help adl_eat_help
merge 1:1 spid wave using "E:\nhats\data\NHATS cleaned\sp_round_1_6_public_sens_only.dta",  ///
keepusing(insdhlp oftgoarea oflvslepr bedhlp dreshlp dresoft toilhlp bathhlp ///
showrbat1 showrbat2 showrbat3 eathlp eatdev outoft ntlvrmslp bathtoi_nhats adl_dres_help ///
adl_eat_help adl_index ) keep(match)
drop _merge
//new variable definition taken
tab bathtoi
tab adl_dres_help
tab adl_eat_help

egen adl_index_new=rowtotal(adl_*_help)
tab adl_index_new

keep if !missing(adl_index_new)

gen adl_impair_new=1 if adl_index_new>0 & !missing(adl_index_new)
replace adl_impair_new=0 if adl_index_new==0

svyset varunit [pw=anfinw], strata(varstrat)
*replace adl_impair=0 if adl_index==1

gen caneorwalker=cane==1 | walker==1
local dme cane walker caneorwalker commode urinal bedpan tub_toil_dev lift bed chair //oxy
gen n=1

label var caneorwalker "Cane or walker from DME"
label var cane "Cane from DME"
label var walker "Walker from DME"
label var commode "Commode from DME"
label var urinal "Urinal from DME"
label var bedpan "Bedpan from DME"
label var tub_toil_dev "Toilet/tub/shower assistive device from DME"
label var lift "Lift, transfer board, safety belt/harness/vest from DME"
label var bed "Hospital bed from DME"
label var chair "Wheelchair from DME"
label var oxy "Oxygen from DME"

foreach x of local dme {
	replace `x'=0 if `x'==.
}

gen n_fri=0

foreach x of local dme {
	replace n_fri=n_fri+1 if `x'==1
}
gen ind_fri=n_fri>=1 if !missing(n_fri)
label var ind_fri "Any mobility indicator from DME"
label var n_fri "Count of mobility indicators from DME"
gen mult_fri=n_fri>=2
label var mult_fri "Indicator of multiple mobility indicators from DME"

foreach x in `dme' ind_fri mult_fri n_fri {
	tab adl_impair_new `x', col nokey chi2
}


sum `dme' ind_fri mult_fri n_fri
tab1 `dme' ind_fri mult_fri n_fri

/*
gen ind_snf_12m=snf_paid_by_mc_12m>0
gen ind_hh_12m=hh_paid_by_mc_12m>0
*/

gen ind_snf_12m=n_snf_days_12m>0 & !missing(n_snf_days_12m)
gen ind_snf_or_hh_12m=ind_snf_12m==1 | ind_hh_12m==1
replace ind_hh_12m=0 if missing(ind_hh_12)
label var ind_snf_12m "Any SNF utilization"
label var ind_hh_ "Any HH utilization"
label var ind_snf_or_hh "Any HH or SNF utilization"

gen fri_hh_snf_oxy=ind_fri==1 | ind_snf_or_hh==1 | oxy==1
label var fri_hh_snf_oxy "Any HH, SNF, oxygen, or mobility indicator from DME"
gen fri_hh_snf =ind_snf_or_hh==1 | ind_fri==1
label var fri_hh_snf "Any HH, SNF, or mobility indicator from DME"
gen hh_snf_oxy=ind_snf_or_hh==1 | oxy==1
label var hh_snf_oxy "Any HH, SNF, or oxygen from DME"
gen fri_oxy =ind_fri | oxy
label var fri_oxy "Any mobility indcator or oxygen from DME"
gen bed_or_chair=bed==1 | chair==1
label var bed_or_chair "Hospital bed or wheelchair from DME"




////////////////////




local adl insdhlp oftgoarea oflvslepr bedhlp dreshlp ///
dresoft toilhlp bathhlp showrbat1 showrbat2 showrbat3 ///
eathlp eatdev 
foreach x in `adl'{
tab `x', matcell(`x')
}

foreach x in insdhlp eathlp{
mat rownames `x'= "-8 DK" "-7 RF" "-1 Inapplicable" "1 YES" "2 NO"
}

mat rownames dreshlp= "-7 RF" "-1 Inapplicable" "1 YES" "2 NO"

mat rownames bathhlp= "-8 DK"  "-1 Inapplicable" "1 YES" "2 NO"


foreach x in bedhlp toilhlp showrbat1 showrbat2 ///
showrbat3  {
mat rownames `x'= "-8 DK" "-7 RF" "1 YES" "2 NO"  
}

mat rownames oftgoarea= "-8 DK" "-7 RF" "-1 Inapplicable" ///
"1 EVERY DAY (7 DAYS A WEEK)" "2 MOST DAYS (5-6 DAYS A WEEK)" "3 SOME DAYS (2-4 DAYS A WEEK)" ///
"4 RARELY (ONCE A WEEK OR LESS)" "5 NEVER" 

mat rownames dresoft= "-8 DK" "-7 RF" ///
"1 EVERY DAY (7 DAYS A WEEK)" "2 MOST DAYS (5-6 DAYS A WEEK)" "3 SOME DAYS (2-4 DAYS A WEEK)" ///
"4 RARELY (ONCE A WEEK OR LESS)" "5 NEVER" 

mat rownames oflvslepr= "-1 Inapplicable" ///
"1 EVERY DAY (7 DAYS A WEEK)" "2 MOST DAYS (5-6 DAYS A WEEK)" "3 SOME DAYS (2-4 DAYS A WEEK)" ///
"4 RARELY (ONCE A WEEK OR LESS)" "5 NEVER" 

mat rownames eatdev= "-8 DK" "-7 RF" "1 YES" "2 NO" ///
"7 ALWAYS FED THROUGH IV OR TUBE"

foreach x in `adl' {
if "`x'"!="eatdev" local add addtable
if "`x'"=="insdhlp" local title "Got Help Inside"
if "`x'"=="oftgoarea" local title "How Often Go Other Areas"
if "`x'"=="oflvslepr" local title "How Often Leave Bedroom"
if "`x'"=="bedhlp" local title "Got Help Out of Bed"
if "`x'"=="dreshlp" local title "Anyone Help Get Dressed"
if "`x'"=="dresoft" local title "Often you Get Dressed"
if "`x'"=="toilhlp" local title "Anyone Help you use Toilet"
if "`x'"=="bathhlp" local title "Anyone Help Shower Bath Other"
if "`x'"=="showrbat1" local title "Showered"
if "`x'"=="showrbat2" local title "Took Baths in a Tub"
if "`x'"=="showrbat3" local title "Washed Some Other Way"
if "`x'"=="eathlp" local title "Did Anyone Help You Eat"
if "`x'"=="eatdev" local title "Ever Use Adapted Utensils"
frmttable using "E:\nhats\projects\Serious_Ill\FRI\20180521\tab.doc", replace statmat(`x') ///
sdec(0) title("`title'") `add'
}

/*frmttable using "E:\nhats\projects\Serious_Ill\FRI\20180521\tab.doc", replace statmat(any) ///
sdec(0) ctitle("Any Device NHATS/ADL Impairment", No, Yes) rtitle(No\ Yes) ///
title("`title'") addtable


H="Part 7 Nhats setup round 1-6 changes made to round 1 "
capture log close
clear all
set more off
local logs E:\nhats\nhats_code\NHATS data setup\logs\

local r1raw E:\nhats\data\NHATS Public\round_1\
local r2raw E:\nhats\data\NHATS Public\round_2\
local r3raw E:\nhats\data\NHATS Public\round_3\
local r4raw E:\nhats\a\NHATS Public\round_4\
local r5raw E:\nhats\data\NHATS Public\round_5\
local r6raw E:\nhats\data\NHATS Public\round_6\
//local r7raw E:\nhats\data\NHATS Public\round_7\
local work E:\nhats\data\NHATS working data
local r1s E:\nhats\data\NHATS Sensitive\r1_sensitive\
local r2s E:\nhats\data\NHATS Sensitive\r2_sensitive\
local r3s E:\nhats\data\NHATS Sensitive\a\
local r4s E:\nhats\data\NHATS Sensitive\r4_sensitive\
local r5s E:\nhats\data\NHATS Sensitive\r5_sensitive\
local r6s E:\nhats\data\NHATS Sensitive\r6_sensitive\
local logs E:\nhats\nhats_code\NHATS data setup\logs\



//7/13/17--add in metro/nonmetro var
use "E:\nhats\data\NHATS Public\NHATS_Round_1_6_MetNonmet_STATA\NHATS_Round_1_6_MetNonmet.dta", clear
forvalues i=1/6 {
gen metro_ind`i'=r`i'd==1 if inrange(r`i'd,1,2)
}
reshape long metro_ind, i(spid) j(wave)
label var metro_ind "Lives in metropolitan area"
tempfile metro
save `metro'

cd "`work'"
use round_1_6_clean_helper_added.dta
merge 1:1 spid wave using `metro', keep(match master) nogen

//10/15/2018--adverse vars
local ha laun shop meal bank
local sc eat bath toil dres
local mo out insd bed

forvalues i=1/6{
	foreach x in `ha'{
		capture gen adverse_`x'=0
		replace adverse_`x'=1 if ha`i'`x'wout==1 & wave==`i'
		replace adverse_`x'=. if inlist(ha`i'`x'wout, -9, -8, -7, -1) & wave==`i'
	}
}
	
forvalues i=1/6{
	foreach x in `sc'{
		capture gen adverse_`x'=0
		replace adverse_`x'=1 if sc`i'`x'wout==1 & wave==`i'
		replace adverse_`x'=. if inlist(sc`i'`x'wout, -9, -8, -7, -1) & wave==`i'
	}
}

forvalues i=1/6{
	foreach x in `mo'{
		capture gen adverse_`x'=0
		replace adverse_`x'=1 if mo`i'`x'wout==1 & wave==`i'
		replace adverse_`x'=. if inlist(mo`i'`x'wout, -9, -8, -7, -1) & wave==`i'
	}
}

//10/11/2018 adding number of living children
egen num_chld=rowmax(cs*dnumchild)
replace num_chld=. if num_chld==-1
label var num_chld "Number of Living Children" 

// 8/10/2018 Add in 2011 weight for rd5,6 
egen an2011wgt=rowmax(w*an2011wgt0)
drop w*an2011wgt0
label var an2011wgt "2011 weights"

gen trfinwgt=.
gen tr2011wgt=.
forvalues w=1/6{
replace trfinwgt=w`w'trfinwgt0 if wave==`w'
capture replace tr2011wgt=w`w'tr2011wgt0 if wave==`w'
}
drop w*trfinwgt0 w*tr2011wgt0

//Add in 7/3/18
gen serarmfor=.
foreach w in 1 5{
	replace serarmfor=1 if va`w'serarmfor==1 & wave==`w'
	replace serarmfor=0 if va`w'serarmfor==2 & wave==`w'
	replace serarmfor=-7 if va`w'serarmfor==-7 & wave==`w'
	replace serarmfor=-8 if va`w'serarmfor==-8 & wave==`w'
}
label var serarmfor "Served in Armed Forces"

//Add in 4/27---FRI specific code
gen insdhlp=mo1insdhlp 
label val insdhlp mo1insdhlp
gen oftgoarea=mo1oftgoarea
label val oftgoarea mo1oftgoarea 
gen oflvslepr=mo1oflvslepr 
label val oflvslepr mo1oflvslepr 
gen bedhlp=mo1bedhlp 
label val bedhlp mo1bedhlp
gen dreshlp=sc1dreshlp
label val dreshlp sc1dreshlp
gen dresoft=sc1dresoft 
label val dresoft sc1dresoft
gen toilhlp=sc1toilhlp 
label val toilhlp sc1toilhlp
gen bathhlp=sc1bathhlp 
label val bathhlp sc1bathhlp
gen showrbat1=sc1showrbat1 
label val showrbat1 sc1showrbat1
gen showrbat2=sc1showrbat2 
label val showrbat2 sc1showrbat2
gen showrbat3=sc1showrbat3 
label val showrbat3 sc1showrbat3 
gen eathlp=sc1eathlp 
label val eathlp sc1eathlp
//gen eatdev=sc1eatdev 
//label val eatdev sc1eatdev
gen outoft=mo1outoft
label val outoft mo1outoft
//gen ntlvrmslp=fl1ntlvrmslp
//label val ntlvrmslp fl1ntlvrmslp

//Add in 4/6/18---FRI project and then implemented throughout code.
egen dresslf=rowmax(sc*dresslf)
label val dresslf sc2dresslf
label var dresslf "Often you Dress Yourself"

egen dresdif=rowmax(sc*dresdif)
label val dresdif sc2dresdif
label var dresdif "Difficulty when using Special Items by Self"

egen ntlvrmslp=rowmax(fl*ntlvrmslp)
label val ntlvrmslp fl2ntlvrmslp 
label var ntlvrmslp "Often had to Stay in Bed"

egen eatdev=rowmax(sc*eatdev)
label val eatdev sc2eatdev
label var eatdev "Ever use Adapted Utensils"


////// 4/2/2018--Adding in income quartile
sort wave
forvalues w=1/6{
xtile income_quart`w'=aveincome [aw=w`w'anfinwgt0] if wave==`w', nq(4) 
}
egen income_quart=rowmax(income_quart*)

forvalues w=1/6{
drop income_quart`w'
}

label var income_quart "Quartile of Income"
///// 3/26/18 --Adding in Hospice and place died variables.

egen placedied=rowmax(pd*placedied)
label value pd2placedied placedied
label var placedied "Place of Death"
replace placedied=. if inlist(placedied,-1,-8)
replace placedied=6 if placedied==91

egen hospice1=rowmax(pd*hospice1)
egen hospice2=rowmax(pd*hospice2)
egen hospicelml=rowmax(pd*hospcelml)

replace hospice2=. if inlist(hospice2,-1,-8) 

foreach x in hospice1 hospicelml {
replace `x'=. if inlist(`x',-1,-8)
replace `x'=0 if `x'==2
} 
 
label var hospice1 "Hopsice at Nursing Home"
label var hospice2 "Hospice Other Place"
label var hospicelml "Hospice Care in Last Month"
 
 
///// 3/14/18 --Adding in Frailty underlying series

//activities done twice (grip test, walk test..)

forvalues i=1/2{
capture drop gripsc`i'
egen gripsc`i'= rowmax(gr*grp`i'rdng)
egen walksec`i'= rowmax(wa*wlkc`i'secs)
egen walkhndr`i'=rowmax(wa*wlk`i'hndr)
replace gripsc`i'=. if inlist(gripsc`i', -1, -9, -7, -8)
replace walksec`i'=. if inlist(walksec`i', -1, -9, -7, -8)
replace walkhndr`i'=. if inlist(walkhndr`i', -1, -9, -7, -8)
}

label var gripsc1 "GRP1 Display Reading"
label var gripsc2 "GRP2 Display Reading"
label var walksec1 "Secs Hld Walking Course1"
label var walksec2 "Secs Hld Walking Course2"
label var walkhndr1 "Hnrds Hld Walking Course1"
label var walkhndr2 "Hnrds Hld Walking Course2"
/*
forvalues i=1/2{
capture drop walk`i'
if `i'==1 egen walk`i'=rowmax(wa*wlkc1secs)  
if `i'==2 egen walk`i'=rowmax(wa*wlk1hndr)
replace walk`i'=. if inlist(walk`i', -1, -9, -7, -8)
}
rename walk1 walksec
rename walk2 walkhnrds
label var walk1 "Secs Hld Walking Course)
*/

foreach x in origwksc nhatswksc nhatsgrav nhatsgrb{
capture drop `x'
gen `x'=.
forvalues w=1/6 {
replace `x'=r`w'd`x' if  inlist( r`w'd`x', 0, 1, 2, 3, 4)
}
}

label var origwksc "Original Walk Score"
label var nhatswksc "NHATS Walk Score"
label var nhatsgrav "NHATS Avg. Grip Score"
label var nhatsgrb "NHATS Best Grip Score"


local a lst10pnds trytolose 
local b evrgowalk vigoractv

foreach x in `a' `b'{
capture drop `x'
gen `x'=.
}

forvalues w=1/6{
foreach x in `a'{
replace `x'=0 if inlist(hw`w'`x', 2, -8, -7) 
replace `x'=1 if hw`w'`x'==1
}
foreach y in `b'{
replace `y'=0 if inlist(pa`w'`y', 2, -8, -7) 
replace `y'=1 if pa`w'`y'==1
}
}

label var lst10pnds "Lost 10 Pounds in Last Yr."
label var trytolose "Were You Trying to Lose Weight"
label var evrgowalk "Ever Go Walking for Exercise"
label var vigoractv "Ever Vigorous Activities"


capture drop unwgtloss lowphysact
gen unwgtloss=. 
gen lowphysact=.
replace unwgtloss=0 if lst10pnds==0 | trytolose==1
replace unwgtloss=1 if lst10pnds==1 & trytolose==0
replace lowphysact=0 if evrgowalk==1 | vigoractv==1
replace lowphysact=1 if evrgowalk==0 & vigoractv==0

label var unwgtloss "Unintentional Weight Loss"
label var lowphysact "Low Physical Activity"

capture drop lowenrgy
egen lowenrgy=rowmax(ss*lowenergy)
replace lowenrgy=. if inlist(lowenrgy, -9, -8, -7, -1)
replace lowenrgy=0 if lowenrgy==2
label var lowenrgy "Low Energy in Last Month"


///// 3/7/18 --Adding in Well-Being questions 
/// Inapplicable is people who have no interview, had a proxy, or died. turned to missing. 

foreach j in 1 2 4 {
	forvalues i=1/4 {
		capture drop wbq`j'`i'
		gen wbq`j'`i'=.
	}
}
drop wbq44

forvalues w=1/6 {
forvalues i=1/4 {
	replace wbq1`i'=1 if wb`w'offelche`i'==4 
	replace wbq1`i'=2 if wb`w'offelche`i'==3 
	replace wbq1`i'=3 if wb`w'offelche`i'==2 
	replace wbq1`i'=4 if wb`w'offelche`i'==1 
	replace wbq1`i'=0 if wb`w'offelche`i'==5 
	replace wbq1`i'=5 if wb`w'offelche`i'==-7 | wb`w'offelche`i'==-8
	}
	}

label var wbq11 "Often you Feel Cheerful"
rename wbq11 oftcheer 
label define oftcheer 0 "Never" 1 "Rarely (Once a Week or Less)" 2 "Some Days(2-4 Days a Week)" ///
3 "Most Days(5-6 Days a Week)" 4 "Every Day (7 Days a Week)" 5 "RF/DK"
label values oftcheer oftcheer
label var wbq12 "Often you Feel Bored"
rename wbq12 oftbored
label values oftbored oftcheer
label var wbq13 "Often you Feel Full of Life"
rename wbq13 oftfol
label values oftfol oftcheer
label var wbq14 "Often you Feel Upset"
rename wbq14 oftupset
label values oftupset oftcheer


forvalues w=1/6 {
	forvalues i=1/4 {
	replace wbq2`i'=1 if wb`w'truestme`i'==3 
	replace wbq2`i'=2 if wb`w'truestme`i'==2 
	replace wbq2`i'=3 if wb`w'truestme`i'==1 
	replace wbq2`i'=4 if wb`w'truestme`i'==-7 | wb`w'truestme`i'==-8
	}
}

label var wbq21 "Life has Meaning Purpose"
rename wbq21 lifemean 
label define lifemean 1 "Agree Not at All" 2 "Agree a Little" 3 "Agree A Lot" 4 "RF/DK"
label values lifemean lifemean
label var wbq22 "Feels Confident"
rename wbq22 confident
label values confident lifemean
label var wbq23 "Gave up Improving Life"
rename wbq23 giveup
label values giveup lifemean
label var wbq24 "Likes Living Situation"
rename wbq24 livingsit
label values livingsit lifemean

forvalues w=1/6 {
	forvalues i=1/3 {
	replace wbq4`i'=1 if wb`w'agrwstmt`i'==3 
	replace wbq4`i'=2 if wb`w'agrwstmt`i'==2 
	replace wbq4`i'=3 if wb`w'agrwstmt`i'==1 
	replace wbq4`i'=4 if wb`w'agrwstmt`i'==-7 | wb`w'agrwstmt`i'==-8
	}
}

label var wbq41 "Self Determination"
rename wbq41 selfdeter 
label values selfdeter lifemean
label var wbq42 "Want-Finds Way to Do"
rename wbq42 findway
label values findway lifemean
label var wbq43 "Easily Adjust to Change"
rename wbq43 adjchg
label values adjchg lifemean
	

capture drop agefeel
egen agefeel= rowmax(wb*ageyofeel) 
replace agefeel=. if agefeel==-9 | agefeel==-8 | agefeel==-7 | agefeel==-1
label var agefeel "Age you Feel Most Times"



///// 3/5/18 --Adding in FRI questions from round 1 ---FRI specific code

foreach x in cane walker wheelchr {
capture drop `x'_nhats
gen `x'_nhats=fl1`x'
replace `x'_nhats=. if fl1`x'==-9 | (fl1`x'==-1 & sp_ivw==0) 
replace `x'_nhats=0 if fl1`x'==-1 & sp_ivw==1
label var `x'_nhats "`x' from NHATS"
}

capture drop com_nhats
recode sc1usvartoi1 (2=0) (-9 -1=.), gen(com_nhats)

capture drop bathtoi_nhats
gen bathtoi_nhats=. if wave==1 //if sc1dbathdevi==3 | sc1dbathdevi==4 | sc1dtoildevi==3 | sc1dtoildevi==4
replace bathtoi_nhats=0 if (sc1dbathdevi==1 & sc1dtoildevi==1) | (ho1bathamen3==2 & ho1bathamen4==2 & ho1bathamen5==2 & ho1bathamen6==2)
replace bathtoi_nhats=1 if sc1dbathdevi==2 | sc1dtoildevi==2 | ho1bathamen3==1 | ho1bathamen4==1 | ho1bathamen5==1 | ho1bathamen6==1


///// 3/2/18 --Adding in meal skippped questions; update 3/13 added in EW18
//missing if in NH-FQ, dead, in NH-FQ R1 & R2

capture drop mealskip1 nopayhous nopayutil nopaymed
local ew mealskip1 nopayhous nopayutil nopaymed
foreach x in `ew'{
gen `x'=.
}

foreach x in `ew'{
forvalues w=2/6 {
replace `x'=0 if ew`w'`x'==2 
replace `x'=1 if ew`w'`x'==1
replace `x'=2 if ew`w'`x'==-7 | ew`w'`x'==-8
}
}

label var mealskip1 "No Money, Meals Skipped"
label var nopayhous "No Money for Housing"
label var nopayutil "No Money for Utilities"
label var nopaymed "No Money for Medical"

label define mealskip 0 "No" 1 "Yes" 2 "RF/DK"
foreach x in `ew' {
label values `ew' mealskip
}
rename mealskip1 mealskip

capture drop mealskipnum
gen mealskipnum=.

forvalues w=2/6 {
replace mealskipnum=0 if ew`w'mealskip2==-1 & ew`w'mealskip1==2
replace mealskipnum=1 if ew`w'mealskip2==4
replace mealskipnum=2 if ew`w'mealskip2==3
replace mealskipnum=3 if ew`w'mealskip2==2
replace mealskipnum=4 if ew`w'mealskip2==1
replace mealskipnum=5 if ew`w'mealskip2==-7 | ew`w'mealskip2==-8
}

label var mealskipnum "How Often Meals Skipped"
label define mealskipnum1 0 "No" 1 "A Few Days" 2 "Several Days(less than half)" ///
3 "More than Half the Days" 4 " Nearly Every Day" 5 "RF/DK"
label values mealskipnum mealskipnum1


///// 12/5/17 --Adding in Cancer 

// recode hc1cancerty1 (-1 2=0) (-9 -8 =.), gen (sr_skincancer_had)

// From sensitive data
recode hc1cancerty1 hc1cancerty2 hc1cancerty3 hc1cancerty4 hc1cancerty5 ///
hc1cancerty6 hc1cancerty7 hc1cancerty8 (-1 2=0) (-9 -8 =.), gen (sr_skincancer_had sr_breastcancer_had sr_prostatecancer_had sr_bladdercancer_had ///
sr_crvovrnutrncancer_had sr_coloncancer_had sr_kidneycancer_had sr_othercancer_had)

//keep sr_breastcancer_had sr_prostatecancer_had sr_bladdercancer_had ///
//sr_crvovrnutrncancer_had sr_coloncancer_had sr_kidneycancer_had sr_othercancer_had


//recoding all refuse, dk, na, as missing
qui destring *, replace
foreach x of varlist * {
	replace `x'=. if inlist(`x',-1,-7,-8,-9)
}


//how do you get to the doctor?
gen howgetdoc=.
forvalues i=1/9 {
	forvalues j=1/6 {
		replace howgetdoc=`i' if mc`j'hwgtregd`i'==1 & wave==`j'
}
}
label define howgetdoc 1 "Drove" 2 "Got a Ride" 3 "Van/Shuttle from place lives" 4 "Van/Shuttle for seniors & disabled" 5 "Pulic transit" 6 "Taxi" 7 "Walked" 8 "Home visit" 9 "Other" 0 "Did not See Doctor" 10 "Refused/DK"
label values howgetdoc howgetdoc


//note 11/14/17--add importance of activities
gen ind_imp_visit=.
gen ind_imp_relig=.
gen ind_imp_club=.
gen ind_imp_goout=.

forvalues w=1/6 {
replace ind_imp_visit=inlist(pa`w'impvstfam,1,2) if wave==`w'
replace ind_imp_relig=inlist(pa`w'imprelser,1,2) if wave==`w'
replace ind_imp_club=inlist(pa`w'imparclub,1,2) if wave==`w'
replace ind_imp_goout=inlist(pa`w'impouteny,1,2) if wave==`w'
}
label var ind_imp_visit "Very/somewhat important to visit in person with friends/family"
label var ind_imp_relig "Very/somewhat important to attend religious services"
label var ind_imp_club "Very/somewhat important to participate in clubs, classes, etc."
label var ind_imp_goout "Very/somewhat important to go out for enjoyment"

foreach x in out insd bed {
	gen device_`x'=.
}

foreach x in eat bath toil dres {
	gen device_`x'=.
}
forvalues w=1/6 {
foreach x in out insd bed {
	replace device_`x'=mo`w'd`x'devi==2 if inlist(mo`w'd`x'devi,1,2) & wave==`w'
}

foreach x in eat bath toil dres {
	replace device_`x'=sc`w'd`x'devi==2 if inlist(sc`w'd`x'devi,1,2) & wave==`w'
}
replace device_bath=0 if sc`w'dbathdevi==9 & wave==`w'
}

gen device_any=0
foreach x in out ins bed eat bath toil dres {
	replace device_any=1 if device_`x'==1
}
label var device_any "Uses any assistive device for ADLs"

gen drives=.
forvalues w=1/6 {
replace drives=dt`w'oftedrive>0 & dt`w'oftedrive<5 if wave==`w'
}
label var drives "Drives"

gen avoids=.
forvalues w=1/6 {
replace avoids=0 if dt`w'oftedrive>0 & dt`w'oftedrive!=5
local avoids dt`w'avoidriv1 dt`w'avoidriv2 dt`w'avoidriv4

foreach x of varlist `avoids' {
	replace avoids=1 if `x'==1
	replace `x'=. if `x'<0
}
}
label var avoids "Avoids driving alone/at night/in weather*"

gen miss=0
gen ind_transp_disadv=.

forvalues w=1/6 {
replace ind_transp_disadv=0 if (dt`w'oftedrive==. | inlist(dt`w'oftedrive,5,6)) & wave==`w'
local probs pa`w'trkpfrvis pa`w'trprrelsr pa`w'trprkpfgr pa`w'trprgoout
foreach x in `probs' {
replace ind_transp_disadv=1 if `x'==1 & wave==`w'
gen `x'2=`x'==1 if `x'>=0 & !missing(`x') & wave==`w'
replace `x'=`x'2
drop `x'2
replace miss=miss+1 if missing(`x') & wave==`w'
}
}
replace ind_transp_disadv=0 if !miss & missing(ind_transp_disadv)
replace ind_transp_disadv=. if miss==4
label var ind_transp_disadv "Any transportation disadvantage"
drop miss

local lab1 Walked
local lab2 Got ride
local lab3 Van or shuttle provided by place of residence
local lab4 Van or shuttle for seniors
local lab5 Public transportation
local lab6 Taxi
local lab7 Other
local l=1

forvalues i=1/7 {
gen get_places`i'=.
}
forvalues w=1/6 {
replace dt`w'getoplcs3=0 if !missing(dt`w'getoplcs7) & missing(dt`w'getoplcs3)
forvalues x=1/7  {
	replace get_places`x'=dt`w'getoplcs`x'==1 if wave==`w'
	replace get_places`x'=. if (inlist(dt`w'getoplcs7,-1,.) | dt`w'getoplcs`x'==.) & wave==`w'
	label var get_places`x' "Get places: `lab`l''"
	local l=`l'+1
}
}
//marital status-3 vars: married, married_or_partnered

gen married=maritalstat==1 if maritalstat!=. //married
gen marital_sep=maritalstat==3 if !mi(maritalstat)
gen marital_div=maritalstat==4 if !mi(maritalstat)
gen marital_wid=maritalstat==5 if !mi(maritalstat)
gen marital_nev=maritalstat==6 if !mi(maritalstat)
gen marriedpartnered=married
replace marriedpartnered=1 if maritalstat==2 //living with a partner
gen marital_sd=marital_sep
replace marital_sd=1 if marital_div==1

label var married "Married"
label var marriedpartnered "Married or Live w/ Partner"

//lives with spouse
gen resspouse=.
forvalues i=1/6 {
	replace resspouse=hh`i'livwthspo==1 if wave==`i' & hh`i'livwthspo>0
	replace resspouse=0 if marriedpart==0
}
label var resspouse "Lives with Spouse/Partner"

//household members
gen hhm=.
forvalues i=1/6 {
	replace hhm=hh`i'dhshldnum if hh`i'dhshldnum>0 & wave==`i'
}
label var hhm "Number of household members"

//age categorical

sort spid wave
by spid: replace age=age[_n-1]+1 if missing(age)

gen agecat = .
forvalues i=1/6 {
replace agecat= r`i'd2intvrage if wave==`i'
}
replace agecat=. if agecat==-1
label values agecat r1d2intvrage
label var agecat "Age, 5 yr categories"

//activities past month

gen attrelig=. //attend services
gen imprelig=. //importance of religious services
gen visitfrfam=. //visit fr. fam.
gen impvisit=. //importance of visiting friends & fam
gen attclub=. //participate in club, organized activity, class, etc.
gen impclub=. //importance of such activities
gen vigact=. //vigorous activities

forvalues i=1/6 {
	replace attrelig=pa`i'attrelser==1 if pa`i'attrelser>0 & wave==`i'
	replace imprelig=pa`i'imprelser if pa`i'imprelser>0 & wave==`i' 
	replace visitfrfam=pa`i'vistfrfam==1 if pa`i'vistfrfam>0 & wave==`i'
	replace impvisit=pa`i'impvstfam if pa`i'impvstfam>0 & wave==`i'
	replace attclub=pa`i'clbmtgrac==1 if pa`i'clbmtgrac>0 & wave==`i'
	replace impclub=pa`i'imparclub if pa`i'imparclub>0 & wave==`i'
	replace vigact=pa`i'vigoractv==1 if pa`i'vigoractv>0 & wave==`i'
}

gen religvimp=imprelig==1 if imprelig!=. //very important binary

label var attrelig "Past mo. Attend religious services"
label var imprelig "Importance of religious services"
label var religvimp "Religious services very important, yes/no"
label var visitfrfam "Past mo. visit friends or family"
label var impvisit "Importance of visiting friends/family"
label var attclub "Past mo. participate in clubs/classes/organized activities"
label var impclub "Importance of club/class/etc. participation"
label var vigact "Past mo. engage in vigorous activity"

label values imprelig pa1imprelser
label values impvisit pa1impvstfam
label values impclub pa1imparclub

//smokin'
gen smokedever=. 
gen smoke_start_age=.
gen smoke_stop_age=.
forvalues i=1(4)5 {
	replace smokedever=sd`i'smokedreg==1 if wave==`i' & sd`i'smokedreg>0
	replace smoke_start_age=sd`i'agesrtsmk if wave==`i' & sd`i'agesrtsmk>0
	replace smoke_stop_age=sd`i'agelstsmk if wave==`i' & sd`i'agelstsmk>0
}

sort spid wave
by spid: carryforward smoke*, replace
gen smokesnow=.
by spid, sort: egen numcigsever=max(sd1numcigday)
gen numcigsnow=.


forvalues i=1/6 {
	replace smokesnow=sd`i'smokesnow==1 if wave==`i' & sd`i'smokesnow>0
	replace numcigsnow=sd`i'numcigday if wave==`i' & smokesnow==1
}
replace smokedever=1 if smokesnow==1
replace smokesnow=0 if smokedever==0
replace numcigsnow=0 if smokesnow==0

label var smokedever "Ever smoked"
label var smokesnow "Smokes now"
label var numcigsever "Number of cigarettes/day when smoked"
label var numcigsnow "Number of cigarettes/day currently"
label var smoke_start_age "Age started smoking"
label var smoke_stop_age "Age stopped smoking"

//pain
gen ind_pain=.
forvalues i=1/6 {
	replace ind_pain=ss`i'painb==1 if inrange(ss`i'painb,0,2) & wave==`i'
}
label var ind_pain "Bothered by pain"

//weight

gen wgt_curr=.
gen height_ft=.
gen height_in=.

forvalues i=1/6 {
	replace wgt_curr=hw`i'currweigh if hw`i'currweigh>0 & wave==`i'
	replace height_ft=hw`i'howtallft if hw`i'howtallft>0 & wave==`i'
	replace height_in=hw`i'howtallin if hw`i'howtallin>0 & wave==`i'
}

label var wgt_curr "Current weight, lbs."
label var height_ft "Current height, feet"
label var height_in "Current height, inches"

gen bmi=(wgt_curr/((height_ft*12+height_in)^2))*703

label var bmi "Current BMI"

//get the per round weight, cluster, and strata vars (and why is moved created like that?)
gen moved=.
rename w1varunit varunit
rename w1varstrat varstrat
rename w1anfinwgt0 anfinwgt

forvalues i=2/6 {
	replace moved=w`i'_moved if wave==`i'
	foreach x in anfinwgt varstrat varunit {
		replace `x'=w`i'`x' if wave==`i'
}
drop w`i'_moved w`i'anfinwgt0 w`i'varstrat w`i'varunit 
}

******************************************
/*these are taken from Rebecca's code*/

gen community_dwelling = 0
replace community_dwelling = 1 if r1dresid == 1 | r1dresid == 2 | r2dresid == 1 | r2dresid == 2 | r3dresid == 1 | r3dresid == 2 | r4dresid == 1 | r4dresid == 2 
gen SP_completed = 0
replace SP_completed = 1 if r1dresid == 1 | r1dresid == 2 | r2dresid == 1 | r2dresid == 2 | r2dresid == 4 | r3dresid == 1 | r3dresid == 2 | r3dresid == 4 | r4dresid == 1 | r4dresid == 2 | r4dresid == 4

gen nhres=r1dresid==4 if r1dresid!=.
gen rcfres=inlist(r1dresid,2,3) if r1dresid!=.
gen res_care=r1dresid>1 if r1dresid!=.
gen sp_status=1 
gen deceased=0
gen prob_dem=dem_3_cat==1 if !missing(dem_3_cat)
label var prob_dem "Indicator probable dementia"
forvalues i=2/6 {
	replace nhres=inlist(r`i'dresid,4,5,8) if wave==`i'
	replace res_care=inlist(r`i'dresid,2,3,4,5,7,8) if wave==`i'
	replace rcfres=inlist(r`i'dresid,2,3,7) if wave==`i'
	replace deceased=inlist(r`i'status,62,86) if wave>=`i'
}

replace sp_status=2 if res_care==1
replace sp_status=3 if nhres==1
replace sp_status=4 if deceased==1
label var sp_status "Residential status"
label var nhres "Nursing Home Resident"
label var rcfres "Residential Care, excl. NH"
label var res_care "Residential Care, incl. NH"
label define sp_status 1 "Non-res care community" 2 "Res-care not NH" 3 "NH resident" ///
4 "Deceased"
label values sp_status sp_status

//these ADL variables were missing previously
gen adl_ins_help = .
gen adl_ins_diff=.
gen adl_ins_not_done=.

foreach w in 1 2 3 4 5 6{
	replace adl_ins_help=1 if mo`w'insdhlp==1 & wave==`w'
	replace adl_ins_help=0 if mo`w'insdhlp==2 & wave==`w'
	replace adl_ins_help=0 if mo`w'insdhlp==-1 & sp_ivw==1 & wave==`w'
	replace adl_ins_help=-7 if mo`w'insdhlp==-7 & wave==`w'
	replace adl_ins_help=-8 if mo`w'insdhlp==-8 & wave==`w'
	replace adl_ins_diff=0 if mo`w'insddif==1 & wave==`w'
	replace adl_ins_diff=1 if mo`w'insddif>1 & wave==`w'
	replace adl_ins_diff=0 if mo`w'insddif==-1 & sp_ivw==1 & wave==`w'
	replace adl_ins_diff=-7 if mo`w'insddif==-7 & wave==`w'
	replace adl_ins_diff=-8 if mo`w'insddif==-8 & wave==`w'
	replace adl_ins_not_done=inlist(mo`w'dinsdsfdf,1,8) if wave==`w'
}

*replace adl_ins_dif=1 if adl_ins_help==1
label var adl_ins_help "Received help getting around inside"

gen adl_bed_help = .
gen adl_bed_diff=.
gen adl_bed_not_done=.
foreach w in 1 2 3 4 5 6{
	replace adl_bed_help=1 if mo`w'bedhlp==1 & wave==`w'
	replace adl_bed_help=0 if mo`w'bedhlp==2 & wave==`w'
	replace adl_bed_help=0 if mo`w'bedhlp==-1 & sp_ivw==1 & wave==`w'
	replace adl_bed_help=-7 if mo`w'bedhlp==-7 & wave==`w'
	replace adl_bed_help=-8 if mo`w'bedhlp==-8 & wave==`w'
	replace adl_bed_diff=0 if mo`w'beddif==1 & wave==`w'
	replace adl_bed_diff=1 if mo`w'beddif>1 & wave==`w'
	replace adl_bed_diff=0 if mo`w'beddif==-1 & sp_ivw==1 & wave==`w'
	replace adl_bed_diff=-7 if mo`w'beddif==-7 & wave==`w'
	replace adl_bed_diff=-8 if mo`w'beddif==-8 & wave==`w'
	replace adl_bed_not_done=inlist(mo`w'dbedsfdf,1,8) if wave==`w'
}
label var adl_bed_help "Received help getting out of bed"
*replace adl_bed_diff=1 if adl_bed_help==1
//construct date of ivw--use 1st of month for all, because only have mo & yr

gen ivw_day=1
label define ivw_day 1 "Not provided" 
label values ivw_day ivw_day
gen ivw_month=.
gen ivw_year=.
forvalues i=1/6 {
	replace ivw_month=r`i'spstatdtmt if wave==`i'
	replace ivw_month=r`i'fqstatdtmt if wave==`i' & r`i'spstatdtmt==.
	replace ivw_year=r`i'spstatdtyr if wave==`i'
	replace ivw_year=201`i' if wave==`i' & r`i'spstatdtyr==.
}
replace ivw_month=r1fqstatdtmt if wave==1 & ivw_month==.
replace ivw_year=r1fqstatdty if wave==1 & ivw_year==.

/// Changes to Dressing and Eating
/*These changes were made because the help varaibles were not capturing everyone 
who may have been impaired for the ADL*/ 
replace adl_dres_help=1 if dresoft==5
replace adl_eat_help=1 if eatdev==7
replace adl_ins_help=1 if ntlvrmslp==1

gen adl_index=0
foreach i in eat bath toil dres bed ins {
replace adl_index=adl_index+adl_`i'_help if adl_`i'_help>0
}
*gen adl_index=adl_eat_help+adl_bath_help+adl_toil_help+adl_dres_help+adl_ins_help+adl_bed_help
replace adl_index=. if adl_index<0
gen adl_independent=adl_index==0 if adl_index!=.
gen adl_impair=adl_index>0 if adl_index!=.
gen iadl_index=iadl_laun_help+iadl_shop_help+iadl_bank_help+iadl_meal_help+iadl_meds_help
replace iadl_index=. if iadl_index<0
gen iadl_independent=iadl_index==0 if iadl_index!=.
gen iadl_impair=iadl_index>0 if iadl_index!=.
foreach x in adl iadl {
	egen `x'_diff_index=rowtotal(`x'*diff)
	gen `x'_diff_ind=`x'_diff_index>=1 if !missing(`x'_diff_index)
}
label var adl_independent "Independent in ADLs"
label var adl_impair "Help with 1+ ADL"
label var adl_index "Index of help w/ ADLs"
label var iadl_independent "Independent in IADLs"
label var iadl_impair "Help with 1+ IADL"
label var iadl_index "Index of help w/ IADLs"

gen ivw_date=mdy(ivw_month,ivw_day,ivw_year)
format ivw_date %td

//addition of variables from Eric's homebound code
gen meals_wheels=.
gen noone_talk=.
gen restrnt_takeout=.

forvalues i=1/6 {
replace meals_wheels=ha`i'dmealwhl if wave==`i'
replace noone_talk=fl`i'noonetalk if wave==`i'
replace restrnt_takeout=ha`i'dmealtkot if wave==`i'
foreach x in meals_wheels noone_talk restrnt_takeout {
replace `x'=0 if `x'==.
}
}

//pull in date of death, constructed from claims and nhats
merge m:1 spid using "E:\nhats\data\20180625 NHATS CMS Data\death_date.dta", nogen

gen died_12=mofd(death_date)-mofd(ivw_date)<=12
gen died_24=mofd(death_date)-mofd(ivw_date)<=24
//note-the following has been superseded by the death date using claims
/*

//use status to get death
gen died_12=.
gen died_24=.
forvalues i=1/3 {
replace died_12=inlist(r`=`i'+1'status,62,86) if wave==`i' & r`=`i'+1'status!=79
}
forvalues i=1/2 {
replace died_24=inlist(r`=`i'+2'status,62,86) if wave==`i' & !inlist(r`=`i'+2'status,79,.)
}
replace died_24=1 if died_12==1

foreach i in 12 24 {
label var died_`i' "SP died w/in `i' months, per future wave status"
}*/

//update 8/2/17--pulled in nhats dod to share off server

//look at death month & year. don't have, so set date to last of month
gen dd=.
replace pd2yrdied=pd2yrdied+2010 if pd2yrdied>0
gen nhats_death_day=. 
forvalues i=2/6 {
	foreach j in mth yr {
		replace pd`i'`j'died=. if pd`i'`j'<0
}
	replace nhats_death_day=31 if inlist(pd`i'm,1,3,5,7,8,10,12)
	replace nhats_death_day=30 if inlist(pd`i'm,4,6,9,11)
	replace nhats_death_day=28 if inlist(pd`i'm,2)
	replace dd=mdy(pd`i'mthdied,nhats_death_day,pd`i'yrdied) if pd`i'yrdied>0 & pd`i'yrdied!=.
}

by spid, sort: egen nhats_death_date=max(dd)
label var nhats_death_date "SP death date, from tracker (day imputed)"
format nhats_death_date %td
gen nhats_death_month=month(nhats_death_date)
gen nhats_death_year=year(nhats_death_date)
foreach x in month year {
label var nhats_death_date "SP death `x', from tracker"
}

drop dd

gen eligible_nsoc=fl1dnsoc==1
gen completed_nsoc=fl1dnsoccomp>0 if fl1dnsoccomp!=.
gen total_caregiver_comp=fl1dnsoccomp if fl1dnsoccomp>0 & fl1dnsoccomp!=.
gen total_caregiver_elig=fl1dnsoccnt if fl1dnsoccnt>0 & fl1dnsoccnt!=.
label var eligible  "Eligible for NSOC interview, wave 1 tracker"
label var complete  "Completed Interview"
label var total_caregiver_comp "Total Caregivers that Completed Interview"
label var total_caregiver_elig "Total Caregivers Eligible for NSOC"
rename r*status round*status

//adverse consequences of unmet need

gen adverse=0
forvalues i=1/6 {
	foreach x of varlist ha`i'*out sc`i'*out {
		replace adverse=1 if `x'==1 & wave==`i'
}
}
label var adverse "Any adverse consequence of unmet need (excluding mobility)"


label var adverse_laun "Ever go w/o clean laundry"
label var adverse_shop "Ever go w/o groceries/personal items"
label var adverse_meal "Ever go w/o hot meal"
label var adverse_bank "Ever go w/o handling bills and banking matters" 
label var adverse_eat "Ever go w/o eating"
label var adverse_bath "Ever go w/o showering/bath/washup"
label var adverse_toil "Ever go w/o using toilet"
label var adverse_dres "Ever go w/o getting dressed"
label var adverse_out "Ever go w/o going outside; stayed inside"
label var adverse_insd "Ever go w/o moving inside b/c unmet need" 
label var adverse_bed "Ever go w/o leaving bed"

//limited favorite activity
capture drop lim_fav
gen lim_fav=.

forvalues i=1/5 { 
	replace lim_fav=pa`i'helmfvact==1 if pa`i'helmfvact>=0 & wave==`i'
}
label var lim_fav "Last month ever kept from favorite activity by health/function"


capture drop lim_fav_yr
////NEW limited favorite activity
gen lim_fav_yr=.
//forvalues i=6 {
	replace lim_fav_yr=pa6fvactlimyr==1 if pa6fvactlimyr>=0 & wave==6
//}
label var lim_fav_yr "Last year ever kept from favorite activity by health/function"


//social cohesion
gen cohesion_knowwell=.
gen cohesion_willing=.
gen cohesion_peop=.

forvalues i=1/6 {
	foreach x in know will peop {
		replace cohesion_`x'=cm`i'`x' if !missing(cm`i'`x') & wave==`i'
}
}
gen cohesion=(cohesion_p+cohesion_k+cohesion_w==3) ///
if !missing(cohesion_k) | !missing(cohesion_w) | !missing(cohesion_p)

label var cohesion_knowwell "People know each other well in the community"
label var cohesion_w "People are willing to help each other in the commmunity"
label var cohesion_p "People can be trusted in the community"
label define cohesion_ 1 "Agree a lot" 2 "Agree a little" 3 "Do not agree"
label values cohesion_* cohesion_
label var cohesion "High community cohesion (Highest on all 3 statements)"

gen home_disorder_insd=.
gen home_disorder_outsd=.
gen home_disorder_area=.
gen home_disorder_clutter=.

forvalues i=1/6 {
	foreach x of varlist ir`i'condihom* ir`i'condhome* ir`i'areacond* ir`i'clutter* {
		replace `x'=. if `x'==7
		qui sum `x'
		if r(max)==2 replace `x'=`x'==1 if !missing(`x')
		if inlist(r(max),3,4) replace `x'=`x'>1 if !missing(`x')
}

	egen insd=rowtotal(ir`i'condihom*)
	egen outsd=rowtotal(ir`i'condhome*)
	egen area=rowtotal(ir`i'areacond*)
	egen clutter=rowtotal(ir`i'clutter*)
	foreach x in insd outsd area clutter {
		replace home_disorder_`x'=`x'>=1 if wave==`i' & !missing(`x')
		drop `x'
}
}

label var home_disorder_insd "Disorder in home (peelng paint, pests, brkn furniture or floorbrds, trippng hazards)"
label var home_disorder_outsd "Disorder outside (brkn windows, foundation, bricks/siding, roof, steps)"
label var home_disorder_clutter "Disorder in home (clutter in interview or other rooms)"
label var home_disorder_area "Disorder in immed area (litter/glass/graffiti/vacant houses/stores/foreclosures)"	

//economic well-being
foreach x of varlist ew* {
	replace `x'=. if `x'<0
}

foreach x in creditdebt medcreditdebt medbillsovertime medpaynotcash finhlpfam ///
fingftfam govtasst {
	gen `x'=.
}

forvalues i=1/6 {
gen creditdebt`i'=inlist(ew`i'pycredbal,2,3) | !missing(ew`i'crecardeb) if ///
 !missing(ew`i'pycredbal) | !missing(ew`i'crecardeb)
gen medcreditdebt`i'=ew`i'credcdmed==1 if !missing(ew`i'credcdmed)
gen medbillsovertime`i'=ew`i'medpaovtm==1 if !missing(ew`i'medpaovtm)
gen medpaynotcash`i'=medbillsovertime==1 | medcreditdebt==1 if !missing(medbillsovertime) | ///
!missing(medcreditdebt)

gen finhlpfam`i'=ew`i'finhlpfam==1 if !missing(ew`i'finhlpfam)
gen fingftfam`i'= ew`i'fingftfam==1 if !missing(ew`i'finhlpfam)
gen govtasst`i'=ew`i'progneed1==1 | ew`i'progneed2==1 | ew`i'progneed3==1 if !missing(ew`i'progneed1) ///
| !missing(ew`i'progneed2) | !missing(ew`i'progneed3)
foreach x in creditdebt medcreditdebt medbillsovertime medpaynotcash finhlpfam ///
fingftfam govtasst {
	replace `x'=`x'`i' if wave==`i'
	drop `x'`i'
}
}
replace medpaynotcash=medbillsovertime==1 | medcreditdebt==1 if !missing(medbillsovertime) | !missing(medcreditdebt)

label var creditdebt "Has credit card debt or does not pay off in full monthly"
label var medpaynotcash "Has medical credit card debt or pays bills over time"
label var govtasst "Receives foodstamps or other food or gas/energy assistance"

//home ownership

local homevars ownhome rent mortgagepaidoff paysmortgage mortpaymt ///
timeinmort owedonmort homevalue rentpaid section8

foreach x of local homevars {
	gen `x'=.
}

label var ownhome "SP owns home"
label var rent "SP rents"
label var mortgagepaidoff "Mortgage is paid off"
label var mortpaymt "Mortgage payment"
label define mortpaymt 1 "<$250" 2 "$250-499" 3 "$500-999" 4 "$1000+"
label values mortpaymt mortpaymt
label var timeinmort "Time left in mortgage"
label define timeinmort 1 "5 years" 2 "10 years" 3 "Longer than 10 years"
label values timeinmort timeinmort
label var owedonmort "Amount left on mortgage"
label define owedonmort 1 "<$50,000" 2 "$50,000-99,999.99" 3 "$100,000+"
label values owedonmort owedonmort
label var homevalue "Home value"
label define homevalue 1 "<$50K" 2 "50-75K" 3 "75-100K" 4 "100-200K" 5 "200-300K" ///
6 "300-500K" 7 "500-750K" 8 "$750K+"
label values homevalue homevalue

forvalues i=1/6 {
tab hp`i'ownrentot 
replace ownhome=hp`i'ownrentot==1 if wave==`i' & (!missing(hp`i'ownrento) | res_care==1)
replace rent=hp`i'ownrentot==2 if wave==`i' & (!missing(hp`i'ownrento) | res_care==1)
tab hp`i'mrtpadoff 
replace mortgagepaidoff=hp`i'mrtpadoff==1 if !missing(hp`i'mrtpadoff)
replace paysmortgage=hp`i'mrtpadoff==2 if !missing(hp`i'mrtpadoff)
tab hp`i'mortpaymt 
replace mortpaymt= hp`i'mortpaymt if wave==`i'
qui replace mortpaymt=1 if wave==`i' & hp`i'mthlymort<250
qui replace mortpaymt=2 if wave==`i' & hp`i'mthlymort>=250 & hp`i'mthlymort<=499
qui replace mortpaymt=3 if wave==`i' & hp`i'mthlymort>=500 & hp`i'mthlymort<1000
qui replace mortpaymt=4 if wave==`i' & hp`i'mthlymort>=1000 & !missing(hp`i'mthlymort)
tab hp`i'whnpayoff 
replace timeinmort=hp`i'whnpayoff if wave==`i'
tab hp`i'amoutowed 
replace owedonmort=hp`i'amoutowed if wave==`i'
qui replace owedonmort=1 if wave==`i' & hp`i'amtstlowe<50000 
qui replace owedonmort=2 if wave==`i' & hp`i'amtstlowe>=50000 & hp`i'amtstlowe<=100000
qui replace owedonmort=3 if wave==`i' & hp`i'amtstlowe>=100000 & !missing(hp`i'amtstlowe)
tab hp`i'homvalamt 
replace homevalue= hp`i'homvalamt if wave==`i'
qui replace homevalue=1 if wave==`i' & hp`i'homevalue<50000 & hp`i'homevalue>=0
qui replace homevalue=2 if wave==`i' & hp`i'homevalue>=50000 & hp`i'homevalue<75000
qui replace homevalue=3 if wave==`i' & hp`i'homevalue>=75000 & hp`i'homevalue<100000
qui replace homevalue=4 if wave==`i' & hp`i'homevalue>=100000 & hp`i'homevalue<200000
qui replace homevalue=5 if wave==`i' & hp`i'homevalue>=200000 & hp`i'homevalue<300000
qui replace homevalue=6 if wave==`i' & hp`i'homevalue>=300000 & hp`i'homevalue<500000
qui replace homevalue=7 if wave==`i' & hp`i'homevalue>=500000 & hp`i'homevalue<750000
qui replace homevalue=8 if wave==`i' & hp`i'homevalue>=750000 & !missing(hp`i'homevalue)

tab hp`i'rentamou 
replace rentpaid =hp`i'rentamou if wave==`i'
qui replace rentpaid=1 if wave==`i' & hp`i'rentamt<250 & hp`i'rentamt>=0
qui replace rentpaid=2 if wave==`i' & hp`i'rentamt>=250 & hp`i'rentamt<=499
qui replace rentpaid=3 if wave==`i' & hp`i'rentamt>=500 & hp`i'rentamt<1000
qui replace rentpaid=4 if wave==`i' & hp`i'rentamt>=1000 & !missing(hp`i'rentamt)
qui replace rentpaid=4 if inlist(rentpaid,5,6)
replace mortpaymt=4 if inlist(mortpaymt,5,6)
tab hp1sec8pubsn
replace section8=hp`i'sec8pubsn==1 if wave==`i' & (!missing(hp`i'sec8pubsn) |ownhome==1 | rent==1)
}

label var rentpaid "Amount rent paid"
label define rentpaid 1 "<$250" 2 "250-499" 3 "500-999" 4 "$1000+"
label values rentpaid rentpaid
label var section8 "Indicator lives in Section 8 housing"
label var medcreditdebt "Has Medical credit card debt"
label var medbillsovertime "Pays Medical bills over time"
label var finhlpfam "Received financial help/gifts from family"
label var fingftfam "Provided financial help/gifts to family"
label var paysmortgage "Pays a mortgage"
gen n_social_network=.
forvalues i=1/6 {
	replace n_social_network=sn`i'dnumsn if sn`i'dnumsn>=0 & wave==`i'
}
label var n_social_network "Number in social network"

gen division=.
forvalues w=1/6 {
	replace division=re`w'dcensdiv if re`w'dcensdiv>0 & wave==`w'
}
gen region=division 
recode region (1 2=1) (3 4=2) (5/7=3) (8 9=4)

la define region 1 "Northeast" 2 "Midwest" 3 "South" 4 "West"
label values region region
 
//and now drop all raw variables
forvalues i=1/6 {
	drop r`i'* ip`i'* is`i'* re`i'* hc`i'* ht`i'* hh`i'* ss`i'* fl`i'* ///
	 pc`i'* cp`i'* cg`i'* mo`i'* ha`i'* sc`i'* mc`i'* pa`i'* sd`i'* hw`i'* ///
	 cm`i'* sn`i'* hp`i'* ew`i'* ir`i'* dt`i'* wb`i'* wa`i'* gr`i'* ho`i'* cs`i'*
}

drop el1* rl1* ia1* pd2* pd3* pd4* pd5* pd6* ia3* ia5*

rename round*status r*status

svyset varunit [pw=anfinwgt], strat(varstrat)

sort spid wave
by spid: carryforward educ*, replace
label var educ_hs_ind "Education: HS+"

saveold "E:\nhats\data\NHATS cleaned\sp_round_1_6", replace version(12)

drop death_* died_12 died_24

gen time2d=mofd(nhats_death_date)-mofd(ivw_date)

foreach x in 12 24 {
	gen nhats_died_`x'=time2d<=`x' if !lml
}

drop time2d 

saveold "E:\nhats\data\NHATS cleaned\sp_round_1_6_public_sens_only.dta", replace version(12)


H="Tables 1-3"
clear all 
set more off
capture log close


local intpath "E:\nhats\data\Projects\serious_ill\int_data"
local datapath "E:\nhats\data\Projects\serious_ill\final_data"
local logpath "E:\nhats\data\Projects\serious_ill\logs\"

cd `datapath'
*log using `logpath'\nhats_dme_function.txt, text replace

use serious_ill_nhats_sample if wave==1

duplicates drop spid, force

drop adl_eat_help adl_dres_help adl_index
merge 1:1 spid wave using "E:\nhats\data\NHATS cleaned\sp_round_1_6_public_sens_only.dta",  ///
keepusing(insdhlp oftgoarea oflvslepr bedhlp dreshlp dresoft toilhlp bathhlp ///
showrbat1 showrbat2 showrbat3 eathlp eatdev outoft ntlvrmslp bathtoi_nhats adl_dres_help ///
adl_eat_help adl_index) keep(match)
drop _merge

local vars n nonh sp_ivw_yes nomiss ffs_12m

gen nonh=!nhres
label var nonh "SP interview eligible (not nursing home resident)"
gen n=1
label var n "Total Wave 1"
//created new adl_index var b/c we want to keep people who even answered one adl question
egen adl_index_new=rowtotal(adl_*_help) 
tab adl_index_new 


gen nomiss=!missing(adl_index_new)
label var nomiss "With responses to atleast 1 ADL question"
label var sp_ivw_yes "SP interview conducted"

mat tab=J(5,1,.)
local r=1

foreach x in `vars' {
	sum n if `x'==1
	mat tab[`r',1]=r(N)
	drop if `x'!=1
	local r=`r'+1
}

mat rownames tab=`vars'

frmttable using "`logpath'function.rtf", statmat(tab) replace title("Sample Derivation") ///
sdec(0) varlabels

use serious_ill_nhats_sample if wave==1 & sp_ivw==1 & ffs_12m==1, clear 
//& !missing(adl_index), clear
foreach x of varlist device* {
	local device `device' `x'
}
tab bathtoi
tab adl_dres_help
tab adl_eat_help
drop bathtoi adl_dres_help adl_eat_help
merge 1:1 spid wave using "E:\nhats\data\NHATS cleaned\sp_round_1_6_public_sens_only.dta",  ///
keepusing(insdhlp oftgoarea oflvslepr bedhlp dreshlp dresoft toilhlp bathhlp ///
showrbat1 showrbat2 showrbat3 eathlp eatdev outoft ntlvrmslp bathtoi_nhats adl_dres_help ///
adl_eat_help adl_index ) keep(match)
drop _merge
//new variable definition taken
tab bathtoi
tab adl_dres_help
tab adl_eat_help

egen adl_index_new=rowtotal(adl_*_help)
tab adl_index_new

keep if !missing(adl_index_new)

gen adl_impair_new=1 if adl_index_new>0 & !missing(adl_index_new)
replace adl_impair_new=0 if adl_index_new==0

svyset varunit [pw=anfinw], strata(varstrat)
*replace adl_impair=0 if adl_index==1

gen caneorwalker=cane==1 | walker==1
local dme cane walker caneorwalker commode urinal bedpan tub_toil_dev lift bed chair //oxy
gen n=1

label var caneorwalker "Cane or walker from DME"
label var cane "Cane from DME"
label var walker "Walker from DME"
label var commode "Commode from DME"
label var urinal "Urinal from DME"
label var bedpan "Bedpan from DME"
label var tub_toil_dev "Toilet/tub/shower assistive device from DME"
label var lift "Lift, transfer board, safety belt/harness/vest from DME"
label var bed "Hospital bed from DME"
label var chair "Wheelchair from DME"
label var oxy "Oxygen from DME"

foreach x of local dme {
	replace `x'=0 if `x'==.
}

gen n_fri=0

foreach x of local dme {
	replace n_fri=n_fri+1 if `x'==1
}
gen ind_fri=n_fri>=1 if !missing(n_fri)
label var ind_fri "Any mobility indicator from DME"
label var n_fri "Count of mobility indicators from DME"
gen mult_fri=n_fri>=2
label var mult_fri "Indicator of multiple mobility indicators from DME"

foreach x in `dme' ind_fri mult_fri n_fri {
	tab adl_impair_new `x', col nokey chi2
}


sum `dme' ind_fri mult_fri n_fri
tab1 `dme' ind_fri mult_fri n_fri

/*
gen ind_snf_12m=snf_paid_by_mc_12m>0
gen ind_hh_12m=hh_paid_by_mc_12m>0
*/

gen ind_snf_12m=n_snf_days_12m>0 & !missing(n_snf_days_12m)
gen ind_snf_or_hh_12m=ind_snf_12m==1 | ind_hh_12m==1
replace ind_hh_12m=0 if missing(ind_hh_12)
label var ind_snf_12m "Any SNF utilization"
label var ind_hh_ "Any HH utilization"
label var ind_snf_or_hh "Any HH or SNF utilization"

gen fri_hh_snf_oxy=ind_fri==1 | ind_snf_or_hh==1 | oxy==1
label var fri_hh_snf_oxy "Any HH, SNF, oxygen, or mobility indicator from DME"
gen fri_hh_snf =ind_snf_or_hh==1 | ind_fri==1
label var fri_hh_snf "Any HH, SNF, or mobility indicator from DME"
gen hh_snf_oxy=ind_snf_or_hh==1 | oxy==1
label var hh_snf_oxy "Any HH, SNF, or oxygen from DME"
gen fri_oxy =ind_fri | oxy
label var fri_oxy "Any mobility indcator or oxygen from DME"
gen bed_or_chair=bed==1 | chair==1
label var bed_or_chair "Hospital bed or wheelchair from DME"



/* table 1
demographics, by SR ADL impairment*/

local cvars age aveincome
gen age_lt75=age<=74
gen age_lt85=age>=75 & age<85
gen age_85=age>=85
label var age_lt75 "Age 65-74"
label var age_lt85 "Age 75-84"
label var age_85 "Age 85+"

tab income_cat, gen(inccat)
cap label define income_cat 0 "<15000" 1 "15-29,999" 2 "30-59,999" 3 ">60000"
label values income_cat income_cat
forvalues i=0/3 {
local lab : label income_cat `i'
label var inccat`=`i'+1' "`lab'"
}

foreach x  in cancer dem esrd chf copd diab_compl liver {
	local smi `smi' smi_`x'_ind
}


*gen prob_dem=dem_3_cat==1 if !missing(dem_3)
label var prob_dem "Probable dementia"
cap label define homebound_cat 1 "Homebound" 2 "Semi (Never by Self)" 3 "Semi: Needs Help/Diff" 4 "Not Homebound"
label values homebound_cat homebound_cat
tab homebound, gen(hb)
forvalues i=1/4 {
	local lab: label homebound_cat `i'
	label var hb`i' "`lab'"
}

local help
foreach x of varlist adl*help {
	local help `help' `x'
}
label var educ_hs_ind "Education: HS +"

keep if !missing(adl_index_new)
gen adl_2=adl_index_new>=2 if !missing(adl_index_new)
gen adl_3=adl_index_new>=3 if !missing(adl_index_new)
//note-3/7/18 add indicators for meeting 2 or all 3 criteria
gen ind_2=(ind_fri==1 & oxy==1) | (ind_fri==1 & ind_snf_or_hh==1) | ///
(oxy==1 & ind_snf_or_hh==1)
gen ind_3=ind_fri==1 & oxy==1 & ind_snf_or_hh==1
label var ind_2 "2+ indicators"
label var ind_3 "All 3 indicators"
label var adl_2 "Dependent in 2+ ADLs"
label var adl_3 "Dependent in 3+ ADLs"
local cvars age
local ivars age_lt75 age_lt85 age_85 inccat1 inccat2 inccat3 inccat4 ///
female white black hisp other_race married educ_hs_ind proxy ///
medicaid medigap srh_fp adl_impair_new hb1 hb2 hb3 hb4 prob_dem adl_2 adl_3 ///
`help' /*iadl_independent*/ `pps' `ind_indication' ///
`dmouth' `smi' `device' ind_hosp_adm_12m
local ipps pps100 pps90 pps80 ///
pps70 pps60 pps50 pps40 pps30 
local cout tot_paid_by_mc_12m n_hospd_p12m
local iout ind_hosp_adm_p12m died_12
foreach x of local ivars {
sum `x' if `x'==1 & adl_impair_new==1
}
local rn : word count `cvars' `ivars'
local r=1
local c=1
mat tab=J(`rn'+3,6,.)
mat stars=J(`rn'+3,6,0)

gen adl_impair1=1
gen adl_impair2=1 if adl_impair_new==0
gen adl_impair3=1 if adl_impair_new==1
gen adl_impair4=1 if adl_index_new>=2 & !missing(adl_index_new)
forvalues adl=1/4 {
	replace adl_impair`adl'=0 if missing(adl_impair`adl')
	foreach x in `cvars' {
		sum `x' if inlist(adl_impair`adl',1) [aw=anfinw]
		mat tab[`r',`c']=r(mean)
		if `adl'>2 {
			svy, subpop(if adl_impair2==1 | adl_impair`adl'==1): mean `x', ///
			over(adl_impair2)
			test [`x']0=[`x']1
			mat tab[`r',`c'+1]=r(p)
			mat stars[`r',`c'+1]=(r(p)<.05)+(r(p)<.01)
}
		local r=`r'+1
}
	foreach x in `ivars' {
		qui sum `x' if inlist(adl_impair`adl',1)
		local denom=r(mean)*r(N)
		sum `x' if inlist(adl_impair`adl',1) [aw=anfinw]
		if `denom'>=11 mat tab[`r',`c']=r(mean)*100
		if `adl'>2 {
			svy, subpop(if adl_impair2==1 | adl_impair`adl'==1): tab `x' adl_impair2
			mat tab[`r',`c'+1]=e(p_Pear)
			mat stars[`r',`c'+1]=(e(p_Pear)<.05)+(e(p_Pear)<.01)
}
		local r=`r'+1
}
	local r=`r'+1
	sum n if inlist(adl_impair`adl',1) [aw=anfinw]
	mat tab[`r',`c']=r(N)
	mat tab[`r'+1,`c']=r(sum)
	local r=1
	local c=`c'+1
	if `adl'==3 local c=`c'+1
}
mat rownames tab=`cvars' `ivars' "_" "N" "National Estimate"

frmttable using "`logpath'function.rtf", statmat(tab) addtable title("Sample Characteristics") ///
ctitles("" "Full Sample" "Non-ADL dependent" "ADL dependent 1+" "P" "ADL dependent 2+" "P") ///
sdec(2) varlabels annotate(stars) asymbol(*,**) ///
 note("NHATS wave 1 SP interviews, restricted to those with 12m FFS Medicare" ///
"ADL impairment defined as having assistance in 1+ ADL")

/*table 2
Weighted %
p-value
sensitivity=Indicator and ADL/All ADL
specificity=No Indicator or ADL/All non-ADL
PPV=Indicator and ADL/All Indicator
NPV=No indicator or ADL/All non-indicator
C-statistic=AUC
*/

//note--3/7/18--added indicator of 2 and/or 3
local vars `dme' bed_or_chair ind_fri mult_fri oxy ind_snf_12m ind_hh_12m ///
ind_snf_or_hh_12m ///
fri_hh_snf fri_oxy hh_snf_oxy fri_hh_snf_oxy ind_2 ind_3

local rn : word count `vars' 1 1 


local replace replace
forvalues timethrough=1/3 {
preserve
foreach dem in all {
replace adl_impair_new=0 if adl_index_new<`timethrough'
mat tab`dem'=J(`rn',9,.)
mat stars`dem'=J(`rn',9,0)
local r=1
local c=1

foreach i in "0,1" "0" "1" {
	foreach x of local vars {
		sum `x' if inlist(adl_impair_new,`i')
		if r(mean)*r(N)>=11	mat tab`dem'[`r',`c']=r(mean)*r(N)
		sum `x' if inlist(adl_impair_new,`i') [aw=anfinw]
		*mat tab`dem'[`r',`c'+1]=r(mean)*100
		if "`i'"=="1" & !inlist("`x'","bedpan","urinal"){
			*svy: tab adl_impair `x'
			*mat tab`dem'[`r',`c'+2]=e(p_Pear)
			*mat stars`dem'[`r',`c'+2]=(e(p_Pear)<.05)+(e(p_Pear)<.01)
			tab `x' adl_impair_new , matcell(cell) chi2
			mat tab`dem'[`r',`c'+1]=r(p)
			mat stars`dem'[`r',`c'+1]=(r(p)<.05)+(r(p)<.01)
			mat tab`dem'[`r',`c'+2]=(cell[2,2]/(cell[2,2]+cell[1,2]))*100
			mat tab`dem'[`r',`c'+3]=(cell[1,1]/(cell[2,1]+cell[1,1]))*100
			mat tab`dem'[`r',`c'+4]=(cell[2,2]/(cell[2,2]+cell[2,1]))*100
			mat tab`dem'[`r',`c'+5]=(cell[1,1]/(cell[1,2]+cell[1,1]))*100
			roctab adl_impair_new `x'
			mat tab`dem'[`r',`c'+6]=r(area)
}
		local r=`r'+1
}
	local r=`r'+1
	sum n if inlist(adl_impair_new,`i') [aw=anfinw]
	mat tab`dem'[`r',`c']=r(N)
	*mat tab`dem'[`r'+1,`c']=r(sum)
	local r=1
	local c=`c'+1
}
keep if dem_3_cat==1
mat rownames tab`dem'=`vars' "_" "N" 
}
restore
/*local vars `dme' ind_fri mult_fri ind_snf_12m ind_hh_12m ind_snf_or_hh_12m ///
fri_hh_snf fri_oxy hh_snf_oxy fri_hh_snf_oxy
*/
foreach x of local vars {
	local lab : var label `x'
	di "`lab'"
	local lab "`lab' \      % \"
	local rows `rows'`lab'
	local sdec `sdec'0,0,0,2\2,2,2,2\
	di "`sdec'"
}

local sdec `sdec'0,0,0,0\2,2,2,2\0,0,0,0
local sdec 0,0,0,2,2,2,2,2,2
frmttable using "`logpath'function.rtf", statmat(taball)  ctitles("" "Full Sample" ///
"Non-ADL dependent" "ADL dependent" "P-value" "Sensitivity" "Specificity" "PPV" "NPV" ///
"AUC") title("SR and claims-based function") ///
annotate(starsall) asymbol(*,**) sdec(`sdec') varlabels ///
note("NHATS wave 1 SP interviews, restricted to those with 12m FFS Medicare" ///
"ADL impairment defined as having assistance in `timethrough'+ ADLs") ///
addtable
local replace addtable


}

local vars age_lt75 age_lt85 age_85 inccat1 inccat2 inccat3 inccat4 ///
female white black hisp other_race married educ_hs_ind ///
medicaid medigap srh_fp adl_impair_new hb1 hb2 hb3 hb4 prob_dem adl_2 adl_3 ///
sr_cancer_ever

foreach x in sr_cancer_ever prob_dem married female educ_hs_ind {
	gen no_`x'=`x'==0 if !missing(`x')
}
label var no_sr_c "No cancer"
label var no_prob "Not demented"
label var no_marr "Not married"
label var no_fem "Male"
label var no_edu "Education: <HS"

local vars n sr_cancer_ever no_sr_cancer_ever prob_dem no_prob_dem ///
inccat1 inccat2 inccat3 inccat4 hb1 hb2 hb3 hb4 ///
white black hisp other_race age_lt75 age_lt85 age_85 married no_married ///
female no_female educ_hs_ind no_educ_hs_ind
label var n "Full Sample"
local group bed_or_chair ind_fri oxy ind_snf_or_hh_12m fri_hh_snf_oxy

label var fri_hh_snf_oxy "Any HH/SNF/FRI/Oxy"
label var ind_snf_or_hh_12m "Any HH/SNF"



local rn: word count `vars' 

local cn : word count `group' 

mat tab=J(`rn',`cn',.)
mat stars=J(`rn',`cn',0) 
local r=1
local c=1

foreach x of local vars {
	foreach g of local group {
		roctab adl_impair_new `g' if `x'==1
		mat tab[`r',`c']=r(area)
		local c=`c'+1
}
	local c=1
	local r=`r'+1
}



mat rownames tab=`vars'
mat colnames tab=`group'

frmttable using "`logpath'function.rtf", statmat(tab) varlabels sdec(2) annotate(stars) asymbol(*,**) ///
title ("C-Statistics, stratified by characteristics") addtable


local rn: word count `vars' 

local cn : word count `group' `group'

mat tab=J(`rn',`cn',.)
mat stars=J(`rn',`cn',0) 
local r=1
local c=1

foreach x of local vars {
	foreach g of local group {
		logit adl_impair_new `g' if `x'==1, or
		mat beta=e(b)
		mat tab[`r',`c']=exp(beta[1,1])
		mat p=r(table)
		scalar p=p[4,1]
		mat tab[`r',`c'+1]=p
		mat stars[`r',`c'+1]=(p<.05)+(p<.01)
		local c=`c'+2
}
	local c=1
	local r=`r'+1
}

foreach x of local group {
	local colnames `colnames' `x' P 
}

mat rownames tab=`vars'
mat colnames tab=`colnames'

frmttable using "`logpath'function.rtf", statmat(tab) varlabels sdec(2) annotate(stars) asymbol(*,**) ///
title ("Bivariate Odds Ratios, stratified by characteristics") substat(1) addtable


H="Self Report from NHATS vs. Claims Tables"
clear all 
set more off
capture log close

local intpath "E:\nhats\data\Projects\serious_ill\int_data"
local datapath "E:\nhats\data\Projects\serious_ill\final_data"
local logpath "E:\nhats\data\Projects\serious_ill\logs\"

cd `datapath'
*log using `logpath'\nhats_dme_function.txt, text replace

use serious_ill_nhats_sample if wave==1

duplicates drop spid, force

drop adl_eat_help adl_dres_help adl_index
merge 1:1 spid wave using "E:\nhats\data\NHATS cleaned\sp_round_1_6_public_sens_only.dta",  ///
keepusing(insdhlp oftgoarea oflvslepr bedhlp dreshlp dresoft toilhlp bathhlp ///
showrbat1 showrbat2 showrbat3 eathlp eatdev outoft ntlvrmslp bathtoi_nhats adl_dres_help ///
adl_eat_help adl_index) keep(match)
drop _merge

local vars n nonh sp_ivw_yes nomiss ffs_12m

gen nonh=!nhres
label var nonh "SP interview eligible (not nursing home resident)"
gen n=1
label var n "Total Wave 1"
//created new adl_index var b/c we want to keep people who even answered one adl question
egen adl_index_new=rowtotal(adl_*_help) 
tab adl_index_new 


gen nomiss=!missing(adl_index_new)
label var nomiss "With responses to atleast 1 ADL question"
label var sp_ivw_yes "SP interview conducted"

mat tab=J(5,1,.)
local r=1

foreach x in `vars' {
	sum n if `x'==1
	mat tab[`r',1]=r(N)
	drop if `x'!=1
	local r=`r'+1
}

mat rownames tab=`vars'

frmttable using "`logpath'table.rtf", statmat(tab) replace title("Sample Derivation") ///
sdec(0) varlabels

use serious_ill_nhats_sample if wave==1 & sp_ivw==1 & ffs_12m==1, clear 
//& !missing(adl_index), clear
foreach x of varlist device* {
	local device `device' `x'
}
tab bathtoi
tab adl_dres_help
tab adl_eat_help
drop bathtoi adl_dres_help adl_eat_help
merge 1:1 spid wave using "E:\nhats\data\NHATS cleaned\sp_round_1_6_public_sens_only.dta",  ///
keepusing(insdhlp oftgoarea oflvslepr bedhlp dreshlp dresoft toilhlp bathhlp ///
showrbat1 showrbat2 showrbat3 eathlp eatdev outoft ntlvrmslp bathtoi_nhats adl_dres_help ///
adl_eat_help adl_index ) keep(match)
drop _merge
//new variable definition taken
tab bathtoi
tab adl_dres_help
tab adl_eat_help

egen adl_index_new=rowtotal(adl_*_help)
tab adl_index_new

keep if !missing(adl_index_new)

gen adl_impair_new=1 if adl_index_new>0 & !missing(adl_index_new)
replace adl_impair_new=0 if adl_index_new==0

svyset varunit [pw=anfinw], strata(varstrat)
*replace adl_impair=0 if adl_index==1

gen caneorwalker=cane==1 | walker==1
local dme cane walker caneorwalker commode urinal bedpan tub_toil_dev lift bed chair //oxy
gen n=1

label var caneorwalker "Cane or walker from DME"
label var cane "Cane from DME"
label var walker "Walker from DME"
label var commode "Commode from DME"
label var urinal "Urinal from DME"
label var bedpan "Bedpan from DME"
label var tub_toil_dev "Toilet/tub/shower assistive device from DME"
label var lift "Lift, transfer board, safety belt/harness/vest from DME"
label var bed "Hospital bed from DME"
label var chair "Wheelchair from DME"
label var oxy "Oxygen from DME"

foreach x of local dme {
	replace `x'=0 if `x'==.
}

gen n_fri=0

foreach x of local dme {
	replace n_fri=n_fri+1 if `x'==1
}
gen ind_fri=n_fri>=1 if !missing(n_fri)
label var ind_fri "Any mobility indicator from DME"
label var n_fri "Count of mobility indicators from DME"
gen mult_fri=n_fri>=2
label var mult_fri "Indicator of multiple mobility indicators from DME"

foreach x in `dme' ind_fri mult_fri n_fri {
	tab adl_impair_new `x', col nokey chi2
}


sum `dme' ind_fri mult_fri n_fri
tab1 `dme' ind_fri mult_fri n_fri

/*
gen ind_snf_12m=snf_paid_by_mc_12m>0
gen ind_hh_12m=hh_paid_by_mc_12m>0
*/

gen ind_snf_12m=n_snf_days_12m>0 & !missing(n_snf_days_12m)
gen ind_snf_or_hh_12m=ind_snf_12m==1 | ind_hh_12m==1
replace ind_hh_12m=0 if missing(ind_hh_12)
label var ind_snf_12m "Any SNF utilization"
label var ind_hh_ "Any HH utilization"
label var ind_snf_or_hh "Any HH or SNF utilization"

gen fri_hh_snf_oxy=ind_fri==1 | ind_snf_or_hh==1 | oxy==1
label var fri_hh_snf_oxy "Any HH, SNF, oxygen, or mobility indicator from DME"
gen fri_hh_snf =ind_snf_or_hh==1 | ind_fri==1
label var fri_hh_snf "Any HH, SNF, or mobility indicator from DME"
gen hh_snf_oxy=ind_snf_or_hh==1 | oxy==1
label var hh_snf_oxy "Any HH, SNF, or oxygen from DME"
gen fri_oxy =ind_fri | oxy
label var fri_oxy "Any mobility indcator or oxygen from DME"
gen bed_or_chair=bed==1 | chair==1
label var bed_or_chair "Hospital bed or wheelchair from DME"




/////Tables

gen wheelchr=chair
gen com=commode
gen bathtoi=tub_toil

foreach x in cane walker wheelchr com bathtoi{
sum `x'_nhats if `x'==1 & `x'_nhats==1
local a=`r(N)'
sum `x'_nhats if `x'==0 & `x'_nhats==1
local b=`r(N)'
sum `x' if `x'==1 & `x'_nhats==0
local c=`r(N)'
sum `x' if `x'==0 & `x'_nhats==0
local d=`r(N)'

sum `x'_nhats if `x'_nhats==1 & `x'!=. 
local e=`r(N)'
sum `x'_nhats if `x'_nhats==0 & `x'!=. 
local f=`r(N)'
sum `x' if `x'==1 & `x'_nhats!=.
local g=`r(N)'
sum `x' if `x'==0 & `x'_nhats!=.
local h=`r(N)'

matrix `x'= (`a',`b',`e' \ (`a'/`e')*100 , (`b'/`e')*100 , 100 \ `c',`d',`f' \ (`c'/`f')*100 , (`d'/`f')*100 , 100 \ `g',`h',`g'+`h'\(`g'/(`g'+`h'))*100,(`h'/(`g'+`h'))*100, 100) 

}
tab cane_nhats cane, row
mat list cane



foreach x in cane walker wheelchr com bathtoi {
//if "`x'"!="cane" local add addtable
if "`x'"=="cane" local title Cane
if "`x'"=="walker" local title Walker
if "`x'"=="wheelchr" local title Wheelchair
if "`x'"=="com" local title Commode/Bedpan/Urinal
if "`x'"=="bathtoi" local title Shower/Tub/Toilet Assistive Device
frmttable using "`logpath'table.rtf", replace statmat(`x') ///
sdec(1) ctitle("NHATS/DME", Yes, No, Total) rtitle(Yes\ % \No\% \ Total \ %) ///
title("`title'") addtable
}


tab cane_nhats adl_bath_diff 


foreach x in cane walker wheelchr com bathtoi {

sum `x'_nhats if `x'_nhats==1 & adl_impair_new==1
local a=`r(N)'
sum `x'_nhats if `x'_nhats==1 & adl_impair_new==0
local b=`r(N)'
sum `x'_nhats if `x'_nhats==0 & adl_impair_new==1
local c=`r(N)'
sum `x'_nhats if `x'_nhats==0 & adl_impair_new==0
local d=`r(N)'

sum `x'_nhats if `x'_nhats==1 & adl_impair_new!=.
local e=`r(N)'
sum `x'_nhats if `x'_nhats==0 & adl_impair_new!=.
local f=`r(N)'
sum adl_impair_new if adl_impair_new==1 & `x'_nhats!=.
local g=`r(N)'
sum adl_impair_new if adl_impair_new==0 & `x'_nhats!=.
local h=`r(N)'

matrix `x'= (`a',`b',`e' \ (`a'/`e')*100 , (`b'/`e')*100 , 100 \ `c',`d',`f' \ (`c'/`f')*100 , (`d'/`f')*100 , 100 \ `g',`h',`g'+`h'\(`g'/(`g'+`h'))*100,(`h'/(`g'+`h'))*100, 100) 
}
tab cane_nhats adl_impair_new, row
mat list cane

foreach x in cane walker wheelchr com bathtoi {
//if "`x'"!="cane" local add addtable
if "`x'"=="cane" local title Cane v.s. ADL Impairment
if "`x'"=="walker" local title Walker v.s. ADL Impairment
if "`x'"=="wheelchr" local title Wheelchair v.s. ADL Impairment
if "`x'"=="com" local title Commode/Bedpan/Urinal v.s. ADL Impairment
if "`x'"=="bathtoi" local title Shower/Tub/Toilet Assistive Device v.s. ADL Impairment
frmttable using "`logpath'table.rtf", replace statmat(`x') ///
sdec(1) ctitle("NHATS/ADL Impair", Yes, No, Total) rtitle(Yes\ % \ No\ % \Total \ %) ///
title("`title'") addtable
}


capture drop any_dev_nhats
gen any_dev_nhats=1 if cane_nhats==1 | walker_nhats==1 | wheelchr_nhats==1 | com_nhats==1 | bathtoi_nhats==1
replace any_dev_nhats=0 if cane_nhats==0 & walker_nhats==0 & wheelchr_nhats==0 & com_nhats==0 & bathtoi_nhats==0

sum any_dev_nhats if any_dev_nhats==1 & adl_impair_new==1
local a=`r(N)'
sum any_dev_nhats if any_dev_nhats==1 & adl_impair_new==0
local b=`r(N)'
sum any_dev_nhats if any_dev_nhats==0 & adl_impair_new==1
local c=`r(N)'
sum any_dev_nhats if any_dev_nhats==0 & adl_impair_new==0
local d=`r(N)'

sum any_dev_nhats if any_dev_nhats==1 & adl_impair_new!=.
local e=`r(N)'
sum any_dev_nhats if any_dev_nhats==0 & adl_impair_new!=.
local f=`r(N)'
sum adl_impair_new if adl_impair_new==1 & any_dev_nhats!=.
local g=`r(N)'
sum adl_impair_new if adl_impair_new==0 & any_dev_nhats!=.
local h=`r(N)'

matrix any= (`a',`b',`e' \ (`a'/`e')*100 , (`b'/`e')*100 , 100 \ `c',`d',`f' \ (`c'/`f')*100 , (`d'/`f')*100 , 100 \ `g',`h',`g'+`h'\(`g'/(`g'+`h'))*100,(`h'/(`g'+`h'))*100, 100) 

tab any_dev_nhats adl_impair_new, row
matrix list any

frmttable using "`logpath'table.rtf", replace statmat(any) ///
sdec(1) ctitle("Any Device NHATS/ADL Impairment", Yes, No, Total, %) rtitle(Yes\ % \No\ % \Total \ %)  ///
title("`title'") addtable

 

///DME claim vs adl_impairment 
capture drop dme_cl*
egen dme_cl=rowtotal(cane walker commode urinal bedpan tub_toil_dev lift bed chair)

egen dme_c=rowtotal(cane walker commode urinal bedpan tub_toil_dev lift bed chair oxy ind_snf_or_hh_12m  )

gen dme_cl_1=0
replace dme_cl_1=1 if dme_cl>=1

gen dme_c_1=0
replace dme_c_1=1 if dme_c>=1

tab dme_cl_1 adl_impair_new

//Eat and dress vs DME
capture drop eat_dres
egen eat_dres=rowtotal(device_dres device_eat)
replace eat_dres=1 if eat_dres==2

tab dme_cl_1 eat_dres



sum n if adl_impair>=1 & dme_cl_1==0



preserve
keep if adl_impair_new==1 & dme_cl_1==0

sum eat_dres if eat_dres==1
local a=`r(N)'
sum eat_dres if eat_dres==0
local b=`r(N)'

tab eat_dres

matrix dme= (`a', ((`a'/(`a'+`b'))*100) \ `b', ((`b'/(`a'+`b'))*100) \ `a'+`b', 100)

restore

preserve
keep if adl_impair_new==1 & dme_c_1==0

sum eat_dres if eat_dres==1
local a=`r(N)'
sum eat_dres if eat_dres==0
local b=`r(N)'

tab eat_dres

matrix dme1= (`a', ((`a'/(`a'+`b'))*100) \ `b', ((`b'/(`a'+`b'))*100) \ `a'+`b', 100)
restore

foreach x in dme dme1 {

if "`x'"=="dme" local title ADL Impaired Self Report & DME Sample Excluding Oxygen, HH, & SNF 
if "`x'"=="dme1" local title ADL Impaired Self Report & DME Sample Including Oxygen, HH, & SNF 

frmttable using "`logpath'table.rtf", replace statmat(`x') ///
sdec(1) ctitle("Eating and/or Dressing Device Self Report", Freq., %) rtitle(Yes\ No \ Total)  ///
title("`title'") addtable
}


//put this into the word doc in same format
capture drop tag_dme
egen tag_dme= anymatch(cane walker commode urinal bedpan tub_toil_dev chair), v(1)
label var tag_dme "Claim for any device"

sum device_any if device_any==1 & tag_dme==1
local a=`r(N)'
sum device_any if device_any==1 & tag_dme==0
local b=`r(N)'
sum device_any if device_any==0 & tag_dme==1
local c=`r(N)'
sum device_any if device_any==0 & tag_dme==0
local d=`r(N)'

sum device_any if device_any==1 & tag_dme!=.
local e=`r(N)'
sum device_any if device_any==0 & tag_dme!=.
local f=`r(N)'
sum tag_dme if tag_dme==1 & device_any!=.
local g=`r(N)'
sum tag_dme if tag_dme==0 & device_any!=.
local h=`r(N)'

matrix dev= (`a',`b',`e' \ (`a'/`e')*100 , (`b'/`e')*100 , 100 \ `c',`d',`f' \ (`c'/`f')*100 , (`d'/`f')*100 , 100 \ `g',`h',`g'+`h'\(`g'/(`g'+`h'))*100,(`h'/(`g'+`h'))*100, 100) 
mat list dev

frmttable using "`logpath'table.rtf", replace statmat(dev) ///
sdec(1) ctitle("Self Report/Claims", Yes, No, Total) rtitle(Yes\ % \ No\ % \ Total \ %)  ///
title("Self Report using any Device vs. Claim for any Device") addtable ///
note("Excludes Oxygen & Lift")


tab device_any tag_dme, row


H="xxxxADL Help tables--not in use"
use "E:\nhats\data\NHATS cleaned\sp_round_1_6.dta" , clear

gen adl_dres_help1=adl_dres_help
gen adl_ins_help1=adl_ins_help
gen adl_bed_help1=adl_bed_help
gen adl_eat_help1=adl_eat_help
//egen adl_in=rowtotal(adl_help

replace adl_dres_help1=1 if dresoft==5
replace adl_bed_help1=1 if bedwout==1
replace adl_ins_help1=1 if oflvslepr==5
replace adl_eat_help1=1 if eatwout==1

egen adl_index1= rowtotal(adl_dres_help1 adl_ins_help1 adl_bed_help1 adl_eat_help1 adl_toil_help adl_bath_help)
gen adl_impair1=.
replace adl_impair1=0 if adl_index1==0
replace adl_impair1=1 if inrange(adl_index1,1,7)

local adl adl_dres_help adl_ins_help adl_bed_help adl_eat_help /*adl_index*/ adl_impair 
local adl1 adl_dres_help1 adl_ins_help1 adl_bed_help1 adl_eat_help1 /*adl_index1*/ adl_impair1

mat tab=J(11,6,.)
local r=1
local c=1

forvalues w=1/6 {
foreach x in `adl'{
sum `x' if `x'==0 & wave==`w'
mat tab[`r',`c']=r(N)
local r=`r'+1
sum `x' if `x'==1 & wave==`w'
mat tab[`r',`c']=r(N)
local r=`r'+1
}
sum adl_index if wave==`w'
mat tab[`r',`c']=r(mean)
local r=1
local c=`c'+1
}

mat list tab

frmttable using "E:\Files to move out\Mohammed\20180412\tab.doc", replace statmat(tab) ///
sdec(2) ctitle("Wave:", "1", "2" "3", "4", "5", "6" ) rtitle("ADL Dress Help-No" \ "ADL Dress Help-Yes"\ ///
"ADL Walk Help-No" \ "ADL Walk Help-Yes" \ "ADL Transfer Help-No" \ "ADL Transfer Help-Yes" \  ///
"ADL Eat Help-No" \ "ADL Eat Help-Yes" \ "ADL Impair-No" \ "ADL Impair-Yes" \ "ADL Index (Mean)")  ///
title("Previous Method for Calculating ADLs") note("Full Survey")


/*

local adl insdhlp oftgoarea oflvslepr bedhlp dreshlp ///
dresoft toilhlp bathhlp showrbat1 showrbat2 showrbat3 ///
eathlp eatdev outoft ntlvrmslp

foreach x in `adl'{
tab `x', matcell(`x')
}

foreach x in insdhlp bedhlp toilhlp{
mat rownames `x'= "1 YES" "2 NO"  
}

foreach x in dreshlp eathlp bathhlp{
mat rownames `x'= "-1 Inapplicable" "1 YES" "2 NO"
}

foreach x in showrbat1 showrbat2 showrbat3{
mat rownames `x'= "-7 RF" "1 YES" "2 NO"
}

mat rownames oftgoarea= "-8 DK" "-7 RF" "-1 Inapplicable" ///
"1 EVERY DAY (7 DAYS A WEEK)" "2 MOST DAYS (5-6 DAYS A WEEK)" "3 SOME DAYS (2-4 DAYS A WEEK)" ///
"4 RARELY (ONCE A WEEK OR LESS)" "5 NEVER" 

mat rownames dresoft="-7 RF" "1 EVERY DAY (7 DAYS A WEEK)" "2 MOST DAYS (5-6 DAYS A WEEK)" ///
"3 SOME DAYS (2-4 DAYS A WEEK)" "4 RARELY (ONCE A WEEK OR LESS)" "5 NEVER"

mat rownames oflvslepr= "-1 Inapplicable" "1 EVERY DAY (7 DAYS A WEEK)" "2 MOST DAYS (5-6 DAYS A WEEK)" ///
"3 SOME DAYS (2-4 DAYS A WEEK)" "4 RARELY (ONCE A WEEK OR LESS)"  

mat rownames eatdev= "1 YES" "2 NO" "7 ALWAYS FED THROUGH IV OR TUBE"

mat rownames outoft= "-8 DK" "1 EVERY DAY (7 DAYS A WEEK)" "2 MOST DAYS (5-6 DAYS A WEEK)" /// 
"3 SOME DAYS (2-4 DAYS A WEEK)" "4 RARELY (ONCE A WEEK OR LESS)" "5 NEVER"

mat rownames ntlvrmslp= "-1 Inapplicable"

foreach x in `adl' {
if "`x'"!="insdhlp" local add addtable
if "`x'"=="insdhlp" local title "Got Help Inside"
if "`x'"=="oftgoarea" local title "How Often Go Other Areas"
if "`x'"=="oflvslepr" local title "How Often Leave Bedroom"
if "`x'"=="bedhlp" local title "Got Help Out of Bed"
if "`x'"=="dreshlp" local title "Anyone Help Get Dressed"
if "`x'"=="dresoft" local title "Often you Get Dressed"
if "`x'"=="toilhlp" local title "Anyone Help you use Toilet"
if "`x'"=="bathhlp" local title "Anyone Help Shower Bath Other"
if "`x'"=="showrbat1" local title "Showered"
if "`x'"=="showrbat2" local title "Took Baths in a Tub"
if "`x'"=="showrbat3" local title "Washed Some Other Way"
if "`x'"=="eathlp" local title "Did Anyone Help You Eat"
if "`x'"=="eatdev" local title "Ever Use Adapted Utensils"
if "`x'"=="outoft" local title "Often Go Outside"
if "`x'"=="ntlvrmslp" local title "Did not Leave Bedroom"
frmttable using "E:\nhats\projects\Serious_Ill\FRI\20180425\tab.doc", replace statmat(`x') ///
sdec(0) title("`title'") `add'
}




mat tab1=J(11,6,.)
local r=1
local c=1

forvalues w=1/6 {
foreach x in `adl1'{
sum `x' if `x'==0 & wave==`w'
mat tab1[`r',`c']=r(N)
local r=`r'+1
sum `x' if `x'==1 & wave==`w'
mat tab1[`r',`c']=r(N)
local r=`r'+1
}
sum adl_index1 if wave==`w'
mat tab1[`r',`c']=r(mean)
local r=1
local c=`c'+1
}
mat list tab1

frmttable using "E:\Files to move out\Mohammed\20180412\tab.doc", replace statmat(tab1) ///
sdec(2) ctitle("Wave:", "1", "2" "3", "4", "5", "6" ) rtitle("ADL Dress Help-No" \ "ADL Dress Help-Yes"\ ///
"ADL Walk Help-No" \ "ADL Walk Help-Yes" \ "ADL Transfer Help-No" \ "ADL Transfer Help-Yes" \  ///
"ADL Eat Help-No" \ "ADL Eat Help-Yes" \ "ADL Impair-No" \ "ADL Impair-Yes" \ "ADL Index (Mean)")  ///
title("New Method for Calculating ADLs") note("Full Survey") addtable


mat tab2=J(6,6,.)
local r=1
local c=1

forvalues w=1/6 {
foreach x in `adl'{
sum `x' if wave==`w'
mat tab2[`r',`c']=r(mean)*100
local r=`r'+1
}
sum adl_index if wave==`w'
mat tab2[`r',`c']=r(mean)
local r=1
local c=`c'+1
}
mat list tab2

frmttable using "E:\Files to move out\Mohammed\20180412\tab.doc", replace statmat(tab2) ///
sdec(2) ctitle("Wave:", "1", "2" "3", "4", "5", "6" ) rtitle("ADL Dress Help"\ ///
"ADL Walk Help" \ "ADL Transfer Help" \ "ADL Eat Help" \ "ADL Impair" \ "ADL Index (Mean)")  ///
title("Old Method for Calculating ADLs %") note("Represents percentages of individuals who are ADL impaired") addtable


mat tab3=J(6,6,.)
local r=1
local c=1

forvalues w=1/6 {
foreach x in `adl1'{
sum `x' if wave==`w'
mat tab3[`r',`c']=r(mean)*100
local r=`r'+1
}
sum adl_index1 if wave==`w'
mat tab3[`r',`c']=r(mean)
local r=1
local c=`c'+1
}
mat list tab3

frmttable using "E:\Files to move out\Mohammed\20180412\tab.doc", replace statmat(tab3) ///
sdec(2) ctitle("Wave:", "1", "2" "3", "4", "5", "6" ) rtitle("ADL Dress Help"\ ///
"ADL Walk Help" \ "ADL Transfer Help" \ "ADL Eat Help" \ "ADL Impair" \ "ADL Index (Mean)")  ///
title("New Method for Calculating ADLs %") note("Represents percentages of individuals who are ADL impaired") addtable

/*
tab wave adl_dres_help, matcell(dres)
tab wave adl_ins_help, matcell(ins)
tab wave adl_bed_help, matcell(bed)
tab wave adl_index, matcell(index)
tab wave adl_impair, matcell(impair)


replace adl_dres_help=1 if dresoft==5
replace adl_dres_help=1 if bedwout==1
replace adl_ins_help =1 if oflvslepr==5
egen adl_index1= rowtotal(adl_*_help)
gen adl_impair1=.
replace adl_impair1=0 if adl_index1<1
replace adl_impair1=1 if adl_index1>0 & adl_index1<7


tab wave adl_dres_help, matcell(dres1)
tab wave adl_ins_help, matcell(ins1)
tab wave adl_bed_help, matcell(bed1)
tab wave adl_index1, matcell(index1)
tab wave adl_impair1, matcell(impair1)



H="Self Report from NHATS vs Claims data 2 tables"
//This will create two tables 1 with the full sample.
//The next will be stratified to include those with an ADL impairment only. 

clear all 
set more off
capture log close

local intpath "E:\nhats\data\Projects\serious_ill\int_data"
local datapath "E:\nhats\data\Projects\serious_ill\final_data"
local logpath "E:\nhats\data\Projects\serious_ill\logs\"

cd `datapath'
*log using `logpath'\nhats_dme_function.txt, text replace

use serious_ill_nhats_sample if wave==1

duplicates drop spid, force

drop adl_eat_help adl_dres_help adl_index
merge 1:1 spid wave using "E:\nhats\data\NHATS cleaned\sp_round_1_6_public_sens_only.dta",  ///
keepusing(insdhlp oftgoarea oflvslepr bedhlp dreshlp dresoft toilhlp bathhlp ///
showrbat1 showrbat2 showrbat3 eathlp eatdev outoft ntlvrmslp bathtoi_nhats adl_dres_help ///
adl_eat_help adl_index) keep(match)
drop _merge

local vars n nonh sp_ivw_yes nomiss ffs_12m

gen nonh=!nhres
label var nonh "SP interview eligible (not nursing home resident)"
gen n=1
label var n "Total Wave 1"
//created new adl_index var b/c we want to keep people who even answered one adl question
egen adl_index_new=rowtotal(adl_*_help) 
tab adl_index_new 


gen nomiss=!missing(adl_index_new)
label var nomiss "With responses to atleast 1 ADL question"
label var sp_ivw_yes "SP interview conducted"

mat tab=J(5,1,.)
local r=1

foreach x in `vars' {
	sum n if `x'==1
	mat tab[`r',1]=r(N)
	drop if `x'!=1
	local r=`r'+1
}

mat rownames tab=`vars'

frmttable using "`logpath'table_all.rtf", statmat(tab) replace title("Sample Derivation") ///
sdec(0) varlabels

frmttable using "`logpath'table_adl.rtf", statmat(tab) replace title("Sample Derivation") ///
sdec(0) varlabels

use serious_ill_nhats_sample if wave==1 & sp_ivw==1 & ffs_12m==1, clear 
//& !missing(adl_index), clear
foreach x of varlist device* {
	local device `device' `x'
}
tab bathtoi
tab adl_dres_help
tab adl_eat_help
drop bathtoi adl_dres_help adl_eat_help
merge 1:1 spid wave using "E:\nhats\data\NHATS cleaned\sp_round_1_6_public_sens_only.dta",  ///
keepusing(insdhlp oftgoarea oflvslepr bedhlp dreshlp dresoft toilhlp bathhlp ///
showrbat1 showrbat2 showrbat3 eathlp eatdev outoft ntlvrmslp bathtoi_nhats adl_dres_help ///
adl_eat_help adl_index ) keep(match)
drop _merge
//new variable definition taken
tab bathtoi
tab adl_dres_help
tab adl_eat_help

egen adl_index_new=rowtotal(adl_*_help)
tab adl_index_new

keep if !missing(adl_index_new)

gen adl_impair_new=1 if adl_index_new>0 & !missing(adl_index_new)
replace adl_impair_new=0 if adl_index_new==0

svyset varunit [pw=anfinw], strata(varstrat)
*replace adl_impair=0 if adl_index==1

gen caneorwalker=cane==1 | walker==1
local dme cane walker caneorwalker commode urinal bedpan tub_toil_dev lift bed chair //oxy
gen n=1

label var caneorwalker "Cane or walker from DME"
label var cane "Cane from DME"
label var walker "Walker from DME"
label var commode "Commode from DME"
label var urinal "Urinal from DME"
label var bedpan "Bedpan from DME"
label var tub_toil_dev "Toilet/tub/shower assistive device from DME"
label var lift "Lift, transfer board, safety belt/harness/vest from DME"
label var bed "Hospital bed from DME"
label var chair "Wheelchair from DME"
label var oxy "Oxygen from DME"

foreach x of local dme {
	replace `x'=0 if `x'==.
}

gen n_fri=0

foreach x of local dme {
	replace n_fri=n_fri+1 if `x'==1
}
gen ind_fri=n_fri>=1 if !missing(n_fri)
label var ind_fri "Any mobility indicator from DME"
label var n_fri "Count of mobility indicators from DME"
gen mult_fri=n_fri>=2
label var mult_fri "Indicator of multiple mobility indicators from DME"

foreach x in `dme' ind_fri mult_fri n_fri {
	tab adl_impair_new `x', col nokey chi2
}


sum `dme' ind_fri mult_fri n_fri
tab1 `dme' ind_fri mult_fri n_fri

/*
gen ind_snf_12m=snf_paid_by_mc_12m>0
gen ind_hh_12m=hh_paid_by_mc_12m>0
*/

gen ind_snf_12m=n_snf_days_12m>0 & !missing(n_snf_days_12m)
gen ind_snf_or_hh_12m=ind_snf_12m==1 | ind_hh_12m==1
replace ind_hh_12m=0 if missing(ind_hh_12)
label var ind_snf_12m "Any SNF utilization"
label var ind_hh_ "Any HH utilization"
label var ind_snf_or_hh "Any HH or SNF utilization"

gen fri_hh_snf_oxy=ind_fri==1 | ind_snf_or_hh==1 | oxy==1
label var fri_hh_snf_oxy "Any HH, SNF, oxygen, or mobility indicator from DME"
gen fri_hh_snf =ind_snf_or_hh==1 | ind_fri==1
label var fri_hh_snf "Any HH, SNF, or mobility indicator from DME"
gen hh_snf_oxy=ind_snf_or_hh==1 | oxy==1
label var hh_snf_oxy "Any HH, SNF, or oxygen from DME"
gen fri_oxy =ind_fri | oxy
label var fri_oxy "Any mobility indcator or oxygen from DME"
gen bed_or_chair=bed==1 | chair==1
label var bed_or_chair "Hospital bed or wheelchair from DME"



gen all=1 
gen adl=1 if adl_impair_new==1
 
/////Tables


foreach p in all adl{
preserve
keep if `p'==1

gen wheelchr=chair
gen com=commode
gen bathtoi=tub_toil

foreach x in cane walker wheelchr com bathtoi{
sum `x'_nhats if `x'==1 & `x'_nhats==1
local a=`r(N)'
sum `x'_nhats if `x'==0 & `x'_nhats==1
local b=`r(N)'
sum `x' if `x'==1 & `x'_nhats==0
local c=`r(N)'
sum `x' if `x'==0 & `x'_nhats==0
local d=`r(N)'

sum `x'_nhats if `x'_nhats==1 & `x'!=. 
local e=`r(N)'
sum `x'_nhats if `x'_nhats==0 & `x'!=. 
local f=`r(N)'
sum `x' if `x'==1 & `x'_nhats!=.
local g=`r(N)'
sum `x' if `x'==0 & `x'_nhats!=.
local h=`r(N)'

matrix `x'= (`a',`b',`e' \ (`a'/`e')*100 , (`b'/`e')*100 , 100 \ `c',`d',`f' \ (`c'/`f')*100 , (`d'/`f')*100 , 100 \ `g',`h',`g'+`h'\(`g'/(`g'+`h'))*100,(`h'/(`g'+`h'))*100, 100) 

}
tab cane_nhats cane, row
mat list cane



foreach x in cane walker wheelchr com bathtoi {
if "`x'"!="cane" local add addtable
if "`x'"=="cane" local title Cane
if "`x'"=="walker" local title Walker
if "`x'"=="wheelchr" local title Wheelchair
if "`x'"=="com" local title Commode/Bedpan/Urinal
if "`x'"=="bathtoi" local title Shower/Tub/Toilet Assistive Device
frmttable using "`logpath'table_`p'.rtf", replace statmat(`x') ///
sdec(1) ctitle("NHATS/DME", Yes, No, Total) rtitle(Yes\ % \No\% \ Total \ %) ///
title("`title'") addtable
}


tab cane_nhats adl_bath_diff 


foreach x in cane walker wheelchr com bathtoi {

sum `x'_nhats if `x'_nhats==1 & adl_impair_new==1
local a=`r(N)'
sum `x'_nhats if `x'_nhats==1 & adl_impair_new==0
local b=`r(N)'
sum `x'_nhats if `x'_nhats==0 & adl_impair_new==1
local c=`r(N)'
sum `x'_nhats if `x'_nhats==0 & adl_impair_new==0
local d=`r(N)'

sum `x'_nhats if `x'_nhats==1 & adl_impair_new!=.
local e=`r(N)'
sum `x'_nhats if `x'_nhats==0 & adl_impair_new!=.
local f=`r(N)'
sum adl_impair_new if adl_impair_new==1 & `x'_nhats!=.
local g=`r(N)'
sum adl_impair_new if adl_impair_new==0 & `x'_nhats!=.
local h=`r(N)'

matrix `x'= (`a',`b',`e' \ (`a'/`e')*100 , (`b'/`e')*100 , 100 \ `c',`d',`f' \ (`c'/`f')*100 , (`d'/`f')*100 , 100 \ `g',`h',`g'+`h'\(`g'/(`g'+`h'))*100,(`h'/(`g'+`h'))*100, 100) 
}
tab cane_nhats adl_impair_new, row
mat list cane

foreach x in cane walker wheelchr com bathtoi {
//if "`x'"!="cane" local add addtable
if "`x'"=="cane" local title Cane v.s. ADL Impairment
if "`x'"=="walker" local title Walker v.s. ADL Impairment
if "`x'"=="wheelchr" local title Wheelchair v.s. ADL Impairment
if "`x'"=="com" local title Commode/Bedpan/Urinal v.s. ADL Impairment
if "`x'"=="bathtoi" local title Shower/Tub/Toilet Assistive Device v.s. ADL Impairment
frmttable using "`logpath'table_`p'.rtf", replace statmat(`x') ///
sdec(1) ctitle("NHATS/ADL Impair", Yes, No, Total) rtitle(Yes\ % \ No\ % \Total \ %) ///
title("`title'") addtable
}


capture drop any_dev_nhats
gen any_dev_nhats=1 if cane_nhats==1 | walker_nhats==1 | wheelchr_nhats==1 | com_nhats==1 | bathtoi_nhats==1
replace any_dev_nhats=0 if cane_nhats==0 & walker_nhats==0 & wheelchr_nhats==0 & com_nhats==0 & bathtoi_nhats==0

sum any_dev_nhats if any_dev_nhats==1 & adl_impair_new==1
local a=`r(N)'
sum any_dev_nhats if any_dev_nhats==1 & adl_impair_new==0
local b=`r(N)'
sum any_dev_nhats if any_dev_nhats==0 & adl_impair_new==1
local c=`r(N)'
sum any_dev_nhats if any_dev_nhats==0 & adl_impair_new==0
local d=`r(N)'

sum any_dev_nhats if any_dev_nhats==1 & adl_impair_new!=.
local e=`r(N)'
sum any_dev_nhats if any_dev_nhats==0 & adl_impair_new!=.
local f=`r(N)'
sum adl_impair_new if adl_impair_new==1 & any_dev_nhats!=.
local g=`r(N)'
sum adl_impair_new if adl_impair_new==0 & any_dev_nhats!=.
local h=`r(N)'

matrix any= (`a',`b',`e' \ (`a'/`e')*100 , (`b'/`e')*100 , 100 \ `c',`d',`f' \ (`c'/`f')*100 , (`d'/`f')*100 , 100 \ `g',`h',`g'+`h'\(`g'/(`g'+`h'))*100,(`h'/(`g'+`h'))*100, 100) 

tab any_dev_nhats adl_impair_new, row
matrix list any

frmttable using "`logpath'table_`p'.rtf", replace statmat(any) ///
sdec(1) ctitle("Any Device NHATS/ADL Impairment", Yes, No, Total, %) rtitle(Yes\ % \No\ % \Total \ %)  ///
title(Any NHATS Device V.S. ADL Impairment) addtable


///DME claim vs adl_impairment 
capture drop dme_cl*
egen dme_cl=rowtotal(cane walker commode urinal bedpan tub_toil_dev lift bed chair)

egen dme_c=rowtotal(cane walker commode urinal bedpan tub_toil_dev lift bed chair oxy ind_snf_or_hh_12m  )

gen dme_cl_1=0
replace dme_cl_1=1 if dme_cl>=1

gen dme_c_1=0
replace dme_c_1=1 if dme_c>=1

tab dme_cl_1 adl_impair_new

//Eat and dress vs DME
capture drop eat_dres
egen eat_dres=rowtotal(device_dres device_eat)
replace eat_dres=1 if eat_dres==2

tab dme_cl_1 eat_dres



sum n if adl_impair>=1 & dme_cl_1==0


tempfile temp`p'
save "'temp`p''", replace
keep if adl_impair_new==1 & dme_cl_1==0

sum eat_dres if eat_dres==1
local a=`r(N)'
sum eat_dres if eat_dres==0
local b=`r(N)'

tab eat_dres

matrix dme= (`a', ((`a'/(`a'+`b'))*100) \ `b', ((`b'/(`a'+`b'))*100) \ `a'+`b', 100)

use "'temp`p''", clear

tempfile temp1`p'
save "'temp1`p''", replace

keep if adl_impair_new==1 & dme_c_1==0

sum eat_dres if eat_dres==1
local a=`r(N)'
sum eat_dres if eat_dres==0
local b=`r(N)'

tab eat_dres

matrix dme1= (`a', ((`a'/(`a'+`b'))*100) \ `b', ((`b'/(`a'+`b'))*100) \ `a'+`b', 100)
use "'temp1`p''", clear


foreach x in dme dme1 {

if "`x'"=="dme" local title ADL Impaired Self Report & DME Sample Excluding Oxygen, HH, & SNF 
if "`x'"=="dme1" local title ADL Impaired Self Report & DME Sample Including Oxygen, HH, & SNF 

frmttable using "`logpath'table_`p'.rtf", replace statmat(`x') ///
sdec(1) ctitle("Eating and/or Dressing Device Self Report", Freq., %) rtitle(Yes\ No \ Total)  ///
title("`title'") addtable
}


capture drop tag_dme
egen tag_dme= anymatch(cane walker commode urinal bedpan tub_toil_dev chair), v(1)
label var tag_dme "Claim for any device"

sum device_any if any_dev_nhats==1 & tag_dme==1
local a=`r(N)'
sum device_any if any_dev_nhats==1 & tag_dme==0
local b=`r(N)'
sum device_any if any_dev_nhats==0 & tag_dme==1
local c=`r(N)'
sum device_any if any_dev_nhats==0 & tag_dme==0
local d=`r(N)'

sum device_any if any_dev_nhats==1 & tag_dme!=.
local e=`r(N)'
sum device_any if any_dev_nhats==0 & tag_dme!=.
local f=`r(N)'
sum tag_dme if tag_dme==1 & any_dev_nhats!=.
local g=`r(N)'
sum tag_dme if tag_dme==0 & any_dev_nhats!=.
local h=`r(N)'

matrix dev= (`a',`b',`e' \ (`a'/`e')*100 , (`b'/`e')*100 , 100 \ `c',`d',`f' \ (`c'/`f')*100 , (`d'/`f')*100 , 100 \ `g',`h',`g'+`h'\(`g'/(`g'+`h'))*100,(`h'/(`g'+`h'))*100, 100) 
mat list dev

frmttable using "`logpath'table_`p'.rtf", replace statmat(dev) ///
sdec(1) ctitle("Self Report/Claims", Yes, No, Total) rtitle(Yes\ % \ No\ % \ Total \ %)  ///
title("Self Report using any Device vs. Claim for any Device") addtable ///
note("Excludes Oxygen & Lift")


tab device_any tag_dme, row

tab any_dev_nhats device_any
restore
}



H="xxxxxxxxxxstart below for FRIxxxxxxxxxxx"


H="Tables 1-3--New"
capture log close
clear all
set more off
local logs E:\nhats\nhats_code\NHATS data setup\logs\

local r1raw E:\nhats\data\NHATS Public\round_1\
local r2raw E:\nhats\data\NHATS Public\round_2\
local r3raw E:\nhats\data\NHATS Public\round_3\
local r4raw E:\nhats\a\NHATS Public\round_4\
local r5raw E:\nhats\data\NHATS Public\round_5\
local r6raw E:\nhats\data\NHATS Public\round_6\
//local r7raw E:\nhats\data\NHATS Public\round_7\
local work E:\nhats\data\NHATS working data
local r1s E:\nhats\data\NHATS Sensitive\r1_sensitive\
local r2s E:\nhats\data\NHATS Sensitive\r2_sensitive\
local r3s E:\nhats\data\NHATS Sensitive\r3_sensitive\
local r4s E:\nhats\data\NHATS Sensitive\r4_sensitive\
local r5s E:\nhats\data\NHATS Sensitive\r5_sensitive\
local r6s E:\nhats\data\NHATS Sensitive\r6_sensitive\
local logs E:\nhats\nhats_code\NHATS data setup\logs\



//7/13/17--add in metro/nonmetro var
use "E:\nhats\data\NHATS Public\NHATS_Round_1_6_MetNonmet_STATA\NHATS_Round_1_6_MetNonmet.dta", clear
forvalues i=1/6 {
gen metro_ind`i'=r`i'd==1 if inrange(r`i'd,1,2)
}
reshape long metro_ind, i(spid) j(wave)
label var metro_ind "Lives in metropolitan area"
tempfile metro
save `metro'

cd "`work'"
use round_1_6_clean_helper_added.dta
merge 1:1 spid wave using `metro', keep(match master) nogen



//Add in 4/27---FRI specific code
gen insdhlp=mo1insdhlp 
label val insdhlp mo1insdhlp
gen oftgoarea=mo1oftgoarea
label val oftgoarea mo1oftgoarea 
gen oflvslepr=mo1oflvslepr 
label val oflvslepr mo1oflvslepr 
gen bedhlp=mo1bedhlp 
label val bedhlp mo1bedhlp
gen dreshlp=sc1dreshlp
label val dreshlp sc1dreshlp
gen dresoft=sc1dresoft 
label val dresoft sc1dresoft
gen toilhlp=sc1toilhlp 
label val toilhlp sc1toilhlp
gen bathhlp=sc1bathhlp 
label val bathhlp sc1bathhlp
gen showrbat1=sc1showrbat1 
label val showrbat1 sc1showrbat1
gen showrbat2=sc1showrbat2 
label val showrbat2 sc1showrbat2
gen showrbat3=sc1showrbat3 
label val showrbat3 sc1showrbat3 
gen eathlp=sc1eathlp 
label val eathlp sc1eathlp
//gen eatdev=sc1eatdev 
//label val eatdev sc1eatdev
gen outoft=mo1outoft
label val outoft mo1outoft
//gen ntlvrmslp=fl1ntlvrmslp
//label val ntlvrmslp fl1ntlvrmslp



//Add in 4/6/18---FRI project and then implemented throughout code.
egen dresslf=rowmax(sc*dresslf)
label val dresslf sc2dresslf
label var dresslf "Often you Dress Yourself"

egen dresdif=rowmax(sc*dresdif)
label val dresdif sc2dresdif
label var dresdif "Difficulty when using Special Items by Self"

egen ntlvrmslp=rowmax(fl*ntlvrmslp)
label val ntlvrmslp fl2ntlvrmslp 
label var ntlvrmslp "Often had to Stay in Bed"

egen eatdev=rowmax(sc*eatdev)
label val eatdev sc2eatdev
label var eatdev "Ever use Adapted Utensils"


///// 3/5/18 --Adding in FRI questions from round 1

foreach x in cane walker wheelchr {
capture drop `x'_nhats
gen `x'_nhats=fl1`x'
replace `x'_nhats=. if fl1`x'==-9 | (fl1`x'==-1 & sp_ivw==0) 
replace `x'_nhats=0 if fl1`x'==-1 & sp_ivw==1
label var `x'_nhats "`x' from NHATS"
}

capture drop com_nhats
recode sc1usvartoi1 (2=0) (-9 -1=.), gen(com_nhats)


capture drop bathtoi_nhats
gen bathtoi_nhats=. if wave==1 //if sc1dbathdevi==3 | sc1dbathdevi==4 | sc1dtoildevi==3 | sc1dtoildevi==4
replace bathtoi_nhats=0 if (sc1dbathdevi==1 & sc1dtoildevi==1) | (ho1bathamen3==2 & ho1bathamen4==2 & ho1bathamen5==2 & ho1bathamen6==2)
replace bathtoi_nhats=1 if sc1dbathdevi==2 | sc1dtoildevi==2 | ho1bathamen3==1 | ho1bathamen4==1 | ho1bathamen5==1 | ho1bathamen6==1

keep insdhlp oftgoarea oflvslepr bedhlp dreshlp dresoft toilhlp bathhlp ///
showrbat1 showrbat2 showrbat3 eathlp eatdev outoft ntlvrmslp bathtoi_nhats spid wave

merge 1:1 spid wave using "E:\nhats\data\NHATS cleaned\sp_round_1_6_public_sens_only.dta"

keep insdhlp oftgoarea oflvslepr bedhlp dreshlp dresoft toilhlp bathhlp ///
showrbat1 showrbat2 showrbat3 eathlp eatdev outoft ntlvrmslp bathtoi_nhats adl_dres_help ///
adl_eat_help adl_index spid wave

tempfile nhats
save "`nhats'"




local intpath "E:\nhats\data\Projects\serious_ill\int_data"
local datapath "E:\nhats\data\Projects\serious_ill\final_data"
local logpath "E:\nhats\data\Projects\serious_ill\logs\"

cd `datapath'
*log using `logpath'\nhats_dme_function.txt, text replace

use serious_ill_nhats_sample if wave==1

duplicates drop spid, force

drop adl_eat_help adl_dres_help adl_index
merge 1:1 spid wave using "`nhats'",  ///
keepusing(insdhlp oftgoarea oflvslepr bedhlp dreshlp dresoft toilhlp bathhlp ///
showrbat1 showrbat2 showrbat3 eathlp eatdev outoft ntlvrmslp bathtoi_nhats adl_dres_help ///
adl_eat_help adl_index) keep(match)
drop _merge

local vars n nonh sp_ivw_yes nomiss ffs_12m

gen nonh=!nhres
label var nonh "SP interview eligible (not nursing home resident)"
gen n=1
label var n "Total Wave 1"
//created new adl_index var b/c we want to keep people who even answered one adl question
egen adl_index_new=rowtotal(adl_*_help) 
tab adl_index_new 

//no one is missing all adl help vars.
gen nomiss=!missing(adl_index_new)
label var nomiss "With responses to atleast 1 ADL question"
label var sp_ivw_yes "SP interview conducted"

mat tab=J(5,1,.)
local r=1

foreach x in `vars' {
	sum n if `x'==1
	mat tab[`r',1]=r(N)
	drop if `x'!=1
	local r=`r'+1
}

mat rownames tab=`vars'

frmttable using "`logpath'function.rtf", statmat(tab) replace title("Sample Derivation") ///
sdec(0) varlabels

use serious_ill_nhats_sample if wave==1 & sp_ivw==1 & ffs_12m==1, clear 
//& !missing(adl_index), clear
foreach x of varlist device* {
	local device `device' `x'
}
tab bathtoi
tab adl_dres_help
tab adl_eat_help
drop bathtoi adl_dres_help adl_eat_help
merge 1:1 spid wave using "`nhats'",  ///
keepusing(insdhlp oftgoarea oflvslepr bedhlp dreshlp dresoft toilhlp bathhlp ///
showrbat1 showrbat2 showrbat3 eathlp eatdev outoft ntlvrmslp bathtoi_nhats adl_dres_help ///
adl_eat_help adl_index ) keep(match)
drop _merge
//new variable definition taken
tab bathtoi
tab adl_dres_help
tab adl_eat_help

egen adl_index_new=rowtotal(adl_*_help)
tab adl_index_new

keep if !missing(adl_index_new)

gen adl_impair_new=1 if adl_index_new>0 & !missing(adl_index_new)
replace adl_impair_new=0 if adl_index_new==0

svyset varunit [pw=anfinw], strata(varstrat)
*replace adl_impair=0 if adl_index==1

gen caneorwalker=cane==1 | walker==1
local dme cane walker caneorwalker commode urinal bedpan tub_toil_dev lift bed chair //oxy
gen n=1

label var caneorwalker "Cane or walker from DME"
label var cane "Cane from DME"
label var walker "Walker from DME"
label var commode "Commode from DME"
label var urinal "Urinal from DME"
label var bedpan "Bedpan from DME"
label var tub_toil_dev "Toilet/tub/shower assistive device from DME"
label var lift "Lift, transfer board, safety belt/harness/vest from DME"
label var bed "Hospital bed from DME"
label var chair "Wheelchair from DME"
label var oxy "Oxygen from DME"

foreach x of local dme {
	replace `x'=0 if `x'==.
}

gen n_fri=0

foreach x of local dme {
	replace n_fri=n_fri+1 if `x'==1
}
gen ind_fri=n_fri>=1 if !missing(n_fri)
label var ind_fri "Any mobility indicator from DME"
label var n_fri "Count of mobility indicators from DME"
gen mult_fri=n_fri>=2
label var mult_fri "Indicator of multiple mobility indicators from DME"

foreach x in `dme' ind_fri mult_fri n_fri {
	tab adl_impair_new `x', col nokey chi2
}


sum `dme' ind_fri mult_fri n_fri
tab1 `dme' ind_fri mult_fri n_fri

/*
gen ind_snf_12m=snf_paid_by_mc_12m>0
gen ind_hh_12m=hh_paid_by_mc_12m>0
*/

gen ind_snf_12m=n_snf_days_12m>0 & !missing(n_snf_days_12m)
gen ind_snf_or_hh_12m=ind_snf_12m==1 | ind_hh_12m==1
replace ind_hh_12m=0 if missing(ind_hh_12)
label var ind_snf_12m "Any SNF utilization"
label var ind_hh_ "Any HH utilization"
label var ind_snf_or_hh "Any HH or SNF utilization"

gen fri_hh_snf_oxy=ind_fri==1 | ind_snf_or_hh==1 | oxy==1
label var fri_hh_snf_oxy "Any HH, SNF, oxygen, or mobility indicator from DME"
gen fri_hh_snf =ind_snf_or_hh==1 | ind_fri==1
label var fri_hh_snf "Any HH, SNF, or mobility indicator from DME"
gen hh_snf_oxy=ind_snf_or_hh==1 | oxy==1
label var hh_snf_oxy "Any HH, SNF, or oxygen from DME"
gen fri_oxy =ind_fri | oxy
label var fri_oxy "Any mobility indcator or oxygen from DME"
gen bed_or_chair=bed==1 | chair==1
label var bed_or_chair "Hospital bed or wheelchair from DME"



/* table 1
demographics, by SR ADL impairment*/

local cvars age aveincome
gen age_lt75=age<=74
gen age_lt85=age>=75 & age<85
gen age_85=age>=85
label var age_lt75 "Age 65-74"
label var age_lt85 "Age 75-84"
label var age_85 "Age 85+"

tab income_cat, gen(inccat)
cap label define income_cat 0 "<15000" 1 "15-29,999" 2 "30-59,999" 3 ">60000"
label values income_cat income_cat
forvalues i=0/3 {
local lab : label income_cat `i'
label var inccat`=`i'+1' "`lab'"
}

foreach x  in cancer dem esrd chf copd diab_compl liver {
	local smi `smi' smi_`x'_ind
}


*gen prob_dem=dem_3_cat==1 if !missing(dem_3)
label var prob_dem "Probable dementia"
cap label define homebound_cat 1 "Homebound" 2 "Semi (Never by Self)" 3 "Semi: Needs Help/Diff" 4 "Not Homebound"
label values homebound_cat homebound_cat
tab homebound, gen(hb)
forvalues i=1/4 {
	local lab: label homebound_cat `i'
	label var hb`i' "`lab'"
}

local help
foreach x of varlist adl*help {
	local help `help' `x'
}
label var educ_hs_ind "Education: HS +"

keep if !missing(adl_index_new)
gen adl_2=adl_index_new>=2 if !missing(adl_index_new)
gen adl_3=adl_index_new>=3 if !missing(adl_index_new)
//note-3/7/18 add indicators for meeting 2 or all 3 criteria
gen ind_2=(ind_fri==1 & oxy==1) | (ind_fri==1 & ind_snf_or_hh==1) | ///
(oxy==1 & ind_snf_or_hh==1)
gen ind_3=ind_fri==1 & oxy==1 & ind_snf_or_hh==1
label var ind_2 "2+ indicators"
label var ind_3 "All 3 indicators"
label var adl_2 "Dependent in 2+ ADLs"
label var adl_3 "Dependent in 3+ ADLs"
local cvars age
local ivars age_lt75 age_lt85 age_85 inccat1 inccat2 inccat3 inccat4 ///
female white black hisp other_race married educ_hs_ind proxy ///
medicaid medigap srh_fp adl_impair_new hb1 hb2 hb3 hb4 prob_dem adl_2 adl_3 ///
`help' /*iadl_independent*/ `pps' `ind_indication' ///
`dmouth' `smi' `device' ind_hosp_adm_12m
local ipps pps100 pps90 pps80 ///
pps70 pps60 pps50 pps40 pps30 
local cout tot_paid_by_mc_12m n_hospd_p12m
local iout ind_hosp_adm_p12m died_12
foreach x of local ivars {
sum `x' if `x'==1 & adl_impair_new==1
}
local rn : word count `cvars' `ivars'
local r=1
local c=1
mat tab=J(`rn'+3,6,.)
mat stars=J(`rn'+3,6,0)

gen adl_impair1=1
gen adl_impair2=1 if adl_impair_new==0
gen adl_impair3=1 if adl_impair_new==1
gen adl_impair4=1 if adl_index_new>=2 & !missing(adl_index_new)
forvalues adl=1/4 {
	replace adl_impair`adl'=0 if missing(adl_impair`adl')
	foreach x in `cvars' {
		sum `x' if inlist(adl_impair`adl',1) [aw=anfinw]
		mat tab[`r',`c']=r(mean)
		if `adl'>2 {
			svy, subpop(if adl_impair2==1 | adl_impair`adl'==1): mean `x', ///
			over(adl_impair2)
			test [`x']0=[`x']1
			mat tab[`r',`c'+1]=r(p)
			mat stars[`r',`c'+1]=(r(p)<.05)+(r(p)<.01)
}
		local r=`r'+1
}
	foreach x in `ivars' {
		qui sum `x' if inlist(adl_impair`adl',1)
		local denom=r(mean)*r(N)
		sum `x' if inlist(adl_impair`adl',1) [aw=anfinw]
		if `denom'>=11 mat tab[`r',`c']=r(mean)*100
		if `adl'>2 {
			svy, subpop(if adl_impair2==1 | adl_impair`adl'==1): tab `x' adl_impair2
			mat tab[`r',`c'+1]=e(p_Pear)
			mat stars[`r',`c'+1]=(e(p_Pear)<.05)+(e(p_Pear)<.01)
}
		local r=`r'+1
}
	local r=`r'+1
	sum n if inlist(adl_impair`adl',1) [aw=anfinw]
	mat tab[`r',`c']=r(N)
	mat tab[`r'+1,`c']=r(sum)
	local r=1
	local c=`c'+1
	if `adl'==3 local c=`c'+1
}
mat rownames tab=`cvars' `ivars' "_" "N" "National Estimate"

frmttable using "`logpath'function.rtf", statmat(tab) addtable title("Sample Characteristics") ///
ctitles("" "Full Sample" "Non-ADL dependent" "ADL dependent 1+" "P" "ADL dependent 2+" "P") ///
sdec(2) varlabels annotate(stars) asymbol(*,**) ///
 note("NHATS wave 1 SP interviews, restricted to those with 12m FFS Medicare" ///
"ADL impairment defined as having assistance in 1+ ADL")

/*table 2
Weighted %
p-value
sensitivity=Indicator and ADL/All ADL
specificity=No Indicator or ADL/All non-ADL
PPV=Indicator and ADL/All Indicator
NPV=No indicator or ADL/All non-indicator
C-statistic=AUC
*/

//note--3/7/18--added indicator of 2 and/or 3
local vars `dme' bed_or_chair ind_fri mult_fri oxy ind_snf_12m ind_hh_12m ///
ind_snf_or_hh_12m ///
fri_hh_snf fri_oxy hh_snf_oxy fri_hh_snf_oxy ind_2 ind_3

local rn : word count `vars' 1 1 


local replace replace
forvalues timethrough=1/3 {
preserve
foreach dem in all {
replace adl_impair_new=0 if adl_index_new<`timethrough'
mat tab`dem'=J(`rn',9,.)
mat stars`dem'=J(`rn',9,0)
local r=1
local c=1

foreach i in "0,1" "0" "1" {
	foreach x of local vars {
		sum `x' if inlist(adl_impair_new,`i')
		if r(mean)*r(N)>=11	mat tab`dem'[`r',`c']=r(mean)*r(N)
		sum `x' if inlist(adl_impair_new,`i') [aw=anfinw]
		*mat tab`dem'[`r',`c'+1]=r(mean)*100
		if "`i'"=="1" & !inlist("`x'","bedpan","urinal"){
			*svy: tab adl_impair `x'
			*mat tab`dem'[`r',`c'+2]=e(p_Pear)
			*mat stars`dem'[`r',`c'+2]=(e(p_Pear)<.05)+(e(p_Pear)<.01)
			tab `x' adl_impair_new , matcell(cell) chi2
			mat tab`dem'[`r',`c'+1]=r(p)
			mat stars`dem'[`r',`c'+1]=(r(p)<.05)+(r(p)<.01)
			mat tab`dem'[`r',`c'+2]=(cell[2,2]/(cell[2,2]+cell[1,2]))*100
			mat tab`dem'[`r',`c'+3]=(cell[1,1]/(cell[2,1]+cell[1,1]))*100
			mat tab`dem'[`r',`c'+4]=(cell[2,2]/(cell[2,2]+cell[2,1]))*100
			mat tab`dem'[`r',`c'+5]=(cell[1,1]/(cell[1,2]+cell[1,1]))*100
			roctab adl_impair_new `x'
			mat tab`dem'[`r',`c'+6]=r(area)
}
		local r=`r'+1
}
	local r=`r'+1
	sum n if inlist(adl_impair_new,`i') [aw=anfinw]
	mat tab`dem'[`r',`c']=r(N)
	*mat tab`dem'[`r'+1,`c']=r(sum)
	local r=1
	local c=`c'+1
}
keep if dem_3_cat==1
mat rownames tab`dem'=`vars' "_" "N" 
}
restore
/*local vars `dme' ind_fri mult_fri ind_snf_12m ind_hh_12m ind_snf_or_hh_12m ///
fri_hh_snf fri_oxy hh_snf_oxy fri_hh_snf_oxy
*/
foreach x of local vars {
	local lab : var label `x'
	di "`lab'"
	local lab "`lab' \      % \"
	local rows `rows'`lab'
	local sdec `sdec'0,0,0,2\2,2,2,2\
	di "`sdec'"
}

local sdec `sdec'0,0,0,0\2,2,2,2\0,0,0,0
local sdec 0,0,0,2,2,2,2,2,2
frmttable using "`logpath'function.rtf", statmat(taball)  ctitles("" "Full Sample" ///
"Non-ADL dependent" "ADL dependent" "P-value" "Sensitivity" "Specificity" "PPV" "NPV" ///
"AUC") title("SR and claims-based function") ///
annotate(starsall) asymbol(*,**) sdec(`sdec') varlabels ///
note("NHATS wave 1 SP interviews, restricted to those with 12m FFS Medicare" ///
"ADL impairment defined as having assistance in `timethrough'+ ADLs") ///
addtable
local replace addtable


}

local vars age_lt75 age_lt85 age_85 inccat1 inccat2 inccat3 inccat4 ///
female white black hisp other_race married educ_hs_ind ///
medicaid medigap srh_fp adl_impair_new hb1 hb2 hb3 hb4 prob_dem adl_2 adl_3 ///
sr_cancer_ever

foreach x in sr_cancer_ever prob_dem married female educ_hs_ind {
	gen no_`x'=`x'==0 if !missing(`x')
}
label var no_sr_c "No cancer"
label var no_prob "Not demented"
label var no_marr "Not married"
label var no_fem "Male"
label var no_edu "Education: <HS"

local vars n sr_cancer_ever no_sr_cancer_ever prob_dem no_prob_dem ///
inccat1 inccat2 inccat3 inccat4 hb1 hb2 hb3 hb4 ///
white black hisp other_race age_lt75 age_lt85 age_85 married no_married ///
female no_female educ_hs_ind no_educ_hs_ind
label var n "Full Sample"
local group bed_or_chair ind_fri oxy ind_snf_or_hh_12m fri_hh_snf_oxy

label var fri_hh_snf_oxy "Any HH/SNF/FRI/Oxy"
label var ind_snf_or_hh_12m "Any HH/SNF"



local rn: word count `vars' 

local cn : word count `group' 

mat tab=J(`rn',`cn',.)
mat stars=J(`rn',`cn',0) 
local r=1
local c=1

foreach x of local vars {
	foreach g of local group {
		roctab adl_impair_new `g' if `x'==1
		mat tab[`r',`c']=r(area)
		local c=`c'+1
}
	local c=1
	local r=`r'+1
}



mat rownames tab=`vars'
mat colnames tab=`group'

frmttable using "`logpath'function.rtf", statmat(tab) varlabels sdec(2) annotate(stars) asymbol(*,**) ///
title ("C-Statistics, stratified by characteristics") addtable


local rn: word count `vars' 

local cn : word count `group' `group'

mat tab=J(`rn',`cn',.)
mat stars=J(`rn',`cn',0) 
local r=1
local c=1

foreach x of local vars {
	foreach g of local group {
		logit adl_impair_new `g' if `x'==1, or
		mat beta=e(b)
		mat tab[`r',`c']=exp(beta[1,1])
		mat p=r(table)
		scalar p=p[4,1]
		mat tab[`r',`c'+1]=p
		mat stars[`r',`c'+1]=(p<.05)+(p<.01)
		local c=`c'+2
}
	local c=1
	local r=`r'+1
}

foreach x of local group {
	local colnames `colnames' `x' P 
}

mat rownames tab=`vars'
mat colnames tab=`colnames'

frmttable using "`logpath'function.rtf", statmat(tab) varlabels sdec(2) annotate(stars) asymbol(*,**) ///
title ("Bivariate Odds Ratios, stratified by characteristics") substat(1) addtable


H="Self-Report from NHATS vs Claims Tables--New"
capture log close
clear all
set more off
local logs E:\nhats\nhats_code\NHATS data setup\logs\

local r1raw E:\nhats\data\NHATS Public\round_1\
local r2raw E:\nhats\data\NHATS Public\round_2\
local r3raw E:\nhats\data\NHATS Public\round_3\
local r4raw E:\nhats\a\NHATS Public\round_4\
local r5raw E:\nhats\data\NHATS Public\round_5\
local r6raw E:\nhats\data\NHATS Public\round_6\
//local r7raw E:\nhats\data\NHATS Public\round_7\
local work E:\nhats\data\NHATS working data
local r1s E:\nhats\data\NHATS Sensitive\r1_sensitive\
local r2s E:\nhats\data\NHATS Sensitive\r2_sensitive\
local r3s E:\nhats\data\NHATS Sensitive\r3_sensitive\
local r4s E:\nhats\data\NHATS Sensitive\r4_sensitive\
local r5s E:\nhats\data\NHATS Sensitive\r5_sensitive\
local r6s E:\nhats\data\NHATS Sensitive\r6_sensitive\
local logs E:\nhats\nhats_code\NHATS data setup\logs\



//7/13/17--add in metro/nonmetro var
use "E:\nhats\data\NHATS Public\NHATS_Round_1_6_MetNonmet_STATA\NHATS_Round_1_6_MetNonmet.dta", clear
forvalues i=1/6 {
gen metro_ind`i'=r`i'd==1 if inrange(r`i'd,1,2)
}
reshape long metro_ind, i(spid) j(wave)
label var metro_ind "Lives in metropolitan area"
tempfile metro
save `metro'

cd "`work'"
use round_1_6_clean_helper_added.dta
merge 1:1 spid wave using `metro', keep(match master) nogen



//Add in 4/27---FRI specific code
gen insdhlp=mo1insdhlp 
label val insdhlp mo1insdhlp
gen oftgoarea=mo1oftgoarea
label val oftgoarea mo1oftgoarea 
gen oflvslepr=mo1oflvslepr 
label val oflvslepr mo1oflvslepr 
gen bedhlp=mo1bedhlp 
label val bedhlp mo1bedhlp
gen dreshlp=sc1dreshlp
label val dreshlp sc1dreshlp
gen dresoft=sc1dresoft 
label val dresoft sc1dresoft
gen toilhlp=sc1toilhlp 
label val toilhlp sc1toilhlp
gen bathhlp=sc1bathhlp 
label val bathhlp sc1bathhlp
gen showrbat1=sc1showrbat1 
label val showrbat1 sc1showrbat1
gen showrbat2=sc1showrbat2 
label val showrbat2 sc1showrbat2
gen showrbat3=sc1showrbat3 
label val showrbat3 sc1showrbat3 
gen eathlp=sc1eathlp 
label val eathlp sc1eathlp
//gen eatdev=sc1eatdev 
//label val eatdev sc1eatdev
gen outoft=mo1outoft
label val outoft mo1outoft
//gen ntlvrmslp=fl1ntlvrmslp
//label val ntlvrmslp fl1ntlvrmslp



//Add in 4/6/18---FRI project and then implemented throughout code.
egen dresslf=rowmax(sc*dresslf)
label val dresslf sc2dresslf
label var dresslf "Often you Dress Yourself"

egen dresdif=rowmax(sc*dresdif)
label val dresdif sc2dresdif
label var dresdif "Difficulty when using Special Items by Self"

egen ntlvrmslp=rowmax(fl*ntlvrmslp)
label val ntlvrmslp fl2ntlvrmslp 
label var ntlvrmslp "Often had to Stay in Bed"

egen eatdev=rowmax(sc*eatdev)
label val eatdev sc2eatdev
label var eatdev "Ever use Adapted Utensils"


///// 3/5/18 --Adding in FRI questions from round 1

foreach x in cane walker wheelchr {
capture drop `x'_nhats
gen `x'_nhats=fl1`x'
replace `x'_nhats=. if fl1`x'==-9 | (fl1`x'==-1 & sp_ivw==0) 
replace `x'_nhats=0 if fl1`x'==-1 & sp_ivw==1
label var `x'_nhats "`x' from NHATS"
}

capture drop com_nhats
recode sc1usvartoi1 (2=0) (-9 -1=.), gen(com_nhats)


capture drop bathtoi_nhats
gen bathtoi_nhats=. if wave==1 //if sc1dbathdevi==3 | sc1dbathdevi==4 | sc1dtoildevi==3 | sc1dtoildevi==4
replace bathtoi_nhats=0 if (sc1dbathdevi==1 & sc1dtoildevi==1) | (ho1bathamen3==2 & ho1bathamen4==2 & ho1bathamen5==2 & ho1bathamen6==2)
replace bathtoi_nhats=1 if sc1dbathdevi==2 | sc1dtoildevi==2 | ho1bathamen3==1 | ho1bathamen4==1 | ho1bathamen5==1 | ho1bathamen6==1

keep insdhlp oftgoarea oflvslepr bedhlp dreshlp dresoft toilhlp bathhlp ///
showrbat1 showrbat2 showrbat3 eathlp eatdev outoft ntlvrmslp bathtoi_nhats spid wave

merge 1:1 spid wave using "E:\nhats\data\NHATS cleaned\sp_round_1_6_public_sens_only.dta"

keep insdhlp oftgoarea oflvslepr bedhlp dreshlp dresoft toilhlp bathhlp ///
showrbat1 showrbat2 showrbat3 eathlp eatdev outoft ntlvrmslp bathtoi_nhats adl_dres_help ///
adl_eat_help adl_index spid wave

tempfile nhats
save "`nhats'"


clear all 
set more off
capture log close

local intpath "E:\nhats\data\Projects\serious_ill\int_data"
local datapath "E:\nhats\data\Projects\serious_ill\final_data"
local logpath "E:\nhats\data\Projects\serious_ill\logs\"

cd `datapath'
*log using `logpath'\nhats_dme_function.txt, text replace

use serious_ill_nhats_sample if wave==1

duplicates drop spid, force

drop adl_eat_help adl_dres_help adl_index
merge 1:1 spid wave using "`nhats'",  ///
keepusing(insdhlp oftgoarea oflvslepr bedhlp dreshlp dresoft toilhlp bathhlp ///
showrbat1 showrbat2 showrbat3 eathlp eatdev outoft ntlvrmslp bathtoi_nhats adl_dres_help ///
adl_eat_help adl_index) keep(match)
drop _merge

local vars n nonh sp_ivw_yes nomiss ffs_12m

gen nonh=!nhres
label var nonh "SP interview eligible (not nursing home resident)"
gen n=1
label var n "Total Wave 1"
//created new adl_index var b/c we want to keep people who even answered one adl question
egen adl_index_new=rowtotal(adl_*_help) 
tab adl_index_new 


gen nomiss=!missing(adl_index_new)
label var nomiss "With responses to atleast 1 ADL question"
label var sp_ivw_yes "SP interview conducted"

mat tab=J(5,1,.)
local r=1

foreach x in `vars' {
	sum n if `x'==1
	mat tab[`r',1]=r(N)
	drop if `x'!=1
	local r=`r'+1
}

mat rownames tab=`vars'

frmttable using "`logpath'table.rtf", statmat(tab) replace title("Sample Derivation") ///
sdec(0) varlabels

use serious_ill_nhats_sample if wave==1 & sp_ivw==1 & ffs_12m==1, clear 
//& !missing(adl_index), clear
foreach x of varlist device* {
	local device `device' `x'
}
tab bathtoi
tab adl_dres_help
tab adl_eat_help
drop bathtoi adl_dres_help adl_eat_help
merge 1:1 spid wave using "`nhats'",  ///
keepusing(insdhlp oftgoarea oflvslepr bedhlp dreshlp dresoft toilhlp bathhlp ///
showrbat1 showrbat2 showrbat3 eathlp eatdev outoft ntlvrmslp bathtoi_nhats adl_dres_help ///
adl_eat_help adl_index ) keep(match)
drop _merge
//new variable definition taken
tab bathtoi
tab adl_dres_help
tab adl_eat_help

egen adl_index_new=rowtotal(adl_*_help)
tab adl_index_new

keep if !missing(adl_index_new)

gen adl_impair_new=1 if adl_index_new>0 & !missing(adl_index_new)
replace adl_impair_new=0 if adl_index_new==0

svyset varunit [pw=anfinw], strata(varstrat)
*replace adl_impair=0 if adl_index==1

gen caneorwalker=cane==1 | walker==1
local dme cane walker caneorwalker commode urinal bedpan tub_toil_dev lift bed chair //oxy
gen n=1

label var caneorwalker "Cane or walker from DME"
label var cane "Cane from DME"
label var walker "Walker from DME"
label var commode "Commode from DME"
label var urinal "Urinal from DME"
label var bedpan "Bedpan from DME"
label var tub_toil_dev "Toilet/tub/shower assistive device from DME"
label var lift "Lift, transfer board, safety belt/harness/vest from DME"
label var bed "Hospital bed from DME"
label var chair "Wheelchair from DME"
label var oxy "Oxygen from DME"

foreach x of local dme {
	replace `x'=0 if `x'==.
}

gen n_fri=0

foreach x of local dme {
	replace n_fri=n_fri+1 if `x'==1
}
gen ind_fri=n_fri>=1 if !missing(n_fri)
label var ind_fri "Any mobility indicator from DME"
label var n_fri "Count of mobility indicators from DME"
gen mult_fri=n_fri>=2
label var mult_fri "Indicator of multiple mobility indicators from DME"

foreach x in `dme' ind_fri mult_fri n_fri {
	tab adl_impair_new `x', col nokey chi2
}


sum `dme' ind_fri mult_fri n_fri
tab1 `dme' ind_fri mult_fri n_fri

/*
gen ind_snf_12m=snf_paid_by_mc_12m>0
gen ind_hh_12m=hh_paid_by_mc_12m>0
*/

gen ind_snf_12m=n_snf_days_12m>0 & !missing(n_snf_days_12m)
gen ind_snf_or_hh_12m=ind_snf_12m==1 | ind_hh_12m==1
replace ind_hh_12m=0 if missing(ind_hh_12)
label var ind_snf_12m "Any SNF utilization"
label var ind_hh_ "Any HH utilization"
label var ind_snf_or_hh "Any HH or SNF utilization"

gen fri_hh_snf_oxy=ind_fri==1 | ind_snf_or_hh==1 | oxy==1
label var fri_hh_snf_oxy "Any HH, SNF, oxygen, or mobility indicator from DME"
gen fri_hh_snf =ind_snf_or_hh==1 | ind_fri==1
label var fri_hh_snf "Any HH, SNF, or mobility indicator from DME"
gen hh_snf_oxy=ind_snf_or_hh==1 | oxy==1
label var hh_snf_oxy "Any HH, SNF, or oxygen from DME"
gen fri_oxy =ind_fri | oxy
label var fri_oxy "Any mobility indcator or oxygen from DME"
gen bed_or_chair=bed==1 | chair==1
label var bed_or_chair "Hospital bed or wheelchair from DME"




/////Tables

gen wheelchr=chair
gen com=commode
gen bathtoi=tub_toil

foreach x in cane walker wheelchr com bathtoi{
sum `x'_nhats if `x'==1 & `x'_nhats==1
local a=`r(N)'
sum `x'_nhats if `x'==0 & `x'_nhats==1
local b=`r(N)'
sum `x' if `x'==1 & `x'_nhats==0
local c=`r(N)'
sum `x' if `x'==0 & `x'_nhats==0
local d=`r(N)'

sum `x'_nhats if `x'_nhats==1 & `x'!=. 
local e=`r(N)'
sum `x'_nhats if `x'_nhats==0 & `x'!=. 
local f=`r(N)'
sum `x' if `x'==1 & `x'_nhats!=.
local g=`r(N)'
sum `x' if `x'==0 & `x'_nhats!=.
local h=`r(N)'

matrix `x'= (`a',`b',`e' \ (`a'/`e')*100 , (`b'/`e')*100 , 100 \ `c',`d',`f' \ (`c'/`f')*100 , (`d'/`f')*100 , 100 \ `g',`h',`g'+`h'\(`g'/(`g'+`h'))*100,(`h'/(`g'+`h'))*100, 100) 

}
tab cane_nhats cane, row
mat list cane



foreach x in cane walker wheelchr com bathtoi {
//if "`x'"!="cane" local add addtable
if "`x'"=="cane" local title Cane
if "`x'"=="walker" local title Walker
if "`x'"=="wheelchr" local title Wheelchair
if "`x'"=="com" local title Commode/Bedpan/Urinal
if "`x'"=="bathtoi" local title Shower/Tub/Toilet Assistive Device
frmttable using "`logpath'table.rtf", replace statmat(`x') ///
sdec(1) ctitle("NHATS/DME", Yes, No, Total) rtitle(Yes\ % \No\% \ Total \ %) ///
title("`title'") addtable
}


tab cane_nhats adl_bath_diff 


foreach x in cane walker wheelchr com bathtoi {

sum `x'_nhats if `x'_nhats==1 & adl_impair_new==1
local a=`r(N)'
sum `x'_nhats if `x'_nhats==1 & adl_impair_new==0
local b=`r(N)'
sum `x'_nhats if `x'_nhats==0 & adl_impair_new==1
local c=`r(N)'
sum `x'_nhats if `x'_nhats==0 & adl_impair_new==0
local d=`r(N)'

sum `x'_nhats if `x'_nhats==1 & adl_impair_new!=.
local e=`r(N)'
sum `x'_nhats if `x'_nhats==0 & adl_impair_new!=.
local f=`r(N)'
sum adl_impair_new if adl_impair_new==1 & `x'_nhats!=.
local g=`r(N)'
sum adl_impair_new if adl_impair_new==0 & `x'_nhats!=.
local h=`r(N)'

matrix `x'= (`a',`b',`e' \ (`a'/`e')*100 , (`b'/`e')*100 , 100 \ `c',`d',`f' \ (`c'/`f')*100 , (`d'/`f')*100 , 100 \ `g',`h',`g'+`h'\(`g'/(`g'+`h'))*100,(`h'/(`g'+`h'))*100, 100) 
}
tab cane_nhats adl_impair_new, row
mat list cane

foreach x in cane walker wheelchr com bathtoi {
//if "`x'"!="cane" local add addtable
if "`x'"=="cane" local title Cane v.s. ADL Impairment
if "`x'"=="walker" local title Walker v.s. ADL Impairment
if "`x'"=="wheelchr" local title Wheelchair v.s. ADL Impairment
if "`x'"=="com" local title Commode/Bedpan/Urinal v.s. ADL Impairment
if "`x'"=="bathtoi" local title Shower/Tub/Toilet Assistive Device v.s. ADL Impairment
frmttable using "`logpath'table.rtf", replace statmat(`x') ///
sdec(1) ctitle("NHATS/ADL Impair", Yes, No, Total) rtitle(Yes\ % \ No\ % \Total \ %) ///
title("`title'") addtable
}


capture drop any_dev_nhats
gen any_dev_nhats=1 if cane_nhats==1 | walker_nhats==1 | wheelchr_nhats==1 | com_nhats==1 | bathtoi_nhats==1
replace any_dev_nhats=0 if cane_nhats==0 & walker_nhats==0 & wheelchr_nhats==0 & com_nhats==0 & bathtoi_nhats==0

sum any_dev_nhats if any_dev_nhats==1 & adl_impair_new==1
local a=`r(N)'
sum any_dev_nhats if any_dev_nhats==1 & adl_impair_new==0
local b=`r(N)'
sum any_dev_nhats if any_dev_nhats==0 & adl_impair_new==1
local c=`r(N)'
sum any_dev_nhats if any_dev_nhats==0 & adl_impair_new==0
local d=`r(N)'

sum any_dev_nhats if any_dev_nhats==1 & adl_impair_new!=.
local e=`r(N)'
sum any_dev_nhats if any_dev_nhats==0 & adl_impair_new!=.
local f=`r(N)'
sum adl_impair_new if adl_impair_new==1 & any_dev_nhats!=.
local g=`r(N)'
sum adl_impair_new if adl_impair_new==0 & any_dev_nhats!=.
local h=`r(N)'

matrix any= (`a',`b',`e' \ (`a'/`e')*100 , (`b'/`e')*100 , 100 \ `c',`d',`f' \ (`c'/`f')*100 , (`d'/`f')*100 , 100 \ `g',`h',`g'+`h'\(`g'/(`g'+`h'))*100,(`h'/(`g'+`h'))*100, 100) 

tab any_dev_nhats adl_impair_new, row
matrix list any

frmttable using "`logpath'table.rtf", replace statmat(any) ///
sdec(1) ctitle("Any Device NHATS/ADL Impairment", Yes, No, Total, %) rtitle(Yes\ % \No\ % \Total \ %)  ///
title("`title'") addtable

 

///DME claim vs adl_impairment 
capture drop dme_cl*
egen dme_cl=rowtotal(cane walker commode urinal bedpan tub_toil_dev lift bed chair)

egen dme_c=rowtotal(cane walker commode urinal bedpan tub_toil_dev lift bed chair oxy ind_snf_or_hh_12m  )

gen dme_cl_1=0
replace dme_cl_1=1 if dme_cl>=1

gen dme_c_1=0
replace dme_c_1=1 if dme_c>=1

tab dme_cl_1 adl_impair_new

//Eat and dress vs DME
capture drop eat_dres
egen eat_dres=rowtotal(device_dres device_eat)
replace eat_dres=1 if eat_dres==2

tab dme_cl_1 eat_dres



sum n if adl_impair>=1 & dme_cl_1==0



preserve
keep if adl_impair_new==1 & dme_cl_1==0

sum eat_dres if eat_dres==1
local a=`r(N)'
sum eat_dres if eat_dres==0
local b=`r(N)'

tab eat_dres

matrix dme= (`a', ((`a'/(`a'+`b'))*100) \ `b', ((`b'/(`a'+`b'))*100) \ `a'+`b', 100)

restore

preserve
keep if adl_impair_new==1 & dme_c_1==0

sum eat_dres if eat_dres==1
local a=`r(N)'
sum eat_dres if eat_dres==0
local b=`r(N)'

tab eat_dres

matrix dme1= (`a', ((`a'/(`a'+`b'))*100) \ `b', ((`b'/(`a'+`b'))*100) \ `a'+`b', 100)
restore

foreach x in dme dme1 {

if "`x'"=="dme" local title ADL Impaired Self Report & DME Sample Excluding Oxygen, HH, & SNF 
if "`x'"=="dme1" local title ADL Impaired Self Report & DME Sample Including Oxygen, HH, & SNF 

frmttable using "`logpath'table.rtf", replace statmat(`x') ///
sdec(1) ctitle("Eating and/or Dressing Device Self Report", Freq., %) rtitle(Yes\ No \ Total)  ///
title("`title'") addtable
}


//put this into the word doc in same format
capture drop tag_dme
egen tag_dme= anymatch(cane walker commode urinal bedpan tub_toil_dev chair), v(1)
label var tag_dme "Claim for any device"

sum device_any if device_any==1 & tag_dme==1
local a=`r(N)'
sum device_any if device_any==1 & tag_dme==0
local b=`r(N)'
sum device_any if device_any==0 & tag_dme==1
local c=`r(N)'
sum device_any if device_any==0 & tag_dme==0
local d=`r(N)'

sum device_any if device_any==1 & tag_dme!=.
local e=`r(N)'
sum device_any if device_any==0 & tag_dme!=.
local f=`r(N)'
sum tag_dme if tag_dme==1 & device_any!=.
local g=`r(N)'
sum tag_dme if tag_dme==0 & device_any!=.
local h=`r(N)'

matrix dev= (`a',`b',`e' \ (`a'/`e')*100 , (`b'/`e')*100 , 100 \ `c',`d',`f' \ (`c'/`f')*100 , (`d'/`f')*100 , 100 \ `g',`h',`g'+`h'\(`g'/(`g'+`h'))*100,(`h'/(`g'+`h'))*100, 100) 
mat list dev

frmttable using "`logpath'table.rtf", replace statmat(dev) ///
sdec(1) ctitle("Self Report/Claims", Yes, No, Total) rtitle(Yes\ % \ No\ % \ Total \ %)  ///
title("Self Report using any Device vs. Claim for any Device") addtable ///
note("Excludes Oxygen & Lift")


tab device_any tag_dme, row


H="NEW Self Report from NHATS vs Claims data 2 tables"
//This will create two tables 1 with the full sample.
//The next will be stratified to include those with an ADL impairment only. 

capture log close
clear all
set more off
local logs E:\nhats\nhats_code\NHATS data setup\logs\

local r1raw E:\nhats\data\NHATS Public\round_1\
local r2raw E:\nhats\data\NHATS Public\round_2\
local r3raw E:\nhats\data\NHATS Public\round_3\
local r4raw E:\nhats\a\NHATS Public\round_4\
local r5raw E:\nhats\data\NHATS Public\round_5\
local r6raw E:\nhats\data\NHATS Public\round_6\
//local r7raw E:\nhats\data\NHATS Public\round_7\
local work E:\nhats\data\NHATS working data
local r1s E:\nhats\data\NHATS Sensitive\r1_sensitive\
local r2s E:\nhats\data\NHATS Sensitive\r2_sensitive\
local r3s E:\nhats\data\NHATS Sensitive\r3_sensitive\
local r4s E:\nhats\data\NHATS Sensitive\r4_sensitive\
local r5s E:\nhats\data\NHATS Sensitive\r5_sensitive\
local r6s E:\nhats\data\NHATS Sensitive\r6_sensitive\
local logs E:\nhats\nhats_code\NHATS data setup\logs\



//7/13/17--add in metro/nonmetro var
use "E:\nhats\data\NHATS Public\NHATS_Round_1_6_MetNonmet_STATA\NHATS_Round_1_6_MetNonmet.dta", clear
forvalues i=1/6 {
gen metro_ind`i'=r`i'd==1 if inrange(r`i'd,1,2)
}
reshape long metro_ind, i(spid) j(wave)
label var metro_ind "Lives in metropolitan area"
tempfile metro
save `metro'

cd "`work'"
use round_1_6_clean_helper_added.dta
merge 1:1 spid wave using `metro', keep(match master) nogen



//Add in 4/27---FRI specific code
gen insdhlp=mo1insdhlp 
label val insdhlp mo1insdhlp
gen oftgoarea=mo1oftgoarea
label val oftgoarea mo1oftgoarea 
gen oflvslepr=mo1oflvslepr 
label val oflvslepr mo1oflvslepr 
gen bedhlp=mo1bedhlp 
label val bedhlp mo1bedhlp
gen dreshlp=sc1dreshlp
label val dreshlp sc1dreshlp
gen dresoft=sc1dresoft 
label val dresoft sc1dresoft
gen toilhlp=sc1toilhlp 
label val toilhlp sc1toilhlp
gen bathhlp=sc1bathhlp 
label val bathhlp sc1bathhlp
gen showrbat1=sc1showrbat1 
label val showrbat1 sc1showrbat1
gen showrbat2=sc1showrbat2 
label val showrbat2 sc1showrbat2
gen showrbat3=sc1showrbat3 
label val showrbat3 sc1showrbat3 
gen eathlp=sc1eathlp 
label val eathlp sc1eathlp
//gen eatdev=sc1eatdev 
//label val eatdev sc1eatdev
gen outoft=mo1outoft
label val outoft mo1outoft
//gen ntlvrmslp=fl1ntlvrmslp
//label val ntlvrmslp fl1ntlvrmslp



//Add in 4/6/18---FRI project and then implemented throughout code.
egen dresslf=rowmax(sc*dresslf)
label val dresslf sc2dresslf
label var dresslf "Often you Dress Yourself"

egen dresdif=rowmax(sc*dresdif)
label val dresdif sc2dresdif
label var dresdif "Difficulty when using Special Items by Self"

egen ntlvrmslp=rowmax(fl*ntlvrmslp)
label val ntlvrmslp fl2ntlvrmslp 
label var ntlvrmslp "Often had to Stay in Bed"

egen eatdev=rowmax(sc*eatdev)
label val eatdev sc2eatdev
label var eatdev "Ever use Adapted Utensils"


///// 3/5/18 --Adding in FRI questions from round 1

foreach x in cane walker wheelchr {
capture drop `x'_nhats
gen `x'_nhats=fl1`x'
replace `x'_nhats=. if fl1`x'==-9 | (fl1`x'==-1 & sp_ivw==0) 
replace `x'_nhats=0 if fl1`x'==-1 & sp_ivw==1
label var `x'_nhats "`x' from NHATS"
}

capture drop com_nhats
recode sc1usvartoi1 (2=0) (-9 -1=.), gen(com_nhats)


capture drop bathtoi_nhats
gen bathtoi_nhats=. if wave==1 //if sc1dbathdevi==3 | sc1dbathdevi==4 | sc1dtoildevi==3 | sc1dtoildevi==4
replace bathtoi_nhats=0 if (sc1dbathdevi==1 & sc1dtoildevi==1) | (ho1bathamen3==2 & ho1bathamen4==2 & ho1bathamen5==2 & ho1bathamen6==2)
replace bathtoi_nhats=1 if sc1dbathdevi==2 | sc1dtoildevi==2 | ho1bathamen3==1 | ho1bathamen4==1 | ho1bathamen5==1 | ho1bathamen6==1

keep insdhlp oftgoarea oflvslepr bedhlp dreshlp dresoft toilhlp bathhlp ///
showrbat1 showrbat2 showrbat3 eathlp eatdev outoft ntlvrmslp bathtoi_nhats spid wave

merge 1:1 spid wave using "E:\nhats\data\NHATS cleaned\sp_round_1_6_public_sens_only.dta"

keep insdhlp oftgoarea oflvslepr bedhlp dreshlp dresoft toilhlp bathhlp ///
showrbat1 showrbat2 showrbat3 eathlp eatdev outoft ntlvrmslp bathtoi_nhats adl_dres_help ///
adl_eat_help adl_index spid wave

tempfile nhats
save "`nhats'"



clear all

local intpath "E:\nhats\data\Projects\serious_ill\int_data"
local datapath "E:\nhats\data\Projects\serious_ill\final_data"
local logpath "E:\nhats\data\Projects\serious_ill\logs\"

cd `datapath'
*log using `logpath'\nhats_dme_function.txt, text replace

use serious_ill_nhats_sample if wave==1

duplicates drop spid, force

drop adl_eat_help adl_dres_help adl_index
merge 1:1 spid wave using "`nhats'",  ///
keepusing(insdhlp oftgoarea oflvslepr bedhlp dreshlp dresoft toilhlp bathhlp ///
showrbat1 showrbat2 showrbat3 eathlp eatdev outoft ntlvrmslp bathtoi_nhats adl_dres_help ///
adl_eat_help adl_index) keep(match)
drop _merge

local vars n nonh sp_ivw_yes nomiss ffs_12m

gen nonh=!nhres
label var nonh "SP interview eligible (not nursing home resident)"
gen n=1
label var n "Total Wave 1"
//created new adl_index var b/c we want to keep people who even answered one adl question
egen adl_index_new=rowtotal(adl_*_help) 
tab adl_index_new 


gen nomiss=!missing(adl_index_new)
label var nomiss "With responses to atleast 1 ADL question"
label var sp_ivw_yes "SP interview conducted"

mat tab=J(5,1,.)
local r=1

foreach x in `vars' {
	sum n if `x'==1
	mat tab[`r',1]=r(N)
	drop if `x'!=1
	local r=`r'+1
}

mat rownames tab=`vars'

frmttable using "`logpath'table_all.rtf", statmat(tab) replace title("Sample Derivation") ///
sdec(0) varlabels

frmttable using "`logpath'table_adl.rtf", statmat(tab) replace title("Sample Derivation") ///
sdec(0) varlabels

use serious_ill_nhats_sample if wave==1 & sp_ivw==1 & ffs_12m==1, clear 
//& !missing(adl_index), clear
foreach x of varlist device* {
	local device `device' `x'
}
tab bathtoi
tab adl_dres_help
tab adl_eat_help
drop bathtoi adl_dres_help adl_eat_help
merge 1:1 spid wave using "`nhats'",  ///
keepusing(insdhlp oftgoarea oflvslepr bedhlp dreshlp dresoft toilhlp bathhlp ///
showrbat1 showrbat2 showrbat3 eathlp eatdev outoft ntlvrmslp bathtoi_nhats adl_dres_help ///
adl_eat_help adl_index ) keep(match)
drop _merge
//new variable definition taken
tab bathtoi
tab adl_dres_help
tab adl_eat_help

egen adl_index_new=rowtotal(adl_*_help)
tab adl_index_new

keep if !missing(adl_index_new)

gen adl_impair_new=1 if adl_index_new>0 & !missing(adl_index_new)
replace adl_impair_new=0 if adl_index_new==0

svyset varunit [pw=anfinw], strata(varstrat)
*replace adl_impair=0 if adl_index==1

gen caneorwalker=cane==1 | walker==1
local dme cane walker caneorwalker commode urinal bedpan tub_toil_dev lift bed chair //oxy
gen n=1

label var caneorwalker "Cane or walker from DME"
label var cane "Cane from DME"
label var walker "Walker from DME"
label var commode "Commode from DME"
label var urinal "Urinal from DME"
label var bedpan "Bedpan from DME"
label var tub_toil_dev "Toilet/tub/shower assistive device from DME"
label var lift "Lift, transfer board, safety belt/harness/vest from DME"
label var bed "Hospital bed from DME"
label var chair "Wheelchair from DME"
label var oxy "Oxygen from DME"

foreach x of local dme {
	replace `x'=0 if `x'==.
}

gen n_fri=0

foreach x of local dme {
	replace n_fri=n_fri+1 if `x'==1
}
gen ind_fri=n_fri>=1 if !missing(n_fri)
label var ind_fri "Any mobility indicator from DME"
label var n_fri "Count of mobility indicators from DME"
gen mult_fri=n_fri>=2
label var mult_fri "Indicator of multiple mobility indicators from DME"

foreach x in `dme' ind_fri mult_fri n_fri {
	tab adl_impair_new `x', col nokey chi2
}


sum `dme' ind_fri mult_fri n_fri
tab1 `dme' ind_fri mult_fri n_fri

/*
gen ind_snf_12m=snf_paid_by_mc_12m>0
gen ind_hh_12m=hh_paid_by_mc_12m>0
*/

gen ind_snf_12m=n_snf_days_12m>0 & !missing(n_snf_days_12m)
gen ind_snf_or_hh_12m=ind_snf_12m==1 | ind_hh_12m==1
replace ind_hh_12m=0 if missing(ind_hh_12)
label var ind_snf_12m "Any SNF utilization"
label var ind_hh_ "Any HH utilization"
label var ind_snf_or_hh "Any HH or SNF utilization"

gen fri_hh_snf_oxy=ind_fri==1 | ind_snf_or_hh==1 | oxy==1
label var fri_hh_snf_oxy "Any HH, SNF, oxygen, or mobility indicator from DME"
gen fri_hh_snf =ind_snf_or_hh==1 | ind_fri==1
label var fri_hh_snf "Any HH, SNF, or mobility indicator from DME"
gen hh_snf_oxy=ind_snf_or_hh==1 | oxy==1
label var hh_snf_oxy "Any HH, SNF, or oxygen from DME"
gen fri_oxy =ind_fri | oxy
label var fri_oxy "Any mobility indcator or oxygen from DME"
gen bed_or_chair=bed==1 | chair==1
label var bed_or_chair "Hospital bed or wheelchair from DME"



gen all=1 
gen adl=1 if adl_impair_new==1
 
/////Tables


foreach p in all adl{
preserve
keep if `p'==1

gen wheelchr=chair
gen com=commode
gen bathtoi=tub_toil

foreach x in cane walker wheelchr com bathtoi{
sum `x'_nhats if `x'==1 & `x'_nhats==1
local a=`r(N)'
sum `x'_nhats if `x'==0 & `x'_nhats==1
local b=`r(N)'
sum `x' if `x'==1 & `x'_nhats==0
local c=`r(N)'
sum `x' if `x'==0 & `x'_nhats==0
local d=`r(N)'

sum `x'_nhats if `x'_nhats==1 & `x'!=. 
local e=`r(N)'
sum `x'_nhats if `x'_nhats==0 & `x'!=. 
local f=`r(N)'
sum `x' if `x'==1 & `x'_nhats!=.
local g=`r(N)'
sum `x' if `x'==0 & `x'_nhats!=.
local h=`r(N)'

matrix `x'= (`a',`b',`e' \ (`a'/`e')*100 , (`b'/`e')*100 , 100 \ `c',`d',`f' \ (`c'/`f')*100 , (`d'/`f')*100 , 100 \ `g',`h',`g'+`h'\(`g'/(`g'+`h'))*100,(`h'/(`g'+`h'))*100, 100) 

}
tab cane_nhats cane, row
mat list cane



foreach x in cane walker wheelchr com bathtoi {
if "`x'"!="cane" local add addtable
if "`x'"=="cane" local title Cane
if "`x'"=="walker" local title Walker
if "`x'"=="wheelchr" local title Wheelchair
if "`x'"=="com" local title Commode/Bedpan/Urinal
if "`x'"=="bathtoi" local title Shower/Tub/Toilet Assistive Device
frmttable using "`logpath'table_`p'.rtf", replace statmat(`x') ///
sdec(1) ctitle("NHATS/DME", Yes, No, Total) rtitle(Yes\ % \No\% \ Total \ %) ///
title("`title'") addtable
}


tab cane_nhats adl_bath_diff 


foreach x in cane walker wheelchr com bathtoi {

sum `x'_nhats if `x'_nhats==1 & adl_impair_new==1
local a=`r(N)'
sum `x'_nhats if `x'_nhats==1 & adl_impair_new==0
local b=`r(N)'
sum `x'_nhats if `x'_nhats==0 & adl_impair_new==1
local c=`r(N)'
sum `x'_nhats if `x'_nhats==0 & adl_impair_new==0
local d=`r(N)'

sum `x'_nhats if `x'_nhats==1 & adl_impair_new!=.
local e=`r(N)'
sum `x'_nhats if `x'_nhats==0 & adl_impair_new!=.
local f=`r(N)'
sum adl_impair_new if adl_impair_new==1 & `x'_nhats!=.
local g=`r(N)'
sum adl_impair_new if adl_impair_new==0 & `x'_nhats!=.
local h=`r(N)'

matrix `x'= (`a',`b',`e' \ (`a'/`e')*100 , (`b'/`e')*100 , 100 \ `c',`d',`f' \ (`c'/`f')*100 , (`d'/`f')*100 , 100 \ `g',`h',`g'+`h'\(`g'/(`g'+`h'))*100,(`h'/(`g'+`h'))*100, 100) 
}
tab cane_nhats adl_impair_new, row
mat list cane

foreach x in cane walker wheelchr com bathtoi {
//if "`x'"!="cane" local add addtable
if "`x'"=="cane" local title Cane v.s. ADL Impairment
if "`x'"=="walker" local title Walker v.s. ADL Impairment
if "`x'"=="wheelchr" local title Wheelchair v.s. ADL Impairment
if "`x'"=="com" local title Commode/Bedpan/Urinal v.s. ADL Impairment
if "`x'"=="bathtoi" local title Shower/Tub/Toilet Assistive Device v.s. ADL Impairment
frmttable using "`logpath'table_`p'.rtf", replace statmat(`x') ///
sdec(1) ctitle("NHATS/ADL Impair", Yes, No, Total) rtitle(Yes\ % \ No\ % \Total \ %) ///
title("`title'") addtable
}


capture drop any_dev_nhats
gen any_dev_nhats=1 if cane_nhats==1 | walker_nhats==1 | wheelchr_nhats==1 | com_nhats==1 | bathtoi_nhats==1
replace any_dev_nhats=0 if cane_nhats==0 & walker_nhats==0 & wheelchr_nhats==0 & com_nhats==0 & bathtoi_nhats==0

sum any_dev_nhats if any_dev_nhats==1 & adl_impair_new==1
local a=`r(N)'
sum any_dev_nhats if any_dev_nhats==1 & adl_impair_new==0
local b=`r(N)'
sum any_dev_nhats if any_dev_nhats==0 & adl_impair_new==1
local c=`r(N)'
sum any_dev_nhats if any_dev_nhats==0 & adl_impair_new==0
local d=`r(N)'

sum any_dev_nhats if any_dev_nhats==1 & adl_impair_new!=.
local e=`r(N)'
sum any_dev_nhats if any_dev_nhats==0 & adl_impair_new!=.
local f=`r(N)'
sum adl_impair_new if adl_impair_new==1 & any_dev_nhats!=.
local g=`r(N)'
sum adl_impair_new if adl_impair_new==0 & any_dev_nhats!=.
local h=`r(N)'

matrix any= (`a',`b',`e' \ (`a'/`e')*100 , (`b'/`e')*100 , 100 \ `c',`d',`f' \ (`c'/`f')*100 , (`d'/`f')*100 , 100 \ `g',`h',`g'+`h'\(`g'/(`g'+`h'))*100,(`h'/(`g'+`h'))*100, 100) 

tab any_dev_nhats adl_impair_new, row
matrix list any

frmttable using "`logpath'table_`p'.rtf", replace statmat(any) ///
sdec(1) ctitle("Any Device NHATS/ADL Impairment", Yes, No, Total, %) rtitle(Yes\ % \No\ % \Total \ %)  ///
title(Any NHATS Device V.S. ADL Impairment) addtable


///DME claim vs adl_impairment 
capture drop dme_cl*
egen dme_cl=rowtotal(cane walker commode urinal bedpan tub_toil_dev lift bed chair)

egen dme_c=rowtotal(cane walker commode urinal bedpan tub_toil_dev lift bed chair oxy ind_snf_or_hh_12m  )

gen dme_cl_1=0
replace dme_cl_1=1 if dme_cl>=1

gen dme_c_1=0
replace dme_c_1=1 if dme_c>=1

tab dme_cl_1 adl_impair_new

//Eat and dress vs DME
capture drop eat_dres
egen eat_dres=rowtotal(device_dres device_eat)
replace eat_dres=1 if eat_dres==2

tab dme_cl_1 eat_dres



sum n if adl_impair>=1 & dme_cl_1==0


tempfile temp`p'
save "'temp`p''", replace
keep if adl_impair_new==1 & dme_cl_1==0

sum eat_dres if eat_dres==1
local a=`r(N)'
sum eat_dres if eat_dres==0
local b=`r(N)'

tab eat_dres

matrix dme= (`a', ((`a'/(`a'+`b'))*100) \ `b', ((`b'/(`a'+`b'))*100) \ `a'+`b', 100)

use "'temp`p''", clear

tempfile temp1`p'
save "'temp1`p''", replace

keep if adl_impair_new==1 & dme_c_1==0

sum eat_dres if eat_dres==1
local a=`r(N)'
sum eat_dres if eat_dres==0
local b=`r(N)'

tab eat_dres

matrix dme1= (`a', ((`a'/(`a'+`b'))*100) \ `b', ((`b'/(`a'+`b'))*100) \ `a'+`b', 100)
use "'temp1`p''", clear


foreach x in dme dme1 {

if "`x'"=="dme" local title ADL Impaired Self Report & DME Sample Excluding Oxygen, HH, & SNF 
if "`x'"=="dme1" local title ADL Impaired Self Report & DME Sample Including Oxygen, HH, & SNF 

frmttable using "`logpath'table_`p'.rtf", replace statmat(`x') ///
sdec(1) ctitle("Eating and/or Dressing Device Self Report", Freq., %) rtitle(Yes\ No \ Total)  ///
title("`title'") addtable
}


capture drop tag_dme
egen tag_dme= anymatch(cane walker commode urinal bedpan tub_toil_dev chair), v(1)
label var tag_dme "Claim for any device"

sum device_any if any_dev_nhats==1 & tag_dme==1
local a=`r(N)'
sum device_any if any_dev_nhats==1 & tag_dme==0
local b=`r(N)'
sum device_any if any_dev_nhats==0 & tag_dme==1
local c=`r(N)'
sum device_any if any_dev_nhats==0 & tag_dme==0
local d=`r(N)'

sum device_any if any_dev_nhats==1 & tag_dme!=.
local e=`r(N)'
sum device_any if any_dev_nhats==0 & tag_dme!=.
local f=`r(N)'
sum tag_dme if tag_dme==1 & any_dev_nhats!=.
local g=`r(N)'
sum tag_dme if tag_dme==0 & any_dev_nhats!=.
local h=`r(N)'

matrix dev= (`a',`b',`e' \ (`a'/`e')*100 , (`b'/`e')*100 , 100 \ `c',`d',`f' \ (`c'/`f')*100 , (`d'/`f')*100 , 100 \ `g',`h',`g'+`h'\(`g'/(`g'+`h'))*100,(`h'/(`g'+`h'))*100, 100) 
mat list dev

frmttable using "`logpath'table_`p'.rtf", replace statmat(dev) ///
sdec(1) ctitle("Self Report/Claims", Yes, No, Total) rtitle(Yes\ % \ No\ % \ Total \ %)  ///
title("Self Report using any Device vs. Claim for any Device") addtable ///
note("Excludes Oxygen & Lift")


tab device_any tag_dme, row

tab any_dev_nhats device_any
restore
}



H="xxupdated"


H="tables 1-3 11/18"
capture log close
clear all
set more off
local logs E:\nhats\nhats_code\NHATS data setup\logs\

local r1raw E:\nhats\data\NHATS Public\round_1\
local r2raw E:\nhats\data\NHATS Public\round_2\
local r3raw E:\nhats\data\NHATS Public\round_3\
local r4raw E:\nhats\a\NHATS Public\round_4\
local r5raw E:\nhats\data\NHATS Public\round_5\
local r6raw E:\nhats\data\NHATS Public\round_6\
//local r7raw E:\nhats\data\NHATS Public\round_7\
local work E:\nhats\data\NHATS working data
local r1s E:\nhats\data\NHATS Sensitive\r1_sensitive\
local r2s E:\nhats\data\NHATS Sensitive\r2_sensitive\
local r3s E:\nhats\data\NHATS Sensitive\r3_sensitive\
local r4s E:\nhats\data\NHATS Sensitive\r4_sensitive\
local r5s E:\nhats\data\NHATS Sensitive\r5_sensitive\
local r6s E:\nhats\data\NHATS Sensitive\r6_sensitive\
local logs E:\nhats\nhats_code\NHATS data setup\logs\



//7/13/17--add in metro/nonmetro var
use "E:\nhats\data\NHATS Public\NHATS_Round_1_6_MetNonmet_STATA\NHATS_Round_1_6_MetNonmet.dta", clear
forvalues i=1/6 {
gen metro_ind`i'=r`i'd==1 if inrange(r`i'd,1,2)
}
reshape long metro_ind, i(spid) j(wave)
label var metro_ind "Lives in metropolitan area"
tempfile metro
save `metro'

cd "`work'"
use round_1_6_clean_helper_added.dta
merge 1:1 spid wave using `metro', keep(match master) nogen



//Add in 4/27---FRI specific code
gen insdhlp=mo1insdhlp 
label val insdhlp mo1insdhlp
gen oftgoarea=mo1oftgoarea
label val oftgoarea mo1oftgoarea 
gen oflvslepr=mo1oflvslepr 
label val oflvslepr mo1oflvslepr 
gen bedhlp=mo1bedhlp 
label val bedhlp mo1bedhlp
gen dreshlp=sc1dreshlp
label val dreshlp sc1dreshlp
gen dresoft=sc1dresoft 
label val dresoft sc1dresoft
gen toilhlp=sc1toilhlp 
label val toilhlp sc1toilhlp
gen bathhlp=sc1bathhlp 
label val bathhlp sc1bathhlp
gen showrbat1=sc1showrbat1 
label val showrbat1 sc1showrbat1
gen showrbat2=sc1showrbat2 
label val showrbat2 sc1showrbat2
gen showrbat3=sc1showrbat3 
label val showrbat3 sc1showrbat3 
gen eathlp=sc1eathlp 
label val eathlp sc1eathlp
//gen eatdev=sc1eatdev 
//label val eatdev sc1eatdev
gen outoft=mo1outoft
label val outoft mo1outoft
//gen ntlvrmslp=fl1ntlvrmslp
//label val ntlvrmslp fl1ntlvrmslp



//Add in 4/6/18---FRI project and then implemented throughout code.
egen dresslf=rowmax(sc*dresslf)
label val dresslf sc2dresslf
label var dresslf "Often you Dress Yourself"

egen dresdif=rowmax(sc*dresdif)
label val dresdif sc2dresdif
label var dresdif "Difficulty when using Special Items by Self"

egen ntlvrmslp=rowmax(fl*ntlvrmslp)
label val ntlvrmslp fl2ntlvrmslp 
label var ntlvrmslp "Often had to Stay in Bed"

egen eatdev=rowmax(sc*eatdev)
label val eatdev sc2eatdev
label var eatdev "Ever use Adapted Utensils"


///// 3/5/18 --Adding in FRI questions from round 1

foreach x in cane walker wheelchr {
capture drop `x'_nhats
gen `x'_nhats=fl1`x'
replace `x'_nhats=. if fl1`x'==-9 | (fl1`x'==-1 & sp_ivw==0) 
replace `x'_nhats=0 if fl1`x'==-1 & sp_ivw==1
label var `x'_nhats "`x' from NHATS"
}

capture drop com_nhats
recode sc1usvartoi1 (2=0) (-9 -1=.), gen(com_nhats)


capture drop bathtoi_nhats
gen bathtoi_nhats=. if wave==1 //if sc1dbathdevi==3 | sc1dbathdevi==4 | sc1dtoildevi==3 | sc1dtoildevi==4
replace bathtoi_nhats=0 if (sc1dbathdevi==1 & sc1dtoildevi==1) | (ho1bathamen3==2 & ho1bathamen4==2 & ho1bathamen5==2 & ho1bathamen6==2)
replace bathtoi_nhats=1 if sc1dbathdevi==2 | sc1dtoildevi==2 | ho1bathamen3==1 | ho1bathamen4==1 | ho1bathamen5==1 | ho1bathamen6==1

keep insdhlp oftgoarea oflvslepr bedhlp dreshlp dresoft toilhlp bathhlp ///
showrbat1 showrbat2 showrbat3 eathlp eatdev outoft ntlvrmslp bathtoi_nhats spid wave

merge 1:1 spid wave using "E:\nhats\data\NHATS cleaned\sp_round_1_6_public_sens_only.dta"

keep insdhlp oftgoarea oflvslepr bedhlp dreshlp dresoft toilhlp bathhlp ///
showrbat1 showrbat2 showrbat3 eathlp eatdev outoft ntlvrmslp bathtoi_nhats adl_dres_help ///
adl_eat_help adl_index spid wave

tempfile nhats
save "`nhats'"




local intpath "E:\nhats\data\Projects\serious_ill\int_data"
local datapath "E:\nhats\data\Projects\serious_ill\final_data"
local logpath "E:\nhats\data\Projects\serious_ill\logs\"

cd `datapath'
*log using `logpath'\nhats_dme_function.txt, text replace

use serious_ill_nhats_sample if wave==1

duplicates drop spid, force

drop adl_eat_help adl_dres_help adl_index
merge 1:1 spid wave using "`nhats'",  ///
keepusing(insdhlp oftgoarea oflvslepr bedhlp dreshlp dresoft toilhlp bathhlp ///
showrbat1 showrbat2 showrbat3 eathlp eatdev outoft ntlvrmslp bathtoi_nhats adl_dres_help ///
adl_eat_help adl_index) keep(match)
drop _merge

local vars n nonh sp_ivw_yes nomiss ffs_12m non_proxy

gen nonh=!nhres
label var nonh "SP interview eligible (not nursing home resident)"
gen n=1
label var n "Total Wave 1"
//created new adl_index var b/c we want to keep people who even answered one adl question
egen adl_index_new=rowtotal(adl_*_help) 
tab adl_index_new 

//no one is missing all adl help vars.
gen nomiss=!missing(adl_index_new)
label var nomiss "With responses to atleast 1 ADL question"
label var sp_ivw_yes "SP interview conducted"

gen non_proxy=0 if proxy_ivw==1
replace non_proxy=1 if proxy_ivw==0
label var non_proxy "Non-Proxy Interview"

mat tab=J(6,1,.)
local r=1

foreach x in `vars' {
	sum n if `x'==1
	mat tab[`r',1]=r(N)
	drop if `x'!=1
	local r=`r'+1
}

mat rownames tab=`vars'

frmttable using "`logpath'function.rtf", statmat(tab) replace title("Sample Derivation") ///
sdec(0) varlabels

use serious_ill_nhats_sample if wave==1 & sp_ivw==1 & ffs_12m==1 & proxy_ivw==0, clear 
//& !missing(adl_index), clear
foreach x of varlist device* {
	local device `device' `x'
}
//tab bathtoi
//tab adl_dres_help
//tab adl_eat_help
//drop bathtoi adl_dres_help adl_eat_help
merge 1:1 spid wave using "`nhats'",  ///
keepusing(insdhlp oftgoarea oflvslepr bedhlp dreshlp dresoft toilhlp bathhlp ///
showrbat1 showrbat2 showrbat3 eathlp eatdev outoft ntlvrmslp bathtoi_nhats adl_dres_help ///
adl_eat_help adl_index ) keep(match)
drop _merge
//new variable definition taken
tab bathtoi
tab adl_dres_help
tab adl_eat_help

egen adl_index_new=rowtotal(adl_*_help)
tab adl_index_new

keep if !missing(adl_index_new)

gen adl_impair_new=1 if adl_index_new>0 & !missing(adl_index_new)
replace adl_impair_new=0 if adl_index_new==0

svyset varunit [pw=anfinw], strata(varstrat)
*replace adl_impair=0 if adl_index==1

gen caneorwalker=cane==1 | walker==1
local dme cane walker caneorwalker commode urinal bedpan tub_toil_dev lift bed chair //oxy
gen n=1

label var caneorwalker "Cane or walker from DME"
label var cane "Cane from DME"
label var walker "Walker from DME"
label var commode "Commode from DME"
label var urinal "Urinal from DME"
label var bedpan "Bedpan from DME"
label var tub_toil_dev "Toilet/tub/shower assistive device from DME"
label var lift "Lift, transfer board, safety belt/harness/vest from DME"
label var bed "Hospital bed from DME"
label var chair "Wheelchair from DME"
label var oxy "Oxygen from DME"

foreach x of local dme {
	replace `x'=0 if `x'==.
}

gen n_fri=0

foreach x of local dme {
	replace n_fri=n_fri+1 if `x'==1
}
gen ind_fri=n_fri>=1 if !missing(n_fri)
label var ind_fri "Any mobility indicator from DME"
label var n_fri "Count of mobility indicators from DME"
gen mult_fri=n_fri>=2
label var mult_fri "Indicator of multiple mobility indicators from DME"

foreach x in `dme' ind_fri mult_fri n_fri {
	tab adl_impair_new `x', col nokey chi2
}


sum `dme' ind_fri mult_fri n_fri
tab1 `dme' ind_fri mult_fri n_fri

/*
gen ind_snf_12m=snf_paid_by_mc_12m>0
gen ind_hh_12m=hh_paid_by_mc_12m>0
*/

gen ind_snf_12m=n_snf_days_12m>0 & !missing(n_snf_days_12m)
gen ind_snf_or_hh_12m=ind_snf_12m==1 | ind_hh_12m==1
replace ind_hh_12m=0 if missing(ind_hh_12)
label var ind_snf_12m "Any SNF utilization"
label var ind_hh_ "Any HH utilization"
label var ind_snf_or_hh "Any HH or SNF utilization"

gen fri_hh_snf_oxy=ind_fri==1 | ind_snf_or_hh==1 | oxy==1
label var fri_hh_snf_oxy "Any HH, SNF, oxygen, or mobility indicator from DME"
gen fri_hh_snf =ind_snf_or_hh==1 | ind_fri==1
label var fri_hh_snf "Any HH, SNF, or mobility indicator from DME"
gen hh_snf_oxy=ind_snf_or_hh==1 | oxy==1
label var hh_snf_oxy "Any HH, SNF, or oxygen from DME"
gen fri_oxy =ind_fri | oxy
label var fri_oxy "Any mobility indcator or oxygen from DME"
gen bed_or_chair=bed==1 | chair==1
label var bed_or_chair "Hospital bed or wheelchair from DME"



/* table 1
demographics, by SR ADL impairment*/

local cvars age aveincome
gen age_lt75=age<=74
gen age_lt85=age>=75 & age<85
gen age_85=age>=85
label var age_lt75 "Age 65-74"
label var age_lt85 "Age 75-84"
label var age_85 "Age 85+"

tab income_cat, gen(inccat)
cap label define income_cat 0 "<15000" 1 "15-29,999" 2 "30-59,999" 3 ">60000"
label values income_cat income_cat
forvalues i=0/3 {
local lab : label income_cat `i'
label var inccat`=`i'+1' "`lab'"
}

foreach x  in cancer dem esrd chf copd diab_compl liver {
	local smi `smi' smi_`x'_ind
}


*gen prob_dem=dem_3_cat==1 if !missing(dem_3)
label var prob_dem "Probable dementia"
cap label define homebound_cat 1 "Homebound" 2 "Semi (Never by Self)" 3 "Semi: Needs Help/Diff" 4 "Not Homebound"
label values homebound_cat homebound_cat
tab homebound, gen(hb)
forvalues i=1/4 {
	local lab: label homebound_cat `i'
	label var hb`i' "`lab'"
}

local help
foreach x of varlist adl*help {
	local help `help' `x'
}
label var educ_hs_ind "Education: HS +"

keep if !missing(adl_index_new)
gen adl_2=adl_index_new>=2 if !missing(adl_index_new)
gen adl_3=adl_index_new>=3 if !missing(adl_index_new)
//note-3/7/18 add indicators for meeting 2 or all 3 criteria
gen ind_2=(ind_fri==1 & oxy==1) | (ind_fri==1 & ind_snf_or_hh==1) | ///
(oxy==1 & ind_snf_or_hh==1)
gen ind_3=ind_fri==1 & oxy==1 & ind_snf_or_hh==1
label var ind_2 "2+ indicators"
label var ind_3 "All 3 indicators"
label var adl_2 "Dependent in 2+ ADLs"
label var adl_3 "Dependent in 3+ ADLs"
local cvars age
local ivars age_lt75 age_lt85 age_85 inccat1 inccat2 inccat3 inccat4 ///
female white black hisp other_race married educ_hs_ind proxy ///
medicaid medigap srh_fp adl_impair_new hb1 hb2 hb3 hb4 prob_dem adl_2 adl_3 ///
`help' /*iadl_independent*/ `pps' `ind_indication' ///
`dmouth' `smi' `device' ind_hosp_adm_12m
local ipps pps100 pps90 pps80 ///
pps70 pps60 pps50 pps40 pps30 
local cout tot_paid_by_mc_12m n_hospd_p12m
local iout ind_hosp_adm_p12m died_12
foreach x of local ivars {
sum `x' if `x'==1 & adl_impair_new==1
}
local rn : word count `cvars' `ivars'
local r=1
local c=1
mat tab=J(`rn'+3,6,.)
mat stars=J(`rn'+3,6,0)

gen adl_impair1=1
gen adl_impair2=1 if adl_impair_new==0
gen adl_impair3=1 if adl_impair_new==1
gen adl_impair4=1 if adl_index_new>=2 & !missing(adl_index_new)
forvalues adl=1/4 {
	replace adl_impair`adl'=0 if missing(adl_impair`adl')
	foreach x in `cvars' {
		sum `x' if inlist(adl_impair`adl',1) [aw=anfinw]
		mat tab[`r',`c']=r(mean)
		if `adl'>2 {
			svy, subpop(if adl_impair2==1 | adl_impair`adl'==1): mean `x', ///
			over(adl_impair2)
			test [`x']0=[`x']1
			mat tab[`r',`c'+1]=r(p)
			mat stars[`r',`c'+1]=(r(p)<.05)+(r(p)<.01)
}
		local r=`r'+1
}
	foreach x in `ivars' {
		qui sum `x' if inlist(adl_impair`adl',1)
		local denom=r(mean)*r(N)
		sum `x' if inlist(adl_impair`adl',1) [aw=anfinw]
		if `denom'>=11 mat tab[`r',`c']=r(mean)*100
		if `adl'>2 {
			svy, subpop(if adl_impair2==1 | adl_impair`adl'==1): tab `x' adl_impair2
			mat tab[`r',`c'+1]=e(p_Pear)
			mat stars[`r',`c'+1]=(e(p_Pear)<.05)+(e(p_Pear)<.01)
}
		local r=`r'+1
}
	local r=`r'+1
	sum n if inlist(adl_impair`adl',1) [aw=anfinw]
	mat tab[`r',`c']=r(N)
	mat tab[`r'+1,`c']=r(sum)
	local r=1
	local c=`c'+1
	if `adl'==3 local c=`c'+1
}
mat rownames tab=`cvars' `ivars' "_" "N" "National Estimate"

frmttable using "`logpath'function.rtf", statmat(tab) addtable title("Sample Characteristics") ///
ctitles("" "Full Sample" "Non-ADL dependent" "ADL dependent 1+" "P" "ADL dependent 2+" "P") ///
sdec(2) varlabels annotate(stars) asymbol(*,**) ///
 note("NHATS wave 1 SP interviews, restricted to those with 12m FFS Medicare" ///
"ADL impairment defined as having assistance in 1+ ADL")

/*table 2
Weighted %
p-value
sensitivity=Indicator and ADL/All ADL
specificity=No Indicator or ADL/All non-ADL
PPV=Indicator and ADL/All Indicator
NPV=No indicator or ADL/All non-indicator
C-statistic=AUC
*/

//note--3/7/18--added indicator of 2 and/or 3
local vars `dme' bed_or_chair ind_fri mult_fri oxy ind_snf_12m ind_hh_12m ///
ind_snf_or_hh_12m ///
fri_hh_snf fri_oxy hh_snf_oxy fri_hh_snf_oxy ind_2 ind_3

local rn : word count `vars' 1 1 


local replace replace
forvalues timethrough=1/3 {
preserve
foreach dem in all {
replace adl_impair_new=0 if adl_index_new<`timethrough'
mat tab`dem'=J(`rn',9,.)
mat stars`dem'=J(`rn',9,0)
local r=1
local c=1

foreach i in "0,1" "0" "1" {
	foreach x of local vars {
		sum `x' if inlist(adl_impair_new,`i')
		if r(mean)*r(N)>=11	mat tab`dem'[`r',`c']=r(mean)*r(N)
		sum `x' if inlist(adl_impair_new,`i') [aw=anfinw]
		*mat tab`dem'[`r',`c'+1]=r(mean)*100
		if "`i'"=="1" & !inlist("`x'","bedpan","urinal"){
			*svy: tab adl_impair `x'
			*mat tab`dem'[`r',`c'+2]=e(p_Pear)
			*mat stars`dem'[`r',`c'+2]=(e(p_Pear)<.05)+(e(p_Pear)<.01)
			tab `x' adl_impair_new , matcell(cell) chi2
			mat tab`dem'[`r',`c'+1]=r(p)
			mat stars`dem'[`r',`c'+1]=(r(p)<.05)+(r(p)<.01)
			mat tab`dem'[`r',`c'+2]=(cell[2,2]/(cell[2,2]+cell[1,2]))*100
			mat tab`dem'[`r',`c'+3]=(cell[1,1]/(cell[2,1]+cell[1,1]))*100
			mat tab`dem'[`r',`c'+4]=(cell[2,2]/(cell[2,2]+cell[2,1]))*100
			mat tab`dem'[`r',`c'+5]=(cell[1,1]/(cell[1,2]+cell[1,1]))*100
			roctab adl_impair_new `x'
			mat tab`dem'[`r',`c'+6]=r(area)
}
		local r=`r'+1
}
	local r=`r'+1
	sum n if inlist(adl_impair_new,`i') [aw=anfinw]
	mat tab`dem'[`r',`c']=r(N)
	*mat tab`dem'[`r'+1,`c']=r(sum)
	local r=1
	local c=`c'+1
}
keep if dem_3_cat==1
mat rownames tab`dem'=`vars' "_" "N" 
}
restore
/*local vars `dme' ind_fri mult_fri ind_snf_12m ind_hh_12m ind_snf_or_hh_12m ///
fri_hh_snf fri_oxy hh_snf_oxy fri_hh_snf_oxy
*/
foreach x of local vars {
	local lab : var label `x'
	di "`lab'"
	local lab "`lab' \      % \"
	local rows `rows'`lab'
	local sdec `sdec'0,0,0,2\2,2,2,2\
	di "`sdec'"
}

local sdec `sdec'0,0,0,0\2,2,2,2\0,0,0,0
local sdec 0,0,0,2,2,2,2,2,2
frmttable using "`logpath'function.rtf", statmat(taball)  ctitles("" "Full Sample" ///
"Non-ADL dependent" "ADL dependent" "P-value" "Sensitivity" "Specificity" "PPV" "NPV" ///
"AUC") title("SR and claims-based function") ///
annotate(starsall) asymbol(*,**) sdec(`sdec') varlabels ///
note("NHATS wave 1 SP interviews, restricted to those with 12m FFS Medicare" ///
"ADL impairment defined as having assistance in `timethrough'+ ADLs") ///
addtable
local replace addtable


}

local vars age_lt75 age_lt85 age_85 inccat1 inccat2 inccat3 inccat4 ///
female white black hisp other_race married educ_hs_ind ///
medicaid medigap srh_fp adl_impair_new hb1 hb2 hb3 hb4 prob_dem adl_2 adl_3 ///
sr_cancer_ever

foreach x in sr_cancer_ever prob_dem married female educ_hs_ind {
	gen no_`x'=`x'==0 if !missing(`x')
}
label var no_sr_c "No cancer"
label var no_prob "Not demented"
label var no_marr "Not married"
label var no_fem "Male"
label var no_edu "Education: <HS"

local vars n sr_cancer_ever no_sr_cancer_ever prob_dem no_prob_dem ///
inccat1 inccat2 inccat3 inccat4 hb1 hb2 hb3 hb4 ///
white black hisp other_race age_lt75 age_lt85 age_85 married no_married ///
female no_female educ_hs_ind no_educ_hs_ind
label var n "Full Sample"
local group bed_or_chair ind_fri oxy ind_snf_or_hh_12m fri_hh_snf_oxy

label var fri_hh_snf_oxy "Any HH/SNF/FRI/Oxy"
label var ind_snf_or_hh_12m "Any HH/SNF"



local rn: word count `vars' 

local cn : word count `group' 

mat tab=J(`rn',`cn',.)
mat stars=J(`rn',`cn',0) 
local r=1
local c=1

foreach x of local vars {
	foreach g of local group {
		roctab adl_impair_new `g' if `x'==1
		mat tab[`r',`c']=r(area)
		local c=`c'+1
}
	local c=1
	local r=`r'+1
}



mat rownames tab=`vars'
mat colnames tab=`group'

frmttable using "`logpath'function.rtf", statmat(tab) varlabels sdec(2) annotate(stars) asymbol(*,**) ///
title ("C-Statistics, stratified by characteristics") addtable


local rn: word count `vars' 

local cn : word count `group' `group'

mat tab=J(`rn',`cn',.)
mat stars=J(`rn',`cn',0) 
local r=1
local c=1

foreach x of local vars {
	foreach g of local group {
		logit adl_impair_new `g' if `x'==1, or
		mat beta=e(b)
		mat tab[`r',`c']=exp(beta[1,1])
		mat p=r(table)
		scalar p=p[4,1]
		mat tab[`r',`c'+1]=p
		mat stars[`r',`c'+1]=(p<.05)+(p<.01)
		local c=`c'+2
}
	local c=1
	local r=`r'+1
}

foreach x of local group {
	local colnames `colnames' `x' P 
}

mat rownames tab=`vars'
mat colnames tab=`colnames'

frmttable using "`logpath'function.rtf", statmat(tab) varlabels sdec(2) annotate(stars) asymbol(*,**) ///
title ("Bivariate Odds Ratios, stratified by characteristics") substat(1) addtable


H="part 2"
capture log close
clear all
set more off
local logs E:\nhats\nhats_code\NHATS data setup\logs\

local r1raw E:\nhats\data\NHATS Public\round_1\
local r2raw E:\nhats\data\NHATS Public\round_2\
local r3raw E:\nhats\data\NHATS Public\round_3\
local r4raw E:\nhats\a\NHATS Public\round_4\
local r5raw E:\nhats\data\NHATS Public\round_5\
local r6raw E:\nhats\data\NHATS Public\round_6\
//local r7raw E:\nhats\data\NHATS Public\round_7\
local work E:\nhats\data\NHATS working data
local r1s E:\nhats\data\NHATS Sensitive\r1_sensitive\
local r2s E:\nhats\data\NHATS Sensitive\r2_sensitive\
local r3s E:\nhats\data\NHATS Sensitive\r3_sensitive\
local r4s E:\nhats\data\NHATS Sensitive\r4_sensitive\
local r5s E:\nhats\data\NHATS Sensitive\r5_sensitive\
local r6s E:\nhats\data\NHATS Sensitive\r6_sensitive\
local logs E:\nhats\nhats_code\NHATS data setup\logs\



//7/13/17--add in metro/nonmetro var
use "E:\nhats\data\NHATS Public\NHATS_Round_1_6_MetNonmet_STATA\NHATS_Round_1_6_MetNonmet.dta", clear
forvalues i=1/6 {
gen metro_ind`i'=r`i'd==1 if inrange(r`i'd,1,2)
}
reshape long metro_ind, i(spid) j(wave)
label var metro_ind "Lives in metropolitan area"
tempfile metro
save `metro'

cd "`work'"
use round_1_6_clean_helper_added.dta
merge 1:1 spid wave using `metro', keep(match master) nogen



//Add in 4/27---FRI specific code
gen insdhlp=mo1insdhlp 
label val insdhlp mo1insdhlp
gen oftgoarea=mo1oftgoarea
label val oftgoarea mo1oftgoarea 
gen oflvslepr=mo1oflvslepr 
label val oflvslepr mo1oflvslepr 
gen bedhlp=mo1bedhlp 
label val bedhlp mo1bedhlp
gen dreshlp=sc1dreshlp
label val dreshlp sc1dreshlp
gen dresoft=sc1dresoft 
label val dresoft sc1dresoft
gen toilhlp=sc1toilhlp 
label val toilhlp sc1toilhlp
gen bathhlp=sc1bathhlp 
label val bathhlp sc1bathhlp
gen showrbat1=sc1showrbat1 
label val showrbat1 sc1showrbat1
gen showrbat2=sc1showrbat2 
label val showrbat2 sc1showrbat2
gen showrbat3=sc1showrbat3 
label val showrbat3 sc1showrbat3 
gen eathlp=sc1eathlp 
label val eathlp sc1eathlp
//gen eatdev=sc1eatdev 
//label val eatdev sc1eatdev
gen outoft=mo1outoft
label val outoft mo1outoft
//gen ntlvrmslp=fl1ntlvrmslp
//label val ntlvrmslp fl1ntlvrmslp



//Add in 4/6/18---FRI project and then implemented throughout code.
egen dresslf=rowmax(sc*dresslf)
label val dresslf sc2dresslf
label var dresslf "Often you Dress Yourself"

egen dresdif=rowmax(sc*dresdif)
label val dresdif sc2dresdif
label var dresdif "Difficulty when using Special Items by Self"

egen ntlvrmslp=rowmax(fl*ntlvrmslp)
label val ntlvrmslp fl2ntlvrmslp 
label var ntlvrmslp "Often had to Stay in Bed"

egen eatdev=rowmax(sc*eatdev)
label val eatdev sc2eatdev
label var eatdev "Ever use Adapted Utensils"


///// 3/5/18 --Adding in FRI questions from round 1

foreach x in cane walker wheelchr {
capture drop `x'_nhats
gen `x'_nhats=fl1`x'
replace `x'_nhats=. if fl1`x'==-9 | (fl1`x'==-1 & sp_ivw==0) 
replace `x'_nhats=0 if fl1`x'==-1 & sp_ivw==1
label var `x'_nhats "`x' from NHATS"
}

capture drop com_nhats
recode sc1usvartoi1 (2=0) (-9 -1=.), gen(com_nhats)


capture drop bathtoi_nhats
gen bathtoi_nhats=. if wave==1 //if sc1dbathdevi==3 | sc1dbathdevi==4 | sc1dtoildevi==3 | sc1dtoildevi==4
replace bathtoi_nhats=0 if (sc1dbathdevi==1 & sc1dtoildevi==1) | (ho1bathamen3==2 & ho1bathamen4==2 & ho1bathamen5==2 & ho1bathamen6==2)
replace bathtoi_nhats=1 if sc1dbathdevi==2 | sc1dtoildevi==2 | ho1bathamen3==1 | ho1bathamen4==1 | ho1bathamen5==1 | ho1bathamen6==1

keep insdhlp oftgoarea oflvslepr bedhlp dreshlp dresoft toilhlp bathhlp ///
showrbat1 showrbat2 showrbat3 eathlp eatdev outoft ntlvrmslp *_nhats spid wave

merge 1:1 spid wave using "E:\nhats\data\NHATS cleaned\sp_round_1_6_public_sens_only.dta"

keep insdhlp oftgoarea oflvslepr bedhlp dreshlp dresoft toilhlp bathhlp ///
showrbat1 showrbat2 showrbat3 eathlp eatdev outoft ntlvrmslp *_nhats adl_dres_help ///
adl_eat_help adl_index spid wave

tempfile nhats
save "`nhats'"




local intpath "E:\nhats\data\Projects\serious_ill\int_data"
local datapath "E:\nhats\data\Projects\serious_ill\final_data"
local logpath "E:\nhats\data\Projects\serious_ill\logs\"

cd `datapath'
*log using `logpath'\nhats_dme_function.txt, text replace

use serious_ill_nhats_sample if wave==1

duplicates drop spid, force

drop adl_eat_help adl_dres_help adl_index
merge 1:1 spid wave using "`nhats'",  ///
keepusing(insdhlp oftgoarea oflvslepr bedhlp dreshlp dresoft toilhlp bathhlp ///
showrbat1 showrbat2 showrbat3 eathlp eatdev outoft ntlvrmslp bathtoi_nhats adl_dres_help ///
adl_eat_help adl_index) keep(match)
drop _merge

local vars n nonh sp_ivw_yes nomiss ffs_12m non_proxy

gen nonh=!nhres
label var nonh "SP interview eligible (not nursing home resident)"
gen n=1
label var n "Total Wave 1"
//created new adl_index var b/c we want to keep people who even answered one adl question
egen adl_index_new=rowtotal(adl_*_help) 
tab adl_index_new 

//no one is missing all adl help vars.
gen nomiss=!missing(adl_index_new)
label var nomiss "With responses to atleast 1 ADL question"
label var sp_ivw_yes "SP interview conducted"

gen non_proxy=0 if proxy_ivw==1
replace non_proxy=1 if proxy_ivw==0
label var non_proxy "Non-Proxy Interview"

mat tab=J(6,1,.)
local r=1

foreach x in `vars' {
	sum n if `x'==1
	mat tab[`r',1]=r(N)
	drop if `x'!=1
	local r=`r'+1
}

mat rownames tab=`vars'
frmttable using "`logpath'table.rtf", statmat(tab) replace title("Sample Derivation") ///
sdec(0) varlabels

use serious_ill_nhats_sample if wave==1 & sp_ivw==1 & ffs_12m==1 & proxy_ivw==0, clear 
//& !missing(adl_index), clear
foreach x of varlist device* {
	local device `device' `x'
}
//tab bathtoi
tab adl_dres_help
tab adl_eat_help
capture drop bathtoi adl_dres_help adl_eat_help
merge 1:1 spid wave using "`nhats'",  ///
keepusing(insdhlp oftgoarea oflvslepr bedhlp dreshlp dresoft toilhlp bathhlp ///
showrbat1 showrbat2 showrbat3 eathlp eatdev outoft ntlvrmslp *_nhats adl_dres_help ///
adl_eat_help adl_index ) keep(match)
drop _merge
//new variable definition taken
tab bathtoi
tab adl_dres_help
tab adl_eat_help

egen adl_index_new=rowtotal(adl_*_help)
tab adl_index_new

keep if !missing(adl_index_new)

gen adl_impair_new=1 if adl_index_new>0 & !missing(adl_index_new)
replace adl_impair_new=0 if adl_index_new==0

svyset varunit [pw=anfinw], strata(varstrat)
*replace adl_impair=0 if adl_index==1

gen caneorwalker=cane==1 | walker==1
local dme cane walker caneorwalker commode urinal bedpan tub_toil_dev lift bed chair //oxy
gen n=1

label var caneorwalker "Cane or walker from DME"
label var cane "Cane from DME"
label var walker "Walker from DME"
label var commode "Commode from DME"
label var urinal "Urinal from DME"
label var bedpan "Bedpan from DME"
label var tub_toil_dev "Toilet/tub/shower assistive device from DME"
label var lift "Lift, transfer board, safety belt/harness/vest from DME"
label var bed "Hospital bed from DME"
label var chair "Wheelchair from DME"
label var oxy "Oxygen from DME"

foreach x of local dme {
	replace `x'=0 if `x'==.
}

gen n_fri=0

foreach x of local dme {
	replace n_fri=n_fri+1 if `x'==1
}
gen ind_fri=n_fri>=1 if !missing(n_fri)
label var ind_fri "Any mobility indicator from DME"
label var n_fri "Count of mobility indicators from DME"
gen mult_fri=n_fri>=2
label var mult_fri "Indicator of multiple mobility indicators from DME"

foreach x in `dme' ind_fri mult_fri n_fri {
	tab adl_impair_new `x', col nokey chi2
}


sum `dme' ind_fri mult_fri n_fri
tab1 `dme' ind_fri mult_fri n_fri

/*
gen ind_snf_12m=snf_paid_by_mc_12m>0
gen ind_hh_12m=hh_paid_by_mc_12m>0
*/

gen ind_snf_12m=n_snf_days_12m>0 & !missing(n_snf_days_12m)
gen ind_snf_or_hh_12m=ind_snf_12m==1 | ind_hh_12m==1
replace ind_hh_12m=0 if missing(ind_hh_12)
label var ind_snf_12m "Any SNF utilization"
label var ind_hh_ "Any HH utilization"
label var ind_snf_or_hh "Any HH or SNF utilization"

gen fri_hh_snf_oxy=ind_fri==1 | ind_snf_or_hh==1 | oxy==1
label var fri_hh_snf_oxy "Any HH, SNF, oxygen, or mobility indicator from DME"
gen fri_hh_snf =ind_snf_or_hh==1 | ind_fri==1
label var fri_hh_snf "Any HH, SNF, or mobility indicator from DME"
gen hh_snf_oxy=ind_snf_or_hh==1 | oxy==1
label var hh_snf_oxy "Any HH, SNF, or oxygen from DME"
gen fri_oxy =ind_fri | oxy
label var fri_oxy "Any mobility indcator or oxygen from DME"
gen bed_or_chair=bed==1 | chair==1
label var bed_or_chair "Hospital bed or wheelchair from DME"




/////Tables

gen wheelchr=chair
gen com=commode
gen bathtoi=tub_toil

foreach x in cane walker wheelchr com bathtoi{
sum `x'_nhats if `x'==1 & `x'_nhats==1
local a=`r(N)'
sum `x'_nhats if `x'==0 & `x'_nhats==1
local b=`r(N)'
sum `x' if `x'==1 & `x'_nhats==0
local c=`r(N)'
sum `x' if `x'==0 & `x'_nhats==0
local d=`r(N)'

sum `x'_nhats if `x'_nhats==1 & `x'!=. 
local e=`r(N)'
sum `x'_nhats if `x'_nhats==0 & `x'!=. 
local f=`r(N)'
sum `x' if `x'==1 & `x'_nhats!=.
local g=`r(N)'
sum `x' if `x'==0 & `x'_nhats!=.
local h=`r(N)'

matrix `x'= (`a',`b',`e' \ (`a'/`e')*100 , (`b'/`e')*100 , 100 \ `c',`d',`f' \ (`c'/`f')*100 , (`d'/`f')*100 , 100 \ `g',`h',`g'+`h'\(`g'/(`g'+`h'))*100,(`h'/(`g'+`h'))*100, 100) 

}
tab cane_nhats cane, row
mat list cane



foreach x in cane walker wheelchr com bathtoi {
//if "`x'"!="cane" local add addtable
if "`x'"=="cane" local title Cane
if "`x'"=="walker" local title Walker
if "`x'"=="wheelchr" local title Wheelchair
if "`x'"=="com" local title Commode/Bedpan/Urinal
if "`x'"=="bathtoi" local title Shower/Tub/Toilet Assistive Device
frmttable using "`logpath'table.rtf", replace statmat(`x') ///
sdec(1) ctitle("NHATS/DME", Yes, No, Total) rtitle(Yes\ % \No\% \ Total \ %) ///
title("`title'") addtable
}


tab cane_nhats adl_bath_diff 


foreach x in cane walker wheelchr com bathtoi {

sum `x'_nhats if `x'_nhats==1 & adl_impair_new==1
local a=`r(N)'
sum `x'_nhats if `x'_nhats==1 & adl_impair_new==0
local b=`r(N)'
sum `x'_nhats if `x'_nhats==0 & adl_impair_new==1
local c=`r(N)'
sum `x'_nhats if `x'_nhats==0 & adl_impair_new==0
local d=`r(N)'

sum `x'_nhats if `x'_nhats==1 & adl_impair_new!=.
local e=`r(N)'
sum `x'_nhats if `x'_nhats==0 & adl_impair_new!=.
local f=`r(N)'
sum adl_impair_new if adl_impair_new==1 & `x'_nhats!=.
local g=`r(N)'
sum adl_impair_new if adl_impair_new==0 & `x'_nhats!=.
local h=`r(N)'

matrix `x'= (`a',`b',`e' \ (`a'/`e')*100 , (`b'/`e')*100 , 100 \ `c',`d',`f' \ (`c'/`f')*100 , (`d'/`f')*100 , 100 \ `g',`h',`g'+`h'\(`g'/(`g'+`h'))*100,(`h'/(`g'+`h'))*100, 100) 
}
tab cane_nhats adl_impair_new, row
mat list cane

foreach x in cane walker wheelchr com bathtoi {
//if "`x'"!="cane" local add addtable
if "`x'"=="cane" local title Cane v.s. ADL Impairment
if "`x'"=="walker" local title Walker v.s. ADL Impairment
if "`x'"=="wheelchr" local title Wheelchair v.s. ADL Impairment
if "`x'"=="com" local title Commode/Bedpan/Urinal v.s. ADL Impairment
if "`x'"=="bathtoi" local title Shower/Tub/Toilet Assistive Device v.s. ADL Impairment
frmttable using "`logpath'table.rtf", replace statmat(`x') ///
sdec(1) ctitle("NHATS/ADL Impair", Yes, No, Total) rtitle(Yes\ % \ No\ % \Total \ %) ///
title("`title'") addtable
}


capture drop any_dev_nhats
gen any_dev_nhats=1 if cane_nhats==1 | walker_nhats==1 | wheelchr_nhats==1 | com_nhats==1 | bathtoi_nhats==1
replace any_dev_nhats=0 if cane_nhats==0 & walker_nhats==0 & wheelchr_nhats==0 & com_nhats==0 & bathtoi_nhats==0

sum any_dev_nhats if any_dev_nhats==1 & adl_impair_new==1
local a=`r(N)'
sum any_dev_nhats if any_dev_nhats==1 & adl_impair_new==0
local b=`r(N)'
sum any_dev_nhats if any_dev_nhats==0 & adl_impair_new==1
local c=`r(N)'
sum any_dev_nhats if any_dev_nhats==0 & adl_impair_new==0
local d=`r(N)'

sum any_dev_nhats if any_dev_nhats==1 & adl_impair_new!=.
local e=`r(N)'
sum any_dev_nhats if any_dev_nhats==0 & adl_impair_new!=.
local f=`r(N)'
sum adl_impair_new if adl_impair_new==1 & any_dev_nhats!=.
local g=`r(N)'
sum adl_impair_new if adl_impair_new==0 & any_dev_nhats!=.
local h=`r(N)'

matrix any= (`a',`b',`e' \ (`a'/`e')*100 , (`b'/`e')*100 , 100 \ `c',`d',`f' \ (`c'/`f')*100 , (`d'/`f')*100 , 100 \ `g',`h',`g'+`h'\(`g'/(`g'+`h'))*100,(`h'/(`g'+`h'))*100, 100) 

tab any_dev_nhats adl_impair_new, row
matrix list any

frmttable using "`logpath'table.rtf", replace statmat(any) ///
sdec(1) ctitle("Any Device NHATS/ADL Impairment", Yes, No, Total, %) rtitle(Yes\ % \No\ % \Total \ %)  ///
title("`title'") addtable

 

///DME claim vs adl_impairment 
capture drop dme_cl*
egen dme_cl=rowtotal(cane walker commode urinal bedpan tub_toil_dev lift bed chair)

egen dme_c=rowtotal(cane walker commode urinal bedpan tub_toil_dev lift bed chair oxy ind_snf_or_hh_12m  )

gen dme_cl_1=0
replace dme_cl_1=1 if dme_cl>=1

gen dme_c_1=0
replace dme_c_1=1 if dme_c>=1

tab dme_cl_1 adl_impair_new

//Eat and dress vs DME
capture drop eat_dres
egen eat_dres=rowtotal(device_dres device_eat)
replace eat_dres=1 if eat_dres==2

tab dme_cl_1 eat_dres



sum n if adl_impair>=1 & dme_cl_1==0



preserve
keep if adl_impair_new==1 & dme_cl_1==0

sum eat_dres if eat_dres==1
local a=`r(N)'
sum eat_dres if eat_dres==0
local b=`r(N)'

tab eat_dres

matrix dme= (`a', ((`a'/(`a'+`b'))*100) \ `b', ((`b'/(`a'+`b'))*100) \ `a'+`b', 100)

restore

preserve
keep if adl_impair_new==1 & dme_c_1==0

sum eat_dres if eat_dres==1
local a=`r(N)'
sum eat_dres if eat_dres==0
local b=`r(N)'

tab eat_dres

matrix dme1= (`a', ((`a'/(`a'+`b'))*100) \ `b', ((`b'/(`a'+`b'))*100) \ `a'+`b', 100)
restore

foreach x in dme dme1 {

if "`x'"=="dme" local title ADL Impaired Self Report & DME Sample Excluding Oxygen, HH, & SNF 
if "`x'"=="dme1" local title ADL Impaired Self Report & DME Sample Including Oxygen, HH, & SNF 

frmttable using "`logpath'table.rtf", replace statmat(`x') ///
sdec(1) ctitle("Eating and/or Dressing Device Self Report", Freq., %) rtitle(Yes\ No \ Total)  ///
title("`title'") addtable
}


//put this into the word doc in same format
capture drop tag_dme
egen tag_dme= anymatch(cane walker commode urinal bedpan tub_toil_dev chair), v(1)
label var tag_dme "Claim for any device"

sum device_any if device_any==1 & tag_dme==1
local a=`r(N)'
sum device_any if device_any==1 & tag_dme==0
local b=`r(N)'
sum device_any if device_any==0 & tag_dme==1
local c=`r(N)'
sum device_any if device_any==0 & tag_dme==0
local d=`r(N)'

sum device_any if device_any==1 & tag_dme!=.
local e=`r(N)'
sum device_any if device_any==0 & tag_dme!=.
local f=`r(N)'
sum tag_dme if tag_dme==1 & device_any!=.
local g=`r(N)'
sum tag_dme if tag_dme==0 & device_any!=.
local h=`r(N)'

matrix dev= (`a',`b',`e' \ (`a'/`e')*100 , (`b'/`e')*100 , 100 \ `c',`d',`f' \ (`c'/`f')*100 , (`d'/`f')*100 , 100 \ `g',`h',`g'+`h'\(`g'/(`g'+`h'))*100,(`h'/(`g'+`h'))*100, 100) 
mat list dev

frmttable using "`logpath'table.rtf", replace statmat(dev) ///
sdec(1) ctitle("Self Report/Claims", Yes, No, Total) rtitle(Yes\ % \ No\ % \ Total \ %)  ///
title("Self Report using any Device vs. Claim for any Device") addtable ///
note("Excludes Oxygen & Lift")


tab device_any tag_dme, row


H="part 3"
capture log close
clear all
set more off
local logs E:\nhats\nhats_code\NHATS data setup\logs\

local r1raw E:\nhats\data\NHATS Public\round_1\
local r2raw E:\nhats\data\NHATS Public\round_2\
local r3raw E:\nhats\data\NHATS Public\round_3\
local r4raw E:\nhats\a\NHATS Public\round_4\
local r5raw E:\nhats\data\NHATS Public\round_5\
local r6raw E:\nhats\data\NHATS Public\round_6\
//local r7raw E:\nhats\data\NHATS Public\round_7\
local work E:\nhats\data\NHATS working data
local r1s E:\nhats\data\NHATS Sensitive\r1_sensitive\
local r2s E:\nhats\data\NHATS Sensitive\r2_sensitive\
local r3s E:\nhats\data\NHATS Sensitive\r3_sensitive\
local r4s E:\nhats\data\NHATS Sensitive\r4_sensitive\
local r5s E:\nhats\data\NHATS Sensitive\r5_sensitive\
local r6s E:\nhats\data\NHATS Sensitive\r6_sensitive\
local logs E:\nhats\nhats_code\NHATS data setup\logs\



//7/13/17--add in metro/nonmetro var
use "E:\nhats\data\NHATS Public\NHATS_Round_1_6_MetNonmet_STATA\NHATS_Round_1_6_MetNonmet.dta", clear
forvalues i=1/6 {
gen metro_ind`i'=r`i'd==1 if inrange(r`i'd,1,2)
}
reshape long metro_ind, i(spid) j(wave)
label var metro_ind "Lives in metropolitan area"
tempfile metro
save `metro'

cd "`work'"
use round_1_6_clean_helper_added.dta
merge 1:1 spid wave using `metro', keep(match master) nogen



//Add in 4/27---FRI specific code
gen insdhlp=mo1insdhlp 
label val insdhlp mo1insdhlp
gen oftgoarea=mo1oftgoarea
label val oftgoarea mo1oftgoarea 
gen oflvslepr=mo1oflvslepr 
label val oflvslepr mo1oflvslepr 
gen bedhlp=mo1bedhlp 
label val bedhlp mo1bedhlp
gen dreshlp=sc1dreshlp
label val dreshlp sc1dreshlp
gen dresoft=sc1dresoft 
label val dresoft sc1dresoft
gen toilhlp=sc1toilhlp 
label val toilhlp sc1toilhlp
gen bathhlp=sc1bathhlp 
label val bathhlp sc1bathhlp
gen showrbat1=sc1showrbat1 
label val showrbat1 sc1showrbat1
gen showrbat2=sc1showrbat2 
label val showrbat2 sc1showrbat2
gen showrbat3=sc1showrbat3 
label val showrbat3 sc1showrbat3 
gen eathlp=sc1eathlp 
label val eathlp sc1eathlp
//gen eatdev=sc1eatdev 
//label val eatdev sc1eatdev
gen outoft=mo1outoft
label val outoft mo1outoft
//gen ntlvrmslp=fl1ntlvrmslp
//label val ntlvrmslp fl1ntlvrmslp



//Add in 4/6/18---FRI project and then implemented throughout code.
egen dresslf=rowmax(sc*dresslf)
label val dresslf sc2dresslf
label var dresslf "Often you Dress Yourself"

egen dresdif=rowmax(sc*dresdif)
label val dresdif sc2dresdif
label var dresdif "Difficulty when using Special Items by Self"

egen ntlvrmslp=rowmax(fl*ntlvrmslp)
label val ntlvrmslp fl2ntlvrmslp 
label var ntlvrmslp "Often had to Stay in Bed"

egen eatdev=rowmax(sc*eatdev)
label val eatdev sc2eatdev
label var eatdev "Ever use Adapted Utensils"


///// 3/5/18 --Adding in FRI questions from round 1

foreach x in cane walker wheelchr {
capture drop `x'_nhats
gen `x'_nhats=fl1`x'
replace `x'_nhats=. if fl1`x'==-9 | (fl1`x'==-1 & sp_ivw==0) 
replace `x'_nhats=0 if fl1`x'==-1 & sp_ivw==1
label var `x'_nhats "`x' from NHATS"
}

capture drop com_nhats
recode sc1usvartoi1 (2=0) (-9 -1=.), gen(com_nhats)


capture drop bathtoi_nhats
gen bathtoi_nhats=. if wave==1 //if sc1dbathdevi==3 | sc1dbathdevi==4 | sc1dtoildevi==3 | sc1dtoildevi==4
replace bathtoi_nhats=0 if (sc1dbathdevi==1 & sc1dtoildevi==1) | (ho1bathamen3==2 & ho1bathamen4==2 & ho1bathamen5==2 & ho1bathamen6==2)
replace bathtoi_nhats=1 if sc1dbathdevi==2 | sc1dtoildevi==2 | ho1bathamen3==1 | ho1bathamen4==1 | ho1bathamen5==1 | ho1bathamen6==1

keep insdhlp oftgoarea oflvslepr bedhlp dreshlp dresoft toilhlp bathhlp ///
showrbat1 showrbat2 showrbat3 eathlp eatdev outoft ntlvrmslp *_nhats spid wave

merge 1:1 spid wave using "E:\nhats\data\NHATS cleaned\sp_round_1_6_public_sens_only.dta"

keep insdhlp oftgoarea oflvslepr bedhlp dreshlp dresoft toilhlp bathhlp ///
showrbat1 showrbat2 showrbat3 eathlp eatdev outoft ntlvrmslp *_nhats adl_dres_help ///
adl_eat_help adl_index spid wave

tempfile nhats
save "`nhats'"




local intpath "E:\nhats\data\Projects\serious_ill\int_data"
local datapath "E:\nhats\data\Projects\serious_ill\final_data"
local logpath "E:\nhats\data\Projects\serious_ill\logs\"

cd `datapath'
*log using `logpath'\nhats_dme_function.txt, text replace

use serious_ill_nhats_sample if wave==1

duplicates drop spid, force

drop adl_eat_help adl_dres_help adl_index
merge 1:1 spid wave using "`nhats'",  ///
keepusing(insdhlp oftgoarea oflvslepr bedhlp dreshlp dresoft toilhlp bathhlp ///
showrbat1 showrbat2 showrbat3 eathlp eatdev outoft ntlvrmslp bathtoi_nhats adl_dres_help ///
adl_eat_help adl_index) keep(match)
drop _merge

local vars n nonh sp_ivw_yes nomiss ffs_12m non_proxy

gen nonh=!nhres
label var nonh "SP interview eligible (not nursing home resident)"
gen n=1
label var n "Total Wave 1"
//created new adl_index var b/c we want to keep people who even answered one adl question
egen adl_index_new=rowtotal(adl_*_help) 
tab adl_index_new 

//no one is missing all adl help vars.
gen nomiss=!missing(adl_index_new)
label var nomiss "With responses to atleast 1 ADL question"
label var sp_ivw_yes "SP interview conducted"

gen non_proxy=0 if proxy_ivw==1
replace non_proxy=1 if proxy_ivw==0
label var non_proxy "Non-Proxy Interview"

mat tab=J(6,1,.)
local r=1

foreach x in `vars' {
	sum n if `x'==1
	mat tab[`r',1]=r(N)
	drop if `x'!=1
	local r=`r'+1
}

mat rownames tab=`vars'

frmttable using "`logpath'table_all.rtf", statmat(tab) replace title("Sample Derivation") ///
sdec(0) varlabels

frmttable using "`logpath'table_adl.rtf", statmat(tab) replace title("Sample Derivation") ///
sdec(0) varlabels

use serious_ill_nhats_sample if wave==1 & sp_ivw==1 & ffs_12m==1 & proxy_ivw==0, clear 
//& !missing(adl_index), clear
foreach x of varlist device* {
	local device `device' `x'
}
//tab bathtoi
tab adl_dres_help
tab adl_eat_help
capture drop bathtoi adl_dres_help adl_eat_help
merge 1:1 spid wave using "`nhats'",  ///
keepusing(insdhlp oftgoarea oflvslepr bedhlp dreshlp dresoft toilhlp bathhlp ///
showrbat1 showrbat2 showrbat3 eathlp eatdev outoft ntlvrmslp *_nhats adl_dres_help ///
adl_eat_help adl_index ) keep(match)
drop _merge
//new variable definition taken
tab bathtoi
tab adl_dres_help
tab adl_eat_help

egen adl_index_new=rowtotal(adl_*_help)
tab adl_index_new

keep if !missing(adl_index_new)

gen adl_impair_new=1 if adl_index_new>0 & !missing(adl_index_new)
replace adl_impair_new=0 if adl_index_new==0

svyset varunit [pw=anfinw], strata(varstrat)
*replace adl_impair=0 if adl_index==1

gen caneorwalker=cane==1 | walker==1
local dme cane walker caneorwalker commode urinal bedpan tub_toil_dev lift bed chair //oxy
gen n=1

label var caneorwalker "Cane or walker from DME"
label var cane "Cane from DME"
label var walker "Walker from DME"
label var commode "Commode from DME"
label var urinal "Urinal from DME"
label var bedpan "Bedpan from DME"
label var tub_toil_dev "Toilet/tub/shower assistive device from DME"
label var lift "Lift, transfer board, safety belt/harness/vest from DME"
label var bed "Hospital bed from DME"
label var chair "Wheelchair from DME"
label var oxy "Oxygen from DME"

foreach x of local dme {
	replace `x'=0 if `x'==.
}

gen n_fri=0

foreach x of local dme {
	replace n_fri=n_fri+1 if `x'==1
}
gen ind_fri=n_fri>=1 if !missing(n_fri)
label var ind_fri "Any mobility indicator from DME"
label var n_fri "Count of mobility indicators from DME"
gen mult_fri=n_fri>=2
label var mult_fri "Indicator of multiple mobility indicators from DME"

foreach x in `dme' ind_fri mult_fri n_fri {
	tab adl_impair_new `x', col nokey chi2
}


sum `dme' ind_fri mult_fri n_fri
tab1 `dme' ind_fri mult_fri n_fri

/*
gen ind_snf_12m=snf_paid_by_mc_12m>0
gen ind_hh_12m=hh_paid_by_mc_12m>0
*/

gen ind_snf_12m=n_snf_days_12m>0 & !missing(n_snf_days_12m)
gen ind_snf_or_hh_12m=ind_snf_12m==1 | ind_hh_12m==1
replace ind_hh_12m=0 if missing(ind_hh_12)
label var ind_snf_12m "Any SNF utilization"
label var ind_hh_ "Any HH utilization"
label var ind_snf_or_hh "Any HH or SNF utilization"

gen fri_hh_snf_oxy=ind_fri==1 | ind_snf_or_hh==1 | oxy==1
label var fri_hh_snf_oxy "Any HH, SNF, oxygen, or mobility indicator from DME"
gen fri_hh_snf =ind_snf_or_hh==1 | ind_fri==1
label var fri_hh_snf "Any HH, SNF, or mobility indicator from DME"
gen hh_snf_oxy=ind_snf_or_hh==1 | oxy==1
label var hh_snf_oxy "Any HH, SNF, or oxygen from DME"
gen fri_oxy =ind_fri | oxy
label var fri_oxy "Any mobility indcator or oxygen from DME"
gen bed_or_chair=bed==1 | chair==1
label var bed_or_chair "Hospital bed or wheelchair from DME"



gen all=1 
gen adl=1 if adl_impair_new==1
 
/////Tables


foreach p in all adl{
preserve
keep if `p'==1

gen wheelchr=chair
gen com=commode
gen bathtoi=tub_toil

foreach x in cane walker wheelchr com bathtoi{
sum `x'_nhats if `x'==1 & `x'_nhats==1
local a=`r(N)'
sum `x'_nhats if `x'==0 & `x'_nhats==1
local b=`r(N)'
sum `x' if `x'==1 & `x'_nhats==0
local c=`r(N)'
sum `x' if `x'==0 & `x'_nhats==0
local d=`r(N)'

sum `x'_nhats if `x'_nhats==1 & `x'!=. 
local e=`r(N)'
sum `x'_nhats if `x'_nhats==0 & `x'!=. 
local f=`r(N)'
sum `x' if `x'==1 & `x'_nhats!=.
local g=`r(N)'
sum `x' if `x'==0 & `x'_nhats!=.
local h=`r(N)'

matrix `x'= (`a',`b',`e' \ (`a'/`e')*100 , (`b'/`e')*100 , 100 \ `c',`d',`f' \ (`c'/`f')*100 , (`d'/`f')*100 , 100 \ `g',`h',`g'+`h'\(`g'/(`g'+`h'))*100,(`h'/(`g'+`h'))*100, 100) 

}
tab cane_nhats cane, row
mat list cane



foreach x in cane walker wheelchr com bathtoi {
if "`x'"!="cane" local add addtable
if "`x'"=="cane" local title Cane
if "`x'"=="walker" local title Walker
if "`x'"=="wheelchr" local title Wheelchair
if "`x'"=="com" local title Commode/Bedpan/Urinal
if "`x'"=="bathtoi" local title Shower/Tub/Toilet Assistive Device
frmttable using "`logpath'table_`p'.rtf", replace statmat(`x') ///
sdec(1) ctitle("NHATS/DME", Yes, No, Total) rtitle(Yes\ % \No\% \ Total \ %) ///
title("`title'") addtable
}


tab cane_nhats adl_bath_diff 


foreach x in cane walker wheelchr com bathtoi {

sum `x'_nhats if `x'_nhats==1 & adl_impair_new==1
local a=`r(N)'
sum `x'_nhats if `x'_nhats==1 & adl_impair_new==0
local b=`r(N)'
sum `x'_nhats if `x'_nhats==0 & adl_impair_new==1
local c=`r(N)'
sum `x'_nhats if `x'_nhats==0 & adl_impair_new==0
local d=`r(N)'

sum `x'_nhats if `x'_nhats==1 & adl_impair_new!=.
local e=`r(N)'
sum `x'_nhats if `x'_nhats==0 & adl_impair_new!=.
local f=`r(N)'
sum adl_impair_new if adl_impair_new==1 & `x'_nhats!=.
local g=`r(N)'
sum adl_impair_new if adl_impair_new==0 & `x'_nhats!=.
local h=`r(N)'

matrix `x'= (`a',`b',`e' \ (`a'/`e')*100 , (`b'/`e')*100 , 100 \ `c',`d',`f' \ (`c'/`f')*100 , (`d'/`f')*100 , 100 \ `g',`h',`g'+`h'\(`g'/(`g'+`h'))*100,(`h'/(`g'+`h'))*100, 100) 
}
tab cane_nhats adl_impair_new, row
mat list cane

foreach x in cane walker wheelchr com bathtoi {
//if "`x'"!="cane" local add addtable
if "`x'"=="cane" local title Cane v.s. ADL Impairment
if "`x'"=="walker" local title Walker v.s. ADL Impairment
if "`x'"=="wheelchr" local title Wheelchair v.s. ADL Impairment
if "`x'"=="com" local title Commode/Bedpan/Urinal v.s. ADL Impairment
if "`x'"=="bathtoi" local title Shower/Tub/Toilet Assistive Device v.s. ADL Impairment
frmttable using "`logpath'table_`p'.rtf", replace statmat(`x') ///
sdec(1) ctitle("NHATS/ADL Impair", Yes, No, Total) rtitle(Yes\ % \ No\ % \Total \ %) ///
title("`title'") addtable
}


capture drop any_dev_nhats
gen any_dev_nhats=1 if cane_nhats==1 | walker_nhats==1 | wheelchr_nhats==1 | com_nhats==1 | bathtoi_nhats==1
replace any_dev_nhats=0 if cane_nhats==0 & walker_nhats==0 & wheelchr_nhats==0 & com_nhats==0 & bathtoi_nhats==0

sum any_dev_nhats if any_dev_nhats==1 & adl_impair_new==1
local a=`r(N)'
sum any_dev_nhats if any_dev_nhats==1 & adl_impair_new==0
local b=`r(N)'
sum any_dev_nhats if any_dev_nhats==0 & adl_impair_new==1
local c=`r(N)'
sum any_dev_nhats if any_dev_nhats==0 & adl_impair_new==0
local d=`r(N)'

sum any_dev_nhats if any_dev_nhats==1 & adl_impair_new!=.
local e=`r(N)'
sum any_dev_nhats if any_dev_nhats==0 & adl_impair_new!=.
local f=`r(N)'
sum adl_impair_new if adl_impair_new==1 & any_dev_nhats!=.
local g=`r(N)'
sum adl_impair_new if adl_impair_new==0 & any_dev_nhats!=.
local h=`r(N)'

matrix any= (`a',`b',`e' \ (`a'/`e')*100 , (`b'/`e')*100 , 100 \ `c',`d',`f' \ (`c'/`f')*100 , (`d'/`f')*100 , 100 \ `g',`h',`g'+`h'\(`g'/(`g'+`h'))*100,(`h'/(`g'+`h'))*100, 100) 

tab any_dev_nhats adl_impair_new, row
matrix list any

frmttable using "`logpath'table_`p'.rtf", replace statmat(any) ///
sdec(1) ctitle("Any Device NHATS/ADL Impairment", Yes, No, Total, %) rtitle(Yes\ % \No\ % \Total \ %)  ///
title(Any NHATS Device V.S. ADL Impairment) addtable


///DME claim vs adl_impairment 
capture drop dme_cl*
egen dme_cl=rowtotal(cane walker commode urinal bedpan tub_toil_dev lift bed chair)

egen dme_c=rowtotal(cane walker commode urinal bedpan tub_toil_dev lift bed chair oxy ind_snf_or_hh_12m  )

gen dme_cl_1=0
replace dme_cl_1=1 if dme_cl>=1

gen dme_c_1=0
replace dme_c_1=1 if dme_c>=1

tab dme_cl_1 adl_impair_new

//Eat and dress vs DME
capture drop eat_dres
egen eat_dres=rowtotal(device_dres device_eat)
replace eat_dres=1 if eat_dres==2

tab dme_cl_1 eat_dres



sum n if adl_impair>=1 & dme_cl_1==0


tempfile temp`p'
save "'temp`p''", replace
keep if adl_impair_new==1 & dme_cl_1==0

sum eat_dres if eat_dres==1
local a=`r(N)'
sum eat_dres if eat_dres==0
local b=`r(N)'

tab eat_dres

matrix dme= (`a', ((`a'/(`a'+`b'))*100) \ `b', ((`b'/(`a'+`b'))*100) \ `a'+`b', 100)

use "'temp`p''", clear

tempfile temp1`p'
save "'temp1`p''", replace

keep if adl_impair_new==1 & dme_c_1==0

sum eat_dres if eat_dres==1
local a=`r(N)'
sum eat_dres if eat_dres==0
local b=`r(N)'

tab eat_dres

matrix dme1= (`a', ((`a'/(`a'+`b'))*100) \ `b', ((`b'/(`a'+`b'))*100) \ `a'+`b', 100)
use "'temp1`p''", clear


foreach x in dme dme1 {

if "`x'"=="dme" local title ADL Impaired Self Report & DME Sample Excluding Oxygen, HH, & SNF 
if "`x'"=="dme1" local title ADL Impaired Self Report & DME Sample Including Oxygen, HH, & SNF 

frmttable using "`logpath'table_`p'.rtf", replace statmat(`x') ///
sdec(1) ctitle("Eating and/or Dressing Device Self Report", Freq., %) rtitle(Yes\ No \ Total)  ///
title("`title'") addtable
}


capture drop tag_dme
egen tag_dme= anymatch(cane walker commode urinal bedpan tub_toil_dev chair), v(1)
label var tag_dme "Claim for any device"

sum device_any if any_dev_nhats==1 & tag_dme==1
local a=`r(N)'
sum device_any if any_dev_nhats==1 & tag_dme==0
local b=`r(N)'
sum device_any if any_dev_nhats==0 & tag_dme==1
local c=`r(N)'
sum device_any if any_dev_nhats==0 & tag_dme==0
local d=`r(N)'

sum device_any if any_dev_nhats==1 & tag_dme!=.
local e=`r(N)'
sum device_any if any_dev_nhats==0 & tag_dme!=.
local f=`r(N)'
sum tag_dme if tag_dme==1 & any_dev_nhats!=.
local g=`r(N)'
sum tag_dme if tag_dme==0 & any_dev_nhats!=.
local h=`r(N)'

matrix dev= (`a',`b',`e' \ (`a'/`e')*100 , (`b'/`e')*100 , 100 \ `c',`d',`f' \ (`c'/`f')*100 , (`d'/`f')*100 , 100 \ `g',`h',`g'+`h'\(`g'/(`g'+`h'))*100,(`h'/(`g'+`h'))*100, 100) 
mat list dev

frmttable using "`logpath'table_`p'.rtf", replace statmat(dev) ///
sdec(1) ctitle("Self Report/Claims", Yes, No, Total) rtitle(Yes\ % \ No\ % \ Total \ %)  ///
title("Self Report using any Device vs. Claim for any Device") addtable ///
note("Excludes Oxygen & Lift")


tab device_any tag_dme, row

tab any_dev_nhats device_any
restore
}

