= V4 Outline MultiLine NoSorting TabWidth=30

H="Function-Related Indicators"
Looking at the Function-related indicators 
from  "Association Between Preadmission Functional Status and Use and Effectiveness of Secondary Prevention Medications in Elderly Survivors of Acute Myocardial Infarction" by Elizabeth Chrischilles, et al.

-uses NHATS serious illness dataset
-restricted to wave 1 interviews with 12+ months of FFS

FRIs are-
-cane
-walker
-commode
-bedpan
-urinal
-shower/tub/toilet assistive device
-lift, transfer board, safety belt/harness/vest
-hospital bed
-wheelchair
-oxygen

all from the DME file, using the codes from the online Appendix to the paper.  Other indicator: blood transfusion, supplemental nutrition, chronic ulcer of skin, pneumonia, delerium/dementia/alzheimer's, bone marrow failure, depression, respiratory failure/insufficiency/arrest, and malnutition and unintedned weight loss are not included as of 7/25/17

H="tabs, crosstabs with ADL"
clear all 
set more off
capture log close

local intpath "E:\nhats\data\Projects\serious_ill\int_data"
local datapath "E:\nhats\data\Projects\serious_ill\final_data"
local logpath "E:\nhats\data\Projects\serious_ill\logs"

cd `datapath'
log using `logpath'\nhats_dme_function.txt, text replace

use serious_ill_nhats_sample if wave==1 & sp_ivw==1 & ffs_12m==1, clear

local dme cane walker commode urinal bedpan tub_toil_dev lift bed chair //oxy

label var cane "Cane from DME, 12m"
label var walker "Walker from DME, 12m"
label var commode "Commode from DME, 12m"
label var urinal "Urinal from DME, 12m"
label var bedpan "Bedpan from DME, 12m"
label var tub_toil_dev "Toilet/tub/shower assistive device from DME, 12m"
label var lift "Lift, transfer board, safety belt/harness/vest from DME, 12m"
label var bed "Hospital bed from DME, 12m"
label var chair "Wheelchair from DME, 12m"
label var oxygen "Oxygen from DME, 12m"

foreach x of local dme {
	replace `x'=0 if `x'==.
}

gen n_fri=0

foreach x of local dme {
	replace n_fri=n_fri+1 if `x'==1
}
gen ind_fri=n_fri>=1 if !missing(n_fri)
label var ind_fri "Indicator any FRI from DME"
label var n_fri "Count of FRIs from DME"
gen mult_fri=n_fri>=2
label var mult_fri "Indicator of multiple FRIs from DME"

foreach x in `dme' ind_fri mult_fri n_fri {
	tab adl_impair `x', col nokey chi2
}


sum `dme' ind_fri mult_fri n_fri
tab1 `dme' ind_fri mult_fri n_fri

gen ind_snf_12m=snf_paid_by_mc_12m>0
gen ind_hh_12m=hh_paid_by_mc_12m>0
gen ind_snf_or_hh_12m=ind_snf_12m==1 | ind_hh_12m==1
label var ind_snf_12m "Indicator any SNF utilization, 12m"
label var ind_hh_ "Indicator any HH utilization, 12m"
label var ind_snf_or_hh "indicator any HH or SNF utilization, 12m"

gen fri_hh_snf_oxy=ind_fri==1 | ind_snf_or_hh==1 | oxygen==1


H="ADL & FRI with outcomes"
clear all 
set more off
capture log close

local intpath "E:\nhats\data\Projects\serious_ill\int_data"
local datapath "E:\nhats\data\Projects\serious_ill\final_data"
local logpath "E:\nhats\data\Projects\IAH\logs\"

cd `datapath'
log using `logpath'\nhats_dme_function.txt, text replace

use serious_ill_nhats_sample if wave==1 & sp_ivw==1 & ffs_12m==1 & ///
!missing(adl_index), clear
svyset varunit [pw=anfinw], strata(varstrat)
*replace adl_impair=0 if adl_index==1
local dme cane walker commode urinal bedpan tub_toil_dev lift bed chair //oxy
gen n=1
label var cane "Cane from DME"
label var walker "Walker from DME"
label var commode "Commode from DME"
label var urinal "Urinal from DME"
label var bedpan "Bedpan from DME"
label var tub_toil_dev "Toilet/tub/shower assistive device from DME"
label var lift "Lift, transfer board, safety belt/harness/vest from DME"
label var bed "Hospital bed from DME"
label var chair "Wheelchair from DME"
label var oxy "Oxygen from DME"

foreach x of local dme {
	replace `x'=0 if `x'==.
}

gen n_fri=0

foreach x of local dme {
	replace n_fri=n_fri+1 if `x'==1
}
gen ind_fri=n_fri>=1 if !missing(n_fri)
label var ind_fri "Any mobility indicator from DME"
label var n_fri "Count of mobility indicators from DME"
gen mult_fri=n_fri>=2
label var mult_fri "Indicator of multiple mobility indicators from DME"

foreach x in `dme' ind_fri mult_fri n_fri {
	tab adl_impair `x', col nokey chi2
}


sum `dme' ind_fri mult_fri n_fri
tab1 `dme' ind_fri mult_fri n_fri

/*gen ind_snf_12m=snf_paid_by_mc_12m>0
gen ind_hh_12m=hh_paid_by_mc_12m>0*/
gen ind_snf_12m=n_snf_days_12m>0 & !missing(n_snf_days_12m)
replace ind_hh_12m=0 if missing(ind_hh_12m)
gen ind_snf_or_hh_12m=ind_snf_12m==1 | ind_hh_12m==1
label var ind_snf_12m "Any SNF utilization"
label var ind_hh_ "Any HH utilization"
label var ind_snf_or_hh "Any HH or SNF utilization"

gen fri_hh_snf_oxy=ind_fri==1 | ind_snf_or_hh==1 | oxy==1
label var fri_hh_snf_oxy "Any HH, SNF, oxygen, or mobility indicator from DME"
gen fri_hh_snf =ind_snf_or_hh==1 | ind_fri==1
label var fri_hh_snf "Any HH, SNF, or mobility indicator from DME"
gen hh_snf_oxy=ind_snf_or_hh==1 | oxy==1
label var hh_snf_oxy "Any HH, SNF, or oxygen from DME"
gen fri_oxy =ind_fri | oxy
label var fri_oxy "Any mobility indcator or oxygen from DME"
gen bed_or_chair=bed==1 | chair==1
label var bed_or_chair "Hospital bed or wheelchair from DME"



/* table 1
demographics, by SR ADL impairment*/

local cvars age aveincome
gen age_lt75=age<=74
gen age_lt85=age>=75 & age<85
gen age_85=age>=85
label var age_lt75 "Age 65-74"
label var age_lt85 "Age 75-84"
label var age_85 "Age 85+"

tab income_cat, gen(inccat)
label define income_cat 0 "<15000" 1 "15-29,999" 2 "30-59,999" 3 ">60000"
label values income_cat income_cat
forvalues i=0/3 {
local lab : label income_cat `i'
label var inccat`=`i'+1' "`lab'"
}

foreach x  in cancer dem esrd chf copd diab_compl liver {
	local smi `smi' smi_`x'_ind
}


*gen prob_dem=dem_3_cat==1 if !missing(dem_3)
*label var prob_dem "Probable dementia"
label define homebound_cat 1 "Homebound" 2 "Semi (Never by Self)" 3 "Semi: Needs Help/Diff" 4 "Not Homebound"
label values homebound_cat homebound_cat
tab homebound, gen(hb)
forvalues i=1/4 {
	local lab: label homebound_cat `i'
	label var hb`i' "`lab'"
}

gen white_oth=white==1 | other_race==1 if !missing(white)
label var white_oth "White, non-hispanic or other race"
label var educ_hs_ind "Education: HS +"

keep if !missing(adl_index)
gen adl_2=adl_index>=2 if !missing(adl_index)
gen adl_3=adl_index>=3 if !missing(adl_index)
label var adl_2 "Dependent in 2+ ADLs"
label var adl_3 "Dependent in 3+ ADLs"
local ivars age_lt75 age_lt85 age_85 inccat1 inccat2 inccat3 inccat4 ///
female white_oth black hisp married educ_hs_ind proxy ///
medicaid medigap srh_fp adl_impair hb1 hb2 hb3 hb4 prob_dem adl_2 adl_3 /*iadl_independent*/ `pps' `ind_indication' ///
`dmouth' `smi' ind_hosp_adm_12m
local ipps pps100 pps90 pps80 ///
pps70 pps60 pps50 pps40 pps30 
local cout tot_paid_by_mc_12m n_hospd_p12m
local iout ind_hosp_adm_p12m died_12
foreach x of local ivars {
sum `x' if `x'==1 & adl_impair==1
}
local rn : word count `ivars'
local r=1
local c=1
mat tab=J(`rn'+3,3,.)

label var ind_ed_vis_p12m "Indicator any ED use 12m post ivw"
label var tot_paid_by_mc_12m "Total paid by MC 12m post ivw, mean"
local coutcomes tot_paid_by_mc_12m
local ioutcomes ind_hosp_adm_p12m ind_ed_vis_p12m died_12
local ivars `ivars' ind_fri mult_fri ind_hh_12m ind_snf_12m

local rn : word count `ivars' 
local r=1
local c=1
mat tab=J(`rn',4,.)
mat stars=J(`rn',4,0)

gen yes=adl_impair==1 | fri_hh_snf_oxy==1
gen group=1 if adl_impair==1 & fri_hh_snf_oxy==1
replace group=2 if adl_impair==1 & fri_hh_snf_oxy==0
replace group=3 if adl_impair==0 & fri_hh_snf_oxy==1

foreach adl in "1,2,3" 1 2 3 {
	foreach x in `ivars' {
		sum `x' if inlist(group,`adl') 
		mat tab[`r',`c']=r(mean)*r(N)
		local r=`r'+1
}

	local r=1
	local c=`c'+1
}
mat rownames tab=`ivars' 

frmttable using "`logpath'function_adl_w_outcomes.rtf", statmat(tab) replace title("Sample Characteristics") ///
ctitles("" "All SR ADL/FRI" "Both" "ADL only" "FRI only") sdec(0) varlabels ///
 note("NHATS wave 1 SP interviews, restricted to those with 12m FFS Medicare & SR ADL impairment" ///
"ADL impairment defined as having assistance in 1+ ADL")  annotate(stars) asymbol(*,**)


local rn : word count `ivars' `coutcomes' `coutcomes' `ioutcomes'
local r=1
local c=1
mat tab=J(`rn'+5,6,.)
mat stars=J(`rn'+5,6,0)

foreach adl in 1 2 3 {
	tokenize nothing fri_hh_snf_oxy adl_impair
	foreach x in `ivars' {
		sum `x' if inlist(group,`adl') [aw=anfinw]
		mat tab[`r',`c']=r(mean)*100
		if `adl'>1 & "`x'"!="adl_impair" {
			svy, subpop(if inlist(group,1,`adl')): tab `x' ``adl''
			mat tab[`r',`c'+1]=e(p_Pear)
			mat stars[`r',`c'+1]=(e(p_Pear)<.01)+(e(p_Pear)<.05)
}
		if `adl'>2 & "`x'"!="adl_impair" {
			svy, subpop(if inlist(group,2,`adl')): tab `x' ``adl''
			mat tab[`r',`c'+2]=e(p_Pear)
			mat stars[`r',`c'+2]=(e(p_Pear)<.01)+(e(p_Pear)<.05)
}
		local r=`r'+1
}
	local r=`r'+2
	foreach x in `coutcomes' {
		sum `x' if inlist(group,`adl') [aw=anfinw],d
		mat tab[`r',`c']=r(mean)
		mat tab[`r'+1,`c']=r(p50)
		if `adl'>1 {
			svy, subpop(if inlist(group,1,`adl')): mean `x', over(``adl'')
			test [`x']0=[`x']1
			mat tab[`r',`c'+1]=r(p)
			mat stars[`r',`c'+1]=(r(p)<.01)+(r(p)<.05)
}
		if `adl'>2 {
			svy, subpop(if inlist(group,2,`adl')): mean `x', over(``adl'')
			test [`x']0=[`x']1
			mat tab[`r',`c'+2]=r(p)
			mat stars[`r',`c'+2]=(r(p)<.01)+(r(p)<.05)
}
		
		local r=`r'+2
}
	foreach x in `ioutcomes' {
		sum `x' if inlist(group,`adl') [aw=anfinw]
		mat tab[`r',`c']=r(mean)*100
		if `adl'>1 {
			svy, subpop(if inlist(group,1,`adl')): tab `x' ``adl''
			mat tab[`r',`c'+1]=e(p_Pear)
			mat stars[`r',`c'+1]=(e(p_Pear)<.01)+(e(p_Pear)<.05)
}
		if `adl'>2 & "`x'"!="adl_impair" {
			svy, subpop(if inlist(group,2,`adl')): tab `x' ``adl''
			mat tab[`r',`c'+2]=e(p_Pear)
			mat stars[`r',`c'+2]=(e(p_Pear)<.01)+(e(p_Pear)<.05)
}
		local r=`r'+1
}		

	local r=`r'+1
	sum n if inlist(group,`adl')  [aw=anfinw]
	mat tab[`r',`c']=r(N)
	mat tab[`r'+1,`c']=r(sum)
	local r=1
	local c=`c'+1
	if `adl'>1 local c=`c'+1
}
mat rownames tab=`ivars' "_" "Outcomes" `coutcomes' "   median" `ioutcomes' "_" "N" "National Estimate"

frmttable using "`logpath'function_adl_w_outcomes.rtf", statmat(tab) addtable title("Sample Characteristics") ///
ctitles("" "Both" "ADL only" "P (Both/ADL only)" "FRI only" "P (Both/FRI only)" "P (ADL/FRI only)") sdec(2) varlabels ///
 note("NHATS wave 1 SP interviews, restricted to those with 12m FFS Medicare & SR ADL impairment" ///
"ADL impairment defined as having assistance in 1+ ADL" ///
"Claims-based indicators include MeADs, home oxygen, and any HH or SNF claims")  annotate(stars) asymbol(*,**)



H="include nursing home as an outcome?"
clear all 
set more off
capture log close

local intpath "E:\nhats\data\Projects\serious_ill\int_data"
local datapath "E:\nhats\data\Projects\serious_ill\final_data"
local logpath "E:\nhats\data\Projects\serious_ill\logs\"

cd `datapath'
log using `logpath'\nhats_dme_function.txt, text replace

use serious_ill_nhats_sample if wave==1 & sp_ivw==1 & ffs_12m==1 & ///
!missing(adl_index), clear
merge 1:m bene_id using "E:\nhats\data\CMS_DUA_28016\Merged Stata\mds3_10_14.dta", ///
keep(match master) keepusing(trgt_dt)
gen ind_mds=_m==3 & inrange(trgt_dt-ivw_date,0,365)
drop trgt_dt _m
duplicates drop
by spid, sort: gen num=_N
drop if num==2 & ind_mds==0
duplicates report spid

replace wave=2
drop nhres
merge 1:1 spid wave using "E:\nhats\data\NHATS cleaned\sp_round_1_6.dta", keep(match master) ///
keepusing(nhres)
rename nhres nhres_p1
replace nhres_p1=0 if missing(nhres_p1)
label var nhres_p1 "Nursing home resident at next wave"
replace wave=1
gen ind_snf_p12m=snf_paid_by_mc_12m>=1 & !missing(snf_paid_by_mc_12m)
label var ind_snf_p12m "Indicator any SNF use 12m post ivw"
label var ind_mds "Indicator MDS assessment 12m post ivw"
label var died_12 "Death within 12m post ivw"

gen ind_nh=ind_snf_p12m==1 | ind_mds==1 | nhres_p1==1
svyset varunit [pw=anfinw], strata(varstrat)
*replace adl_impair=0 if adl_index==1
local dme cane walker commode urinal bedpan tub_toil_dev lift bed chair //oxy
gen n=1
label var cane "Cane from DME"
label var walker "Walker from DME"
label var commode "Commode from DME"
label var urinal "Urinal from DME"
label var bedpan "Bedpan from DME"
label var tub_toil_dev "Toilet/tub/shower assistive device from DME"
label var lift "Lift, transfer board, safety belt/harness/vest from DME"
label var bed "Hospital bed from DME"
label var chair "Wheelchair from DME"
label var oxy "Oxygen from DME"

foreach x of local dme {
	replace `x'=0 if `x'==.
}

gen n_fri=0

foreach x of local dme {
	replace n_fri=n_fri+1 if `x'==1
}
gen ind_fri=n_fri>=1 if !missing(n_fri)
label var ind_fri "Any mobility indicator from DME"
label var n_fri "Count of mobility indicators from DME"
gen mult_fri=n_fri>=2
label var mult_fri "Indicator of multiple mobility indicators from DME"

foreach x in `dme' ind_fri mult_fri n_fri {
	tab adl_impair `x', col nokey chi2
}


sum `dme' ind_fri mult_fri n_fri
tab1 `dme' ind_fri mult_fri n_fri

/*gen ind_snf_12m=snf_paid_by_mc_12m>0
gen ind_hh_12m=hh_paid_by_mc_12m>0*/
gen ind_snf_12m=n_snf_days_12m>0 & !missing(n_snf_days_12m)
replace ind_hh_12m=0 if missing(ind_hh_12m)
gen ind_snf_or_hh_12m=ind_snf_12m==1 | ind_hh_12m==1
label var ind_snf_12m "Any SNF utilization"
label var ind_hh_ "Any HH utilization"
label var ind_snf_or_hh "Any HH or SNF utilization"

gen fri_hh_snf_oxy=ind_fri==1 | ind_snf_or_hh==1 | oxy==1
label var fri_hh_snf_oxy "Any HH, SNF, oxygen, or mobility indicator from DME"
gen fri_hh_snf =ind_snf_or_hh==1 | ind_fri==1
label var fri_hh_snf "Any HH, SNF, or mobility indicator from DME"
gen hh_snf_oxy=ind_snf_or_hh==1 | oxy==1
label var hh_snf_oxy "Any HH, SNF, or oxygen from DME"
gen fri_oxy =ind_fri | oxy
label var fri_oxy "Any mobility indcator or oxygen from DME"
gen bed_or_chair=bed==1 | chair==1
label var bed_or_chair "Hospital bed or wheelchair from DME"



/* table 1
demographics, by SR ADL impairment*/

local cvars age aveincome
gen age_lt75=age<=74
gen age_lt85=age>=75 & age<85
gen age_85=age>=85
label var age_lt75 "Age 65-74"
label var age_lt85 "Age 75-84"
label var age_85 "Age 85+"

tab income_cat, gen(inccat)
*label define income_cat 0 "<15000" 1 "15-29,999" 2 "30-59,999" 3 ">60000"
label values income_cat income_cat
forvalues i=0/3 {
local lab : label income_cat `i'
label var inccat`=`i'+1' "`lab'"
}

foreach x  in cancer dem esrd chf copd diab_compl liver {
	local smi `smi' smi_`x'_ind
}


*gen prob_dem=dem_3_cat==1 if !missing(dem_3)
*label var prob_dem "Probable dementia"
*label define homebound_cat 1 "Homebound" 2 "Semi (Never by Self)" 3 "Semi: Needs Help/Diff" 4 "Not Homebound"
label values homebound_cat homebound_cat
tab homebound, gen(hb)
forvalues i=1/4 {
	local lab: label homebound_cat `i'
	label var hb`i' "`lab'"
}


label var educ_hs_ind "Education: HS +"

keep if !missing(adl_index)
gen adl_2=adl_index>=2 if !missing(adl_index)
gen adl_3=adl_index>=3 if !missing(adl_index)
label var adl_2 "Dependent in 2+ ADLs"
label var adl_3 "Dependent in 3+ ADLs"
local ivars age_lt75 age_lt85 age_85 inccat1 inccat2 inccat3 inccat4 ///
female white black hisp other_race married educ_hs_ind proxy ///
medicaid medigap srh_fp adl_impair hb1 hb2 hb3 hb4 prob_dem adl_2 adl_3 /*iadl_independent*/ `pps' `ind_indication' ///
`dmouth' `smi' ind_hosp_adm_12m
local ipps pps100 pps90 pps80 ///
pps70 pps60 pps50 pps40 pps30 
local cout tot_paid_by_mc_12m n_hospd_p12m
local iout ind_hosp_adm_p12m died_12
foreach x of local ivars {
sum `x' if `x'==1 & adl_impair==1
}
local rn : word count `ivars'
local r=1
local c=1
mat tab=J(`rn'+3,3,.)

label var ind_nh "Any nursing home use 12m post ivw"
label var ind_ed_vis_p12m "Indicator any ED use 12m post ivw"
label var tot_paid_by_mc_12m "Total paid by MC 12m post ivw, mean"
local coutcomes tot_paid_by_mc_12m
local ioutcomes ind_hosp_adm_p12m ind_ed_vis_p12m died_12 ///
ind_snf_p12m nhres_p1 ind_mds ind_nh
local ivars `ivars' ind_fri mult_fri ind_hh_12m ind_snf_12m

local rn : word count `ivars' 
local r=1
local c=1
mat tab=J(`rn',4,.)
mat stars=J(`rn',4,0)

gen yes=adl_impair==1 | fri_hh_snf_oxy==1
gen group=1 if adl_impair==1 & fri_hh_snf_oxy==1
replace group=2 if adl_impair==1 & fri_hh_snf_oxy==0
replace group=3 if adl_impair==0 & fri_hh_snf_oxy==1

foreach adl in "1,2,3" 1 2 3 {
	foreach x in `ivars' {
		sum `x' if inlist(group,`adl') 
		mat tab[`r',`c']=r(mean)*r(N)
		local r=`r'+1
}

	local r=1
	local c=`c'+1
}
mat rownames tab=`ivars' 

frmttable using "`logpath'function_adl_w_outcomes.rtf", statmat(tab) replace title("Sample Characteristics") ///
ctitles("" "All SR ADL/FRI" "Both" "ADL only" "FRI only") sdec(0) varlabels ///
 note("NHATS wave 1 SP interviews, restricted to those with 12m FFS Medicare & SR ADL impairment" ///
"ADL impairment defined as having assistance in 1+ ADL")  annotate(stars) asymbol(*,**)


local rn : word count `ivars' `coutcomes' `coutcomes' `ioutcomes'
local r=1
local c=1
mat tab=J(`rn'+5,5,.)
mat stars=J(`rn'+5,5,0)

foreach adl in 1 2 3 {
	tokenize nothing fri_hh_snf_oxy adl_impair
	foreach x in `ivars' {
		sum `x' if inlist(group,`adl') [aw=anfinw]
		mat tab[`r',`c']=r(mean)*100
		if `adl'>1 & "`x'"!="adl_impair" {
			svy, subpop(if inlist(group,1,`adl')): tab `x' ``adl''
			mat tab[`r',`c'+1]=e(p_Pear)
			mat stars[`r',`c'+1]=(e(p_Pear)<.01)+(e(p_Pear)<.05)
}
		local r=`r'+1
}
	local r=`r'+2
	foreach x in `coutcomes' {
		sum `x' if inlist(group,`adl') [aw=anfinw],d
		mat tab[`r',`c']=r(mean)
		mat tab[`r'+1,`c']=r(p50)
		if `adl'>1 {
			svy, subpop(if inlist(group,1,`adl')): mean `x', over(``adl'')
			test [`x']0=[`x']1
			mat tab[`r',`c'+1]=r(p)
			mat stars[`r',`c'+1]=(r(p)<.01)+(r(p)<.05)
}
		
		local r=`r'+2
}
	foreach x in `ioutcomes' {
		sum `x' if inlist(group,`adl') [aw=anfinw]
		mat tab[`r',`c']=r(mean)*100
		if `adl'>1 {
			svy, subpop(if inlist(group,1,`adl')): tab `x' ``adl''
			mat tab[`r',`c'+1]=e(p_Pear)
			mat stars[`r',`c'+1]=(e(p_Pear)<.01)+(e(p_Pear)<.05)
}
		local r=`r'+1
}		

	local r=`r'+1
	sum n if inlist(group,`adl')  [aw=anfinw]
	mat tab[`r',`c']=r(N)
	mat tab[`r'+1,`c']=r(sum)
	local r=1
	local c=`c'+1
	if `adl'>1 local c=`c'+1
}
mat rownames tab=`ivars' "_" "Outcomes" `coutcomes' "   median" `ioutcomes' "_" "N" "National Estimate"

frmttable using "`logpath'function_adl_w_outcomes.rtf", statmat(tab) addtable title("Sample Characteristics") ///
ctitles("" "Both" "ADL only" "P" "FRI only" "P") sdec(2) varlabels ///
 note("NHATS wave 1 SP interviews, restricted to those with 12m FFS Medicare & SR ADL impairment" ///
"ADL impairment defined as having assistance in 1+ ADL" ///
"Claims-based indicators include MeADs, home oxygen, and any HH or SNF claims")  annotate(stars) asymbol(*,**)



H="Tables with outcomes, overlapping groups"
clear all 
set more off
capture log close

local intpath "E:\nhats\data\Projects\serious_ill\int_data"
local datapath "E:\nhats\data\Projects\serious_ill\final_data"
local logpath "E:\nhats\data\Projects\IAH\logs\"

cd `datapath'
log using `logpath'\nhats_dme_function.txt, text replace

use serious_ill_nhats_sample if wave==1 & sp_ivw==1 & ffs_12m==1 & ///
!missing(adl_index), clear
svyset varunit [pw=anfinw], strata(varstrat)
*replace adl_impair=0 if adl_index==1
local dme cane walker commode urinal bedpan tub_toil_dev lift bed chair //oxy
gen n=1
label var cane "Cane from DME"
label var walker "Walker from DME"
label var commode "Commode from DME"
label var urinal "Urinal from DME"
label var bedpan "Bedpan from DME"
label var tub_toil_dev "Toilet/tub/shower assistive device from DME"
label var lift "Lift, transfer board, safety belt/harness/vest from DME"
label var bed "Hospital bed from DME"
label var chair "Wheelchair from DME"
label var oxy "Oxygen from DME"

foreach x of local dme {
	replace `x'=0 if `x'==.
}

gen n_fri=0

foreach x of local dme {
	replace n_fri=n_fri+1 if `x'==1
}
gen ind_fri=n_fri>=1 if !missing(n_fri)
label var ind_fri "Any mobility indicator from DME"
label var n_fri "Count of mobility indicators from DME"
gen mult_fri=n_fri>=2
label var mult_fri "Indicator of multiple mobility indicators from DME"

foreach x in `dme' ind_fri mult_fri n_fri {
	tab adl_impair `x', col nokey chi2
}


sum `dme' ind_fri mult_fri n_fri
tab1 `dme' ind_fri mult_fri n_fri

/*gen ind_snf_12m=snf_paid_by_mc_12m>0
gen ind_hh_12m=hh_paid_by_mc_12m>0*/
gen ind_snf_12m=n_snf_days_12m>0 & !missing(n_snf_days_12m)
replace ind_hh_12m=0 if missing(ind_hh_12m)
gen ind_snf_or_hh_12m=ind_snf_12m==1 | ind_hh_12m==1
label var ind_snf_12m "Any SNF utilization"
label var ind_hh_ "Any HH utilization"
label var ind_snf_or_hh "Any HH or SNF utilization"

gen fri_hh_snf_oxy=ind_fri==1 | ind_snf_or_hh==1 | oxy==1
label var fri_hh_snf_oxy "Any HH, SNF, oxygen, or mobility indicator from DME"
gen fri_hh_snf =ind_snf_or_hh==1 | ind_fri==1
label var fri_hh_snf "Any HH, SNF, or mobility indicator from DME"
gen hh_snf_oxy=ind_snf_or_hh==1 | oxy==1
label var hh_snf_oxy "Any HH, SNF, or oxygen from DME"
gen fri_oxy =ind_fri | oxy
label var fri_oxy "Any mobility indcator or oxygen from DME"
gen bed_or_chair=bed==1 | chair==1
label var bed_or_chair "Hospital bed or wheelchair from DME"



/* table 1
demographics, by SR ADL impairment*/

local cvars age aveincome
gen age_lt75=age<=74
gen age_lt85=age>=75 & age<85
gen age_85=age>=85
label var age_lt75 "Age 65-74"
label var age_lt85 "Age 75-84"
label var age_85 "Age 85+"

tab income_cat, gen(inccat)
label define income_cat 0 "<15000" 1 "15-29,999" 2 "30-59,999" 3 ">60000"
label values income_cat income_cat
forvalues i=0/3 {
local lab : label income_cat `i'
label var inccat`=`i'+1' "`lab'"
}

foreach x  in cancer dem esrd chf copd diab_compl liver {
	local smi `smi' smi_`x'_ind
}


*gen prob_dem=dem_3_cat==1 if !missing(dem_3)
*label var prob_dem "Probable dementia"
label define homebound_cat 1 "Homebound" 2 "Semi (Never by Self)" 3 "Semi: Needs Help/Diff" 4 "Not Homebound"
label values homebound_cat homebound_cat
tab homebound, gen(hb)
forvalues i=1/4 {
	local lab: label homebound_cat `i'
	label var hb`i' "`lab'"
}


label var educ_hs_ind "Education: HS +"
gen white_oth=white==1 | other_race==1 if !missing(white)
label var white_oth "White, non-hispanic or other race"
keep if !missing(adl_index)
gen adl_2=adl_index>=2 if !missing(adl_index)
gen adl_3=adl_index>=3 if !missing(adl_index)
label var adl_2 "Dependent in 2+ ADLs"
label var adl_3 "Dependent in 3+ ADLs"
local ivars age_lt75 age_lt85 age_85 inccat1 inccat2 inccat3 inccat4 ///
female white_oth black hisp married educ_hs_ind proxy ///
medicaid medigap srh_fp adl_impair hb1 hb2 hb3 hb4 prob_dem adl_2 adl_3 /*iadl_independent*/ `pps' `ind_indication' ///
`dmouth' `smi' ind_hosp_adm_12m
local ipps pps100 pps90 pps80 ///
pps70 pps60 pps50 pps40 pps30 
local cout tot_paid_by_mc_12m n_hospd_p12m
local iout ind_hosp_adm_p12m died_12
foreach x of local ivars {
sum `x' if `x'==1 & adl_impair==1
}
local rn : word count `ivars'
local r=1
local c=1
mat tab=J(`rn'+3,3,.)

label var ind_ed_vis_p12m "Indicator any ED use 12m post ivw"
label var tot_paid_by_mc_12m "Total paid by MC 12m post ivw, mean"
local coutcomes tot_paid_by_mc_12m
local ioutcomes ind_hosp_adm_p12m ind_ed_vis_p12m died_12
local ivars `ivars' ind_fri mult_fri ind_hh_12m ind_snf_12m

local rn : word count `ivars' 
local r=1
local c=1
mat tab=J(`rn',4,.)
mat stars=J(`rn',4,0)

gen yes=adl_impair==1 | fri_hh_snf_oxy==1
gen group=1 if adl_impair==1 & fri_hh_snf_oxy==1
replace group=2 if adl_impair==1 & fri_hh_snf_oxy==0
replace group=3 if adl_impair==0 & fri_hh_snf_oxy==1

foreach adl in 1 "1,2" "1,3" {
	foreach x in `ivars' {
		sum `x' if inlist(group,`adl') 
		mat tab[`r',`c']=r(mean)*r(N)
		local r=`r'+1
}

	local r=1
	local c=`c'+1
}
mat rownames tab=`ivars' 

frmttable using "`logpath'function_adl_fri_overlapping.rtf", statmat(tab) replace title("Sample Characteristics") ///
ctitles("" "Both" "Any ADL" "Any FRI") sdec(0) varlabels ///
 note("NHATS wave 1 SP interviews, restricted to those with 12m FFS Medicare & SR ADL impairment" ///
"ADL impairment defined as having assistance in 1+ ADL")  annotate(stars) asymbol(*,**)


local rn : word count `ivars' `coutcomes' `coutcomes' `ioutcomes'
local r=1
local c=1
mat tab=J(`rn'+5,3,.)
mat stars=J(`rn'+5,3,0)

foreach adl in 1 "1,2" "1,3" {
	tokenize nothing fri_hh_snf_oxy adl_impair
	foreach x in `ivars' {
		sum `x' if inlist(group,`adl') [aw=anfinw]
		mat tab[`r',`c']=r(mean)*100
	/*	if `adl'>1 & "`x'"!="adl_impair" {
			svy, subpop(if inlist(group,1,`adl')): tab `x' ``adl''
			mat tab[`r',`c'+1]=e(p_Pear)
			mat stars[`r',`c'+1]=(e(p_Pear)<.01)+(e(p_Pear)<.05)
}*/
		local r=`r'+1
}
	local r=`r'+2
	foreach x in `coutcomes' {
		sum `x' if inlist(group,`adl') [aw=anfinw],d
		mat tab[`r',`c']=r(mean)
		mat tab[`r'+1,`c']=r(p50)
	/*	if `adl'>1 {
			svy, subpop(if inlist(group,1,`adl')): mean `x', over(``adl'')
			test [`x']0=[`x']1
			mat tab[`r',`c'+1]=r(p)
			mat stars[`r',`c'+1]=(r(p)<.01)+(r(p)<.05)
}*/
		
		local r=`r'+2
}
	foreach x in `ioutcomes' {
		sum `x' if inlist(group,`adl') [aw=anfinw]
		mat tab[`r',`c']=r(mean)*100
/*		if `adl'>1 {
			svy, subpop(if inlist(group,1,`adl')): tab `x' ``adl''
			mat tab[`r',`c'+1]=e(p_Pear)
			mat stars[`r',`c'+1]=(e(p_Pear)<.01)+(e(p_Pear)<.05)
}*/
		local r=`r'+1
}		

	local r=`r'+1
	sum n if inlist(group,`adl')  [aw=anfinw]
	mat tab[`r',`c']=r(N)
	mat tab[`r'+1,`c']=r(sum)
	local r=1
	local c=`c'+1
	*if `adl'>1 local c=`c'+1
}
mat rownames tab=`ivars' "_" "Outcomes" `coutcomes' "   median" `ioutcomes' "_" "N" "National Estimate"

frmttable using "`logpath'function_adl_fri_overlapping.rtf", statmat(tab) addtable title("Sample Characteristics") ///
ctitles("" "Both" "Any ADL" "Any FRI") sdec(2) varlabels ///
 note("NHATS wave 1 SP interviews, restricted to those with 12m FFS Medicare & SR ADL impairment" ///
"ADL impairment defined as having assistance in 1+ ADL" ///
"Claims-based indicators include MeADs, home oxygen, and any HH or SNF claims")  annotate(stars) asymbol(*,**)



H="tables for graphs"
clear all 
set more off
capture log close

local intpath "E:\nhats\data\Projects\serious_ill\int_data"
local datapath "E:\nhats\data\Projects\serious_ill\final_data"
local logpath "E:\nhats\data\Projects\serious_ill\logs\"

cd `datapath'
log using `logpath'\nhats_dme_function_table2.txt, text replace

use serious_ill_nhats_sample if wave==1 & sp_ivw==1 & ffs_12m==1 & ///
!missing(adl_index), clear
svyset varunit [pw=anfinw], strata(varstrat)
local dme cane walker commode urinal bedpan tub_toil_dev lift bed chair 



gen n=1
label var cane "Cane from DME"
label var walker "Walker from DME"
label var commode "Commode from DME"
label var urinal "Urinal from DME"
label var bedpan "Bedpan from DME"
label var tub_toil_dev "Toilet/tub/shower assistive device from DME"
label var lift "Lift, transfer board, safety belt/harness/vest from DME"
label var bed "Hospital bed from DME"
label var chair "Wheelchair from DME"
label var oxy "Oxygen from DME"

foreach x of local dme {
	replace `x'=0 if `x'==.
}

gen n_fri=0

foreach x of local dme {
	replace n_fri=n_fri+1 if `x'==1
}
gen ind_fri=n_fri>=1 if !missing(n_fri)
label var ind_fri "Any mobility indicator from DME"
label var n_fri "Count of mobility indicators from DME"
gen mult_fri=n_fri>=2
label var mult_fri "Indicator of multiple mobility indicators from DME"

foreach x in `dme' ind_fri mult_fri n_fri {
	tab adl_impair `x', col nokey chi2
}


sum `dme' ind_fri mult_fri n_fri
tab1 `dme' ind_fri mult_fri n_fri

/*gen ind_snf_12m=snf_paid_by_mc_12m>0
gen ind_hh_12m=hh_paid_by_mc_12m>0*/
gen ind_snf_12m=n_snf_days_12m>0 & !missing(n_snf_days_12m)
replace ind_hh_12m=0 if missing(ind_hh_12m)
gen ind_snf_or_hh_12m=ind_snf_12m==1 | ind_hh_12m==1
label var ind_snf_12m "Any SNF utilization"
label var ind_hh_ "Any HH utilization"
label var ind_snf_or_hh "Any HH or SNF utilization"

gen fri_hh_snf_oxy=ind_fri==1 | ind_snf_or_hh==1 | oxy==1
label var fri_hh_snf_oxy "Any HH, SNF, oxygen, or mobility indicator from DME"
gen fri_hh_snf =ind_snf_or_hh==1 | ind_fri==1
label var fri_hh_snf "Any HH, SNF, or mobility indicator from DME"
gen hh_snf_oxy=ind_snf_or_hh==1 | oxy==1
label var hh_snf_oxy "Any HH, SNF, or oxygen from DME"
gen fri_oxy =ind_fri | oxy
label var fri_oxy "Any mobility indcator or oxygen from DME"
gen bed_or_chair=bed==1 | chair==1
label var bed_or_chair "Hospital bed or wheelchair from DME"



/* table 1
demographics, by SR ADL impairment*/

local cvars age aveincome
gen age_lt75=age<=74
gen age_lt85=age>=75 & age<85
gen age_85=age>=85
label var age_lt75 "Age 65-74"
label var age_lt85 "Age 75-84"
label var age_85 "Age 85+"


rename adl_impair adl_any_help
rename adl_independent adl_no_help
gen adl_full_help=1
label var adl_full "Full Sample"

local adls
foreach x in bath dres toil bed ins eat any no {
	local adls `adls' adl_`x'_help
}


gen cane_or_walker=cane==1 | walker==1
label var cane_or_walker

local cols1  cane_or_walker tub_toil_dev bed chair commode lift ind_fri 

local cols2  oxy ind_snf_12m ind_hh_12m ind_snf_or_hh_12m hh_snf_oxy fri_hh_snf_oxy 

local rn : word count `adls'
local cn1 : word count `cols1' n
local cn2 : word count `cols2' n

di `cn2'

local replace replace

foreach i in 1 2 {

mat tab`i'=J(`rn',`cn`i'',.)
local r=1
local c=2

foreach x of local adls {
	sum n if `x'==1
	mat tab`i'[`r',1]=r(N)
	foreach y of local cols`i' {
		sum `y' if `x'==1
		mat tab`i'[`r',`c']=r(mean)*100
		local c=`c'+1
}
	local c=2
	local r=`r'+1
}

mat rownames tab`i'=`adls'
mat colnames tab`i'=N `cols`i''

frmttable using "E:\nhats\data\Projects\serious_ill\logs\tables_for_chart.doc", `replace' varlabels ///
sdec(0,2) statmat(tab`i')
local replace addtable
}


H="Old--tables 1-3"
clear all 
set more off
capture log close

local intpath "E:\nhats\data\Projects\serious_ill\int_data"
local datapath "E:\nhats\data\Projects\serious_ill\final_data"
local logpath "E:\nhats\data\Projects\serious_ill\logs\"

cd `datapath'
*log using `logpath'\nhats_dme_function.txt, text replace

use serious_ill_nhats_sample if wave==1

local vars n nonh sp_ivw_yes nomiss ffs_12m

gen nonh=!nhres
label var nonh "SP interview eligible (not nursing home resident)"
gen n=1
label var n "Total Wave 1"
gen nomiss=!missing(adl_index)
label var nomiss "With responses to ADL questions"
label var sp_ivw_yes "SP interview conducted"

mat tab=J(5,1,.)
local r=1

foreach x in `vars' {
	sum n if `x'==1
	mat tab[`r',1]=r(N)
	drop if `x'!=1
	local r=`r'+1
}

mat rownames tab=`vars'

frmttable using "`logpath'function.rtf", statmat(tab) replace title("Sample Derivation") ///
sdec(0) varlabels

use serious_ill_nhats_sample if wave==1 & sp_ivw==1 & ffs_12m==1 & ///
!missing(adl_index), clear
foreach x of varlist device* {
	local device `device' `x'
}

svyset varunit [pw=anfinw], strata(varstrat)
*replace adl_impair=0 if adl_index==1

gen caneorwalker=cane==1 | walker==1
local dme cane walker caneorwalker commode urinal bedpan tub_toil_dev lift bed chair //oxy
gen n=1

label var caneorwalker "Cane or walker from DME"
label var cane "Cane from DME"
label var walker "Walker from DME"
label var commode "Commode from DME"
label var urinal "Urinal from DME"
label var bedpan "Bedpan from DME"
label var tub_toil_dev "Toilet/tub/shower assistive device from DME"
label var lift "Lift, transfer board, safety belt/harness/vest from DME"
label var bed "Hospital bed from DME"
label var chair "Wheelchair from DME"
label var oxy "Oxygen from DME"

foreach x of local dme {
	replace `x'=0 if `x'==.
}

gen n_fri=0

foreach x of local dme {
	replace n_fri=n_fri+1 if `x'==1
}
gen ind_fri=n_fri>=1 if !missing(n_fri)
label var ind_fri "Any mobility indicator from DME"
label var n_fri "Count of mobility indicators from DME"
gen mult_fri=n_fri>=2
label var mult_fri "Indicator of multiple mobility indicators from DME"

foreach x in `dme' ind_fri mult_fri n_fri {
	tab adl_impair `x', col nokey chi2
}


sum `dme' ind_fri mult_fri n_fri
tab1 `dme' ind_fri mult_fri n_fri

/*
gen ind_snf_12m=snf_paid_by_mc_12m>0
gen ind_hh_12m=hh_paid_by_mc_12m>0
*/

gen ind_snf_12m=n_snf_days_12m>0 & !missing(n_snf_days_12m)
gen ind_snf_or_hh_12m=ind_snf_12m==1 | ind_hh_12m==1
replace ind_hh_12m=0 if missing(ind_hh_12)
label var ind_snf_12m "Any SNF utilization"
label var ind_hh_ "Any HH utilization"
label var ind_snf_or_hh "Any HH or SNF utilization"

gen fri_hh_snf_oxy=ind_fri==1 | ind_snf_or_hh==1 | oxy==1
label var fri_hh_snf_oxy "Any HH, SNF, oxygen, or mobility indicator from DME"
gen fri_hh_snf =ind_snf_or_hh==1 | ind_fri==1
label var fri_hh_snf "Any HH, SNF, or mobility indicator from DME"
gen hh_snf_oxy=ind_snf_or_hh==1 | oxy==1
label var hh_snf_oxy "Any HH, SNF, or oxygen from DME"
gen fri_oxy =ind_fri | oxy
label var fri_oxy "Any mobility indcator or oxygen from DME"
gen bed_or_chair=bed==1 | chair==1
label var bed_or_chair "Hospital bed or wheelchair from DME"



/* table 1
demographics, by SR ADL impairment*/

local cvars age aveincome
gen age_lt75=age<=74
gen age_lt85=age>=75 & age<85
gen age_85=age>=85
label var age_lt75 "Age 65-74"
label var age_lt85 "Age 75-84"
label var age_85 "Age 85+"

tab income_cat, gen(inccat)
cap label define income_cat 0 "<15000" 1 "15-29,999" 2 "30-59,999" 3 ">60000"
label values income_cat income_cat
forvalues i=0/3 {
local lab : label income_cat `i'
label var inccat`=`i'+1' "`lab'"
}

foreach x  in cancer dem esrd chf copd diab_compl liver {
	local smi `smi' smi_`x'_ind
}


*gen prob_dem=dem_3_cat==1 if !missing(dem_3)
label var prob_dem "Probable dementia"
cap label define homebound_cat 1 "Homebound" 2 "Semi (Never by Self)" 3 "Semi: Needs Help/Diff" 4 "Not Homebound"
label values homebound_cat homebound_cat
tab homebound, gen(hb)
forvalues i=1/4 {
	local lab: label homebound_cat `i'
	label var hb`i' "`lab'"
}

local help
foreach x of varlist adl*help {
	local help `help' `x'
}
label var educ_hs_ind "Education: HS +"

keep if !missing(adl_index)
gen adl_2=adl_index>=2 if !missing(adl_index)
gen adl_3=adl_index>=3 if !missing(adl_index)
//note-3/7/18 add indicators for meeting 2 or all 3 criteria
gen ind_2=(ind_fri==1 & oxy==1) | (ind_fri==1 & ind_snf_or_hh==1) | ///
(oxy==1 & ind_snf_or_hh==1)
gen ind_3=ind_fri==1 & oxy==1 & ind_snf_or_hh==1
label var ind_2 "2+ indicators"
label var ind_3 "All 3 indicators"
label var adl_2 "Dependent in 2+ ADLs"
label var adl_3 "Dependent in 3+ ADLs"
local cvars age
local ivars age_lt75 age_lt85 age_85 inccat1 inccat2 inccat3 inccat4 ///
female white black hisp other_race married educ_hs_ind proxy ///
medicaid medigap srh_fp adl_impair hb1 hb2 hb3 hb4 prob_dem adl_2 adl_3 ///
`help' /*iadl_independent*/ `pps' `ind_indication' ///
`dmouth' `smi' `device' ind_hosp_adm_12m
local ipps pps100 pps90 pps80 ///
pps70 pps60 pps50 pps40 pps30 
local cout tot_paid_by_mc_12m n_hospd_p12m
local iout ind_hosp_adm_p12m died_12
foreach x of local ivars {
sum `x' if `x'==1 & adl_impair==1
}
local rn : word count `cvars' `ivars'
local r=1
local c=1
mat tab=J(`rn'+3,6,.)
mat stars=J(`rn'+3,6,0)

gen adl_impair1=1
gen adl_impair2=1 if adl_impair==0
gen adl_impair3=1 if adl_impair==1
gen adl_impair4=1 if adl_index>=2 & !missing(adl_index)
forvalues adl=1/4 {
	replace adl_impair`adl'=0 if missing(adl_impair`adl')
	foreach x in `cvars' {
		sum `x' if inlist(adl_impair`adl',1) [aw=anfinw]
		mat tab[`r',`c']=r(mean)
		if `adl'>2 {
			svy, subpop(if adl_impair2==1 | adl_impair`adl'==1): mean `x', ///
			over(adl_impair2)
			test [`x']0=[`x']1
			mat tab[`r',`c'+1]=r(p)
			mat stars[`r',`c'+1]=(r(p)<.05)+(r(p)<.01)
}
		local r=`r'+1
}
	foreach x in `ivars' {
		qui sum `x' if inlist(adl_impair`adl',1)
		local denom=r(mean)*r(N)
		sum `x' if inlist(adl_impair`adl',1) [aw=anfinw]
		if `denom'>=11 mat tab[`r',`c']=r(mean)*100
		if `adl'>2 {
			svy, subpop(if adl_impair2==1 | adl_impair`adl'==1): tab `x' adl_impair2
			mat tab[`r',`c'+1]=e(p_Pear)
			mat stars[`r',`c'+1]=(e(p_Pear)<.05)+(e(p_Pear)<.01)
}
		local r=`r'+1
}
	local r=`r'+1
	sum n if inlist(adl_impair`adl',1) [aw=anfinw]
	mat tab[`r',`c']=r(N)
	mat tab[`r'+1,`c']=r(sum)
	local r=1
	local c=`c'+1
	if `adl'==3 local c=`c'+1
}
mat rownames tab=`cvars' `ivars' "_" "N" "National Estimate"

frmttable using "`logpath'function.rtf", statmat(tab) addtable title("Sample Characteristics") ///
ctitles("" "Full Sample" "Non-ADL dependent" "ADL dependent 1+" "P" "ADL dependent 2+" "P") ///
sdec(2) varlabels annotate(stars) asymbol(*,**) ///
 note("NHATS wave 1 SP interviews, restricted to those with 12m FFS Medicare" ///
"ADL impairment defined as having assistance in 1+ ADL")

/*table 2
Weighted %
p-value
sensitivity=Indicator and ADL/All ADL
specificity=No Indicator or ADL/All non-ADL
PPV=Indicator and ADL/All Indicator
NPV=No indicator or ADL/All non-indicator
C-statistic=AUC
*/

//note--3/7/18--added indicator of 2 and/or 3
local vars `dme' bed_or_chair ind_fri mult_fri oxy ind_snf_12m ind_hh_12m ///
ind_snf_or_hh_12m ///
fri_hh_snf fri_oxy hh_snf_oxy fri_hh_snf_oxy ind_2 ind_3

local rn : word count `vars' 1 1 


local replace replace
forvalues timethrough=1/3 {
preserve
foreach dem in all {
replace adl_impair=0 if adl_index<`timethrough'
mat tab`dem'=J(`rn',9,.)
mat stars`dem'=J(`rn',9,0)
local r=1
local c=1

foreach i in "0,1" "0" "1" {
	foreach x of local vars {
		sum `x' if inlist(adl_impair,`i')
		if r(mean)*r(N)>=11	mat tab`dem'[`r',`c']=r(mean)*r(N)
		sum `x' if inlist(adl_impair,`i') [aw=anfinw]
		*mat tab`dem'[`r',`c'+1]=r(mean)*100
		if "`i'"=="1" & !inlist("`x'","bedpan","urinal"){
			*svy: tab adl_impair `x'
			*mat tab`dem'[`r',`c'+2]=e(p_Pear)
			*mat stars`dem'[`r',`c'+2]=(e(p_Pear)<.05)+(e(p_Pear)<.01)
			tab `x' adl_impair , matcell(cell) chi2
			mat tab`dem'[`r',`c'+1]=r(p)
			mat stars`dem'[`r',`c'+1]=(r(p)<.05)+(r(p)<.01)
			mat tab`dem'[`r',`c'+2]=(cell[2,2]/(cell[2,2]+cell[1,2]))*100
			mat tab`dem'[`r',`c'+3]=(cell[1,1]/(cell[2,1]+cell[1,1]))*100
			mat tab`dem'[`r',`c'+4]=(cell[2,2]/(cell[2,2]+cell[2,1]))*100
			mat tab`dem'[`r',`c'+5]=(cell[1,1]/(cell[1,2]+cell[1,1]))*100
			roctab adl_impair `x'
			mat tab`dem'[`r',`c'+6]=r(area)
}
		local r=`r'+1
}
	local r=`r'+1
	sum n if inlist(adl_impair,`i') [aw=anfinw]
	mat tab`dem'[`r',`c']=r(N)
	*mat tab`dem'[`r'+1,`c']=r(sum)
	local r=1
	local c=`c'+1
}
keep if dem_3_cat==1
mat rownames tab`dem'=`vars' "_" "N" 
}
restore
/*local vars `dme' ind_fri mult_fri ind_snf_12m ind_hh_12m ind_snf_or_hh_12m ///
fri_hh_snf fri_oxy hh_snf_oxy fri_hh_snf_oxy
*/
foreach x of local vars {
	local lab : var label `x'
	di "`lab'"
	local lab "`lab' \      % \"
	local rows `rows'`lab'
	local sdec `sdec'0,0,0,2\2,2,2,2\
	di "`sdec'"
}

local sdec `sdec'0,0,0,0\2,2,2,2\0,0,0,0
local sdec 0,0,0,2,2,2,2,2,2
frmttable using "`logpath'function.rtf", statmat(taball)  ctitles("" "Full Sample" ///
"Non-ADL dependent" "ADL dependent" "P-value" "Sensitivity" "Specificity" "PPV" "NPV" ///
"AUC") title("SR and claims-based function") ///
annotate(starsall) asymbol(*,**) sdec(`sdec') varlabels ///
note("NHATS wave 1 SP interviews, restricted to those with 12m FFS Medicare" ///
"ADL impairment defined as having assistance in `timethrough'+ ADLs") ///
addtable
local replace addtable


}

local vars age_lt75 age_lt85 age_85 inccat1 inccat2 inccat3 inccat4 ///
female white black hisp other_race married educ_hs_ind ///
medicaid medigap srh_fp adl_impair hb1 hb2 hb3 hb4 prob_dem adl_2 adl_3 ///
sr_cancer_ever

foreach x in sr_cancer_ever prob_dem married female educ_hs_ind {
	gen no_`x'=`x'==0 if !missing(`x')
}
label var no_sr_c "No cancer"
label var no_prob "Not demented"
label var no_marr "Not married"
label var no_fem "Male"
label var no_edu "Education: <HS"

local vars n sr_cancer_ever no_sr_cancer_ever prob_dem no_prob_dem ///
inccat1 inccat2 inccat3 inccat4 hb1 hb2 hb3 hb4 ///
white black hisp other_race age_lt75 age_lt85 age_85 married no_married ///
female no_female educ_hs_ind no_educ_hs_ind
label var n "Full Sample"
local group bed_or_chair ind_fri oxy ind_snf_or_hh_12m fri_hh_snf_oxy

label var fri_hh_snf_oxy "Any HH/SNF/FRI/Oxy"
label var ind_snf_or_hh_12m "Any HH/SNF"



local rn: word count `vars' 

local cn : word count `group' 

mat tab=J(`rn',`cn',.)
mat stars=J(`rn',`cn',0) 
local r=1
local c=1

foreach x of local vars {
	foreach g of local group {
		roctab adl_impair `g' if `x'==1
		mat tab[`r',`c']=r(area)
		local c=`c'+1
}
	local c=1
	local r=`r'+1
}



mat rownames tab=`vars'
mat colnames tab=`group'

frmttable using "`logpath'function.rtf", statmat(tab) varlabels sdec(2) annotate(stars) asymbol(*,**) ///
title ("C-Statistics, stratified by characteristics") addtable


local rn: word count `vars' 

local cn : word count `group' `group'

mat tab=J(`rn',`cn',.)
mat stars=J(`rn',`cn',0) 
local r=1
local c=1

foreach x of local vars {
	foreach g of local group {
		logit adl_impair `g' if `x'==1, or
		mat beta=e(b)
		mat tab[`r',`c']=exp(beta[1,1])
		mat p=r(table)
		scalar p=p[4,1]
		mat tab[`r',`c'+1]=p
		mat stars[`r',`c'+1]=(p<.05)+(p<.01)
		local c=`c'+2
}
	local c=1
	local r=`r'+1
}

foreach x of local group {
	local colnames `colnames' `x' P 
}

mat rownames tab=`vars'
mat colnames tab=`colnames'

frmttable using "`logpath'function.rtf", statmat(tab) varlabels sdec(2) annotate(stars) asymbol(*,**) ///
title ("Bivariate Odds Ratios, stratified by characteristics") substat(1) addtable


H="old--Self-Report from NHATS vs. Claims Tables"
clear all 
set more off
capture log close

local intpath "E:\nhats\data\Projects\serious_ill\int_data"
local datapath "E:\nhats\data\Projects\serious_ill\final_data"
local logpath "E:\nhats\data\Projects\serious_ill\logs\"

cd `datapath'
log using `logpath'\nhats_dme_function.smcl, replace

use serious_ill_nhats_sample if wave==1

local vars n nonh sp_ivw_yes nomiss ffs_12m

gen nonh=!nhres
label var nonh "SP interview eligible (not nursing home resident)"
gen n=1
label var n "Total Wave 1"
gen nomiss=!missing(adl_index)
label var nomiss "With responses to ADL questions"
label var sp_ivw_yes "SP interview conducted"

mat tab=J(5,1,.)
local r=1

foreach x in `vars' {
	sum n if `x'==1
	mat tab[`r',1]=r(N)
	drop if `x'!=1
	local r=`r'+1
}

mat rownames tab=`vars'

frmttable using "`logpath'tables.rtf", statmat(tab) replace title("Sample Derivation") ///
sdec(0) varlabels

use serious_ill_nhats_sample if wave==1 & sp_ivw==1 & ffs_12m==1 & ///
!missing(adl_index), clear
foreach x of varlist device* {
	local device `device' `x'
}

svyset varunit [pw=anfinw], strata(varstrat)
*replace adl_impair=0 if adl_index==1

gen caneorwalker=cane==1 | walker==1
local dme cane walker caneorwalker commode urinal bedpan tub_toil_dev lift bed chair //oxy
gen n=1

label var caneorwalker "Cane or walker from DME"
label var cane "Cane from DME"
label var walker "Walker from DME"
label var commode "Commode from DME"
label var urinal "Urinal from DME"
label var bedpan "Bedpan from DME"
label var tub_toil_dev "Toilet/tub/shower assistive device from DME"
label var lift "Lift, transfer board, safety belt/harness/vest from DME"
label var bed "Hospital bed from DME"
label var chair "Wheelchair from DME"
label var oxy "Oxygen from DME"

foreach x of local dme {
	replace `x'=0 if `x'==.
}

gen n_fri=0

foreach x of local dme {
	replace n_fri=n_fri+1 if `x'==1
}
gen ind_fri=n_fri>=1 if !missing(n_fri)
label var ind_fri "Any mobility indicator from DME"
label var n_fri "Count of mobility indicators from DME"
gen mult_fri=n_fri>=2
label var mult_fri "Indicator of multiple mobility indicators from DME"

foreach x in `dme' ind_fri mult_fri n_fri {
	tab adl_impair `x', col nokey chi2
}


sum `dme' ind_fri mult_fri n_fri
tab1 `dme' ind_fri mult_fri n_fri

/*
gen ind_snf_12m=snf_paid_by_mc_12m>0
gen ind_hh_12m=hh_paid_by_mc_12m>0
*/

gen ind_snf_12m=n_snf_days_12m>0 & !missing(n_snf_days_12m)
gen ind_snf_or_hh_12m=ind_snf_12m==1 | ind_hh_12m==1
replace ind_hh_12m=0 if missing(ind_hh_12)
label var ind_snf_12m "Any SNF utilization"
label var ind_hh_ "Any HH utilization"
label var ind_snf_or_hh "Any HH or SNF utilization"

gen fri_hh_snf_oxy=ind_fri==1 | ind_snf_or_hh==1 | oxy==1
label var fri_hh_snf_oxy "Any HH, SNF, oxygen, or mobility indicator from DME"
gen fri_hh_snf =ind_snf_or_hh==1 | ind_fri==1
label var fri_hh_snf "Any HH, SNF, or mobility indicator from DME"
gen hh_snf_oxy=ind_snf_or_hh==1 | oxy==1
label var hh_snf_oxy "Any HH, SNF, or oxygen from DME"
gen fri_oxy =ind_fri | oxy
label var fri_oxy "Any mobility indcator or oxygen from DME"
gen bed_or_chair=bed==1 | chair==1
label var bed_or_chair "Hospital bed or wheelchair from DME"




/////Tables



tab cane_nhats cane, matcell(Cane)
tab walker_nhats walker, matcell(Walker)
tab wheelchr_nhats chair, matcell(Wheelchair)
tab com_nhats commode,matcell(Commode)
tab bathtoi_nhats tub_toil_dev, matcell(Tub_Toilet)

mat list cane



foreach x in Cane Walker Wheelchair Commode Tub_Toilet {
if "`x'"!="Cane" local add addtable
if "`x'"=="Cane" local title Cane
if "`x'"=="Walker" local title Walker
if "`x'"=="Wheelchair" local title Wheelchair
if "`x'"=="Commode" local title Commode/Bedpan/Urinal
if "`x'"=="Tub_Toilet" local title Shower/Tub/Toilet Assistive Device
frmttable using "E:\nhats\projects\Serious_Ill\FRI\20180309\tab.doc", replace statmat(`x') ///
sdec(0) ctitle("NHATS/DME", No, Yes) rtitle(No\ Yes) ///
title("`title'") `add'
}


tab cane_nhats adl_bath_diff 


foreach x in cane walker wheelchr com bathtoi {
tab `x'_nhats adl_impair, matcell(`x')
}

foreach x in cane walker wheelchr com bathtoi {
//if "`x'"!="cane" local add addtable
if "`x'"=="cane" local title Cane
if "`x'"=="walker" local title Walker
if "`x'"=="wheelchr" local title Wheelchair
if "`x'"=="com" local title Commode/Bedpan/Urinal
if "`x'"=="bathtoi" local title Shower/Tub/Toilet Assistive Device
frmttable using "E:\nhats\projects\Serious_Ill\FRI\20180309\tab.doc", replace statmat(`x') ///
sdec(0) ctitle("NHATS/ADL Impairment", No, Yes) rtitle(No\ Yes) ///
title("`title'") addtable
}


capture drop any_dev_nhats
gen any_dev_nhats=1 if cane_nhats==1 | walker_nhats==1 | wheelchr_nhats==1 | com_nhats==1
replace any_dev_nhats=0 if cane_nhats==0 & walker_nhats==0 & wheelchr_nhats==0 & com_nhats==0 

tab any_dev_nhats adl_impair, matcell(any)
frmttable using "E:\nhats\projects\Serious_Ill\FRI\20180309\tab.doc", replace statmat(any) ///
sdec(0) ctitle("Any Device NHATS/ADL Impairment", No, Yes) rtitle(No\ Yes) ///
title("`title'") addtable

H="xxxxxBasic Tabs for checks FRI Project--not in use"
clear all 
set more off
capture log close

local intpath "E:\nhats\data\Projects\serious_ill\int_data"
local datapath "E:\nhats\data\Projects\serious_ill\final_data"
local logpath "E:\nhats\data\Projects\serious_ill\logs\"

cd `datapath'
*log using `logpath'\nhats_dme_function.txt, text replace

use serious_ill_nhats_sample if wave==1

duplicates drop spid, force

drop adl_eat_help adl_dres_help adl_index
merge 1:1 spid wave using "E:\nhats\data\NHATS cleaned\sp_round_1_6_public_sens_only.dta",  ///
keepusing(insdhlp oftgoarea oflvslepr bedhlp dreshlp dresoft toilhlp bathhlp ///
showrbat1 showrbat2 showrbat3 eathlp eatdev outoft ntlvrmslp bathtoi_nhats adl_dres_help ///
adl_eat_help adl_index) keep(match)
drop _merge

local vars n nonh sp_ivw_yes nomiss ffs_12m

gen nonh=!nhres
label var nonh "SP interview eligible (not nursing home resident)"
gen n=1
label var n "Total Wave 1"
//created new adl_index var b/c we want to keep people who even answered one adl question
egen adl_index_new=rowtotal(adl_*_help) 
tab adl_index_new 


gen nomiss=!missing(adl_index_new)
label var nomiss "With responses to atleast 1 ADL question"
label var sp_ivw_yes "SP interview conducted"

mat tab=J(5,1,.)
local r=1

foreach x in `vars' {
	sum n if `x'==1
	mat tab[`r',1]=r(N)
	drop if `x'!=1
	local r=`r'+1
}

mat rownames tab=`vars'

frmttable using "`logpath'table.rtf", statmat(tab) replace title("Sample Derivation") ///
sdec(0) varlabels

use serious_ill_nhats_sample if wave==1 & sp_ivw==1 & ffs_12m==1, clear 
//& !missing(adl_index), clear
foreach x of varlist device* {
	local device `device' `x'
}
tab bathtoi
tab adl_dres_help
tab adl_eat_help
drop bathtoi adl_dres_help adl_eat_help
merge 1:1 spid wave using "E:\nhats\data\NHATS cleaned\sp_round_1_6_public_sens_only.dta",  ///
keepusing(insdhlp oftgoarea oflvslepr bedhlp dreshlp dresoft toilhlp bathhlp ///
showrbat1 showrbat2 showrbat3 eathlp eatdev outoft ntlvrmslp bathtoi_nhats adl_dres_help ///
adl_eat_help adl_index ) keep(match)
drop _merge
//new variable definition taken
tab bathtoi
tab adl_dres_help
tab adl_eat_help

egen adl_index_new=rowtotal(adl_*_help)
tab adl_index_new

keep if !missing(adl_index_new)

gen adl_impair_new=1 if adl_index_new>0 & !missing(adl_index_new)
replace adl_impair_new=0 if adl_index_new==0

svyset varunit [pw=anfinw], strata(varstrat)
*replace adl_impair=0 if adl_index==1

gen caneorwalker=cane==1 | walker==1
local dme cane walker caneorwalker commode urinal bedpan tub_toil_dev lift bed chair //oxy
gen n=1

label var caneorwalker "Cane or walker from DME"
label var cane "Cane from DME"
label var walker "Walker from DME"
label var commode "Commode from DME"
label var urinal "Urinal from DME"
label var bedpan "Bedpan from DME"
label var tub_toil_dev "Toilet/tub/shower assistive device from DME"
label var lift "Lift, transfer board, safety belt/harness/vest from DME"
label var bed "Hospital bed from DME"
label var chair "Wheelchair from DME"
label var oxy "Oxygen from DME"

foreach x of local dme {
	replace `x'=0 if `x'==.
}

gen n_fri=0

foreach x of local dme {
	replace n_fri=n_fri+1 if `x'==1
}
gen ind_fri=n_fri>=1 if !missing(n_fri)
label var ind_fri "Any mobility indicator from DME"
label var n_fri "Count of mobility indicators from DME"
gen mult_fri=n_fri>=2
label var mult_fri "Indicator of multiple mobility indicators from DME"

foreach x in `dme' ind_fri mult_fri n_fri {
	tab adl_impair_new `x', col nokey chi2
}


sum `dme' ind_fri mult_fri n_fri
tab1 `dme' ind_fri mult_fri n_fri

/*
gen ind_snf_12m=snf_paid_by_mc_12m>0
gen ind_hh_12m=hh_paid_by_mc_12m>0
*/

gen ind_snf_12m=n_snf_days_12m>0 & !missing(n_snf_days_12m)
gen ind_snf_or_hh_12m=ind_snf_12m==1 | ind_hh_12m==1
replace ind_hh_12m=0 if missing(ind_hh_12)
label var ind_snf_12m "Any SNF utilization"
label var ind_hh_ "Any HH utilization"
label var ind_snf_or_hh "Any HH or SNF utilization"

gen fri_hh_snf_oxy=ind_fri==1 | ind_snf_or_hh==1 | oxy==1
label var fri_hh_snf_oxy "Any HH, SNF, oxygen, or mobility indicator from DME"
gen fri_hh_snf =ind_snf_or_hh==1 | ind_fri==1
label var fri_hh_snf "Any HH, SNF, or mobility indicator from DME"
gen hh_snf_oxy=ind_snf_or_hh==1 | oxy==1
label var hh_snf_oxy "Any HH, SNF, or oxygen from DME"
gen fri_oxy =ind_fri | oxy
label var fri_oxy "Any mobility indcator or oxygen from DME"
gen bed_or_chair=bed==1 | chair==1
label var bed_or_chair "Hospital bed or wheelchair from DME"




////////////////////




local adl insdhlp oftgoarea oflvslepr bedhlp dreshlp ///
dresoft toilhlp bathhlp showrbat1 showrbat2 showrbat3 ///
eathlp eatdev 
foreach x in `adl'{
tab `x', matcell(`x')
}

foreach x in insdhlp eathlp{
mat rownames `x'= "-8 DK" "-7 RF" "-1 Inapplicable" "1 YES" "2 NO"
}

mat rownames dreshlp= "-7 RF" "-1 Inapplicable" "1 YES" "2 NO"

mat rownames bathhlp= "-8 DK"  "-1 Inapplicable" "1 YES" "2 NO"


foreach x in bedhlp toilhlp showrbat1 showrbat2 ///
showrbat3  {
mat rownames `x'= "-8 DK" "-7 RF" "1 YES" "2 NO"  
}

mat rownames oftgoarea= "-8 DK" "-7 RF" "-1 Inapplicable" ///
"1 EVERY DAY (7 DAYS A WEEK)" "2 MOST DAYS (5-6 DAYS A WEEK)" "3 SOME DAYS (2-4 DAYS A WEEK)" ///
"4 RARELY (ONCE A WEEK OR LESS)" "5 NEVER" 

mat rownames dresoft= "-8 DK" "-7 RF" ///
"1 EVERY DAY (7 DAYS A WEEK)" "2 MOST DAYS (5-6 DAYS A WEEK)" "3 SOME DAYS (2-4 DAYS A WEEK)" ///
"4 RARELY (ONCE A WEEK OR LESS)" "5 NEVER" 

mat rownames oflvslepr= "-1 Inapplicable" ///
"1 EVERY DAY (7 DAYS A WEEK)" "2 MOST DAYS (5-6 DAYS A WEEK)" "3 SOME DAYS (2-4 DAYS A WEEK)" ///
"4 RARELY (ONCE A WEEK OR LESS)" "5 NEVER" 

mat rownames eatdev= "-8 DK" "-7 RF" "1 YES" "2 NO" ///
"7 ALWAYS FED THROUGH IV OR TUBE"

foreach x in `adl' {
if "`x'"!="eatdev" local add addtable
if "`x'"=="insdhlp" local title "Got Help Inside"
if "`x'"=="oftgoarea" local title "How Often Go Other Areas"
if "`x'"=="oflvslepr" local title "How Often Leave Bedroom"
if "`x'"=="bedhlp" local title "Got Help Out of Bed"
if "`x'"=="dreshlp" local title "Anyone Help Get Dressed"
if "`x'"=="dresoft" local title "Often you Get Dressed"
if "`x'"=="toilhlp" local title "Anyone Help you use Toilet"
if "`x'"=="bathhlp" local title "Anyone Help Shower Bath Other"
if "`x'"=="showrbat1" local title "Showered"
if "`x'"=="showrbat2" local title "Took Baths in a Tub"
if "`x'"=="showrbat3" local title "Washed Some Other Way"
if "`x'"=="eathlp" local title "Did Anyone Help You Eat"
if "`x'"=="eatdev" local title "Ever Use Adapted Utensils"
frmttable using "E:\nhats\projects\Serious_Ill\FRI\20180521\tab.doc", replace statmat(`x') ///
sdec(0) title("`title'") `add'
}

/*frmttable using "E:\nhats\projects\Serious_Ill\FRI\20180521\tab.doc", replace statmat(any) ///
sdec(0) ctitle("Any Device NHATS/ADL Impairment", No, Yes) rtitle(No\ Yes) ///
title("`title'") addtable


H="New--Tables 1-3"
clear all 
set more off
capture log close

local intpath "E:\nhats\data\Projects\serious_ill\int_data"
local datapath "E:\nhats\data\Projects\serious_ill\final_data"
local logpath "E:\nhats\data\Projects\serious_ill\logs\"

cd `datapath'
*log using `logpath'\nhats_dme_function.txt, text replace

use serious_ill_nhats_sample if wave==1

duplicates drop spid, force

drop adl_eat_help adl_dres_help adl_index
merge 1:1 spid wave using "E:\nhats\data\NHATS cleaned\sp_round_1_6_public_sens_only.dta",  ///
keepusing(insdhlp oftgoarea oflvslepr bedhlp dreshlp dresoft toilhlp bathhlp ///
showrbat1 showrbat2 showrbat3 eathlp eatdev outoft ntlvrmslp bathtoi_nhats adl_dres_help ///
adl_eat_help adl_index) keep(match)
drop _merge

local vars n nonh sp_ivw_yes nomiss ffs_12m

gen nonh=!nhres
label var nonh "SP interview eligible (not nursing home resident)"
gen n=1
label var n "Total Wave 1"
//created new adl_index var b/c we want to keep people who even answered one adl question
egen adl_index_new=rowtotal(adl_*_help) 
tab adl_index_new 


gen nomiss=!missing(adl_index_new)
label var nomiss "With responses to atleast 1 ADL question"
label var sp_ivw_yes "SP interview conducted"

mat tab=J(5,1,.)
local r=1

foreach x in `vars' {
	sum n if `x'==1
	mat tab[`r',1]=r(N)
	drop if `x'!=1
	local r=`r'+1
}

mat rownames tab=`vars'

frmttable using "`logpath'function.rtf", statmat(tab) replace title("Sample Derivation") ///
sdec(0) varlabels

use serious_ill_nhats_sample if wave==1 & sp_ivw==1 & ffs_12m==1, clear 
//& !missing(adl_index), clear
foreach x of varlist device* {
	local device `device' `x'
}
tab bathtoi
tab adl_dres_help
tab adl_eat_help
drop bathtoi adl_dres_help adl_eat_help
merge 1:1 spid wave using "E:\nhats\data\NHATS cleaned\sp_round_1_6_public_sens_only.dta",  ///
keepusing(insdhlp oftgoarea oflvslepr bedhlp dreshlp dresoft toilhlp bathhlp ///
showrbat1 showrbat2 showrbat3 eathlp eatdev outoft ntlvrmslp bathtoi_nhats adl_dres_help ///
adl_eat_help adl_index ) keep(match)
drop _merge
//new variable definition taken
tab bathtoi
tab adl_dres_help
tab adl_eat_help

egen adl_index_new=rowtotal(adl_*_help)
tab adl_index_new

keep if !missing(adl_index_new)

gen adl_impair_new=1 if adl_index_new>0 & !missing(adl_index_new)
replace adl_impair_new=0 if adl_index_new==0

svyset varunit [pw=anfinw], strata(varstrat)
*replace adl_impair=0 if adl_index==1

gen caneorwalker=cane==1 | walker==1
local dme cane walker caneorwalker commode urinal bedpan tub_toil_dev lift bed chair //oxy
gen n=1

label var caneorwalker "Cane or walker from DME"
label var cane "Cane from DME"
label var walker "Walker from DME"
label var commode "Commode from DME"
label var urinal "Urinal from DME"
label var bedpan "Bedpan from DME"
label var tub_toil_dev "Toilet/tub/shower assistive device from DME"
label var lift "Lift, transfer board, safety belt/harness/vest from DME"
label var bed "Hospital bed from DME"
label var chair "Wheelchair from DME"
label var oxy "Oxygen from DME"

foreach x of local dme {
	replace `x'=0 if `x'==.
}

gen n_fri=0

foreach x of local dme {
	replace n_fri=n_fri+1 if `x'==1
}
gen ind_fri=n_fri>=1 if !missing(n_fri)
label var ind_fri "Any mobility indicator from DME"
label var n_fri "Count of mobility indicators from DME"
gen mult_fri=n_fri>=2
label var mult_fri "Indicator of multiple mobility indicators from DME"

foreach x in `dme' ind_fri mult_fri n_fri {
	tab adl_impair_new `x', col nokey chi2
}


sum `dme' ind_fri mult_fri n_fri
tab1 `dme' ind_fri mult_fri n_fri

/*
gen ind_snf_12m=snf_paid_by_mc_12m>0
gen ind_hh_12m=hh_paid_by_mc_12m>0
*/

gen ind_snf_12m=n_snf_days_12m>0 & !missing(n_snf_days_12m)
gen ind_snf_or_hh_12m=ind_snf_12m==1 | ind_hh_12m==1
replace ind_hh_12m=0 if missing(ind_hh_12)
label var ind_snf_12m "Any SNF utilization"
label var ind_hh_ "Any HH utilization"
label var ind_snf_or_hh "Any HH or SNF utilization"

gen fri_hh_snf_oxy=ind_fri==1 | ind_snf_or_hh==1 | oxy==1
label var fri_hh_snf_oxy "Any HH, SNF, oxygen, or mobility indicator from DME"
gen fri_hh_snf =ind_snf_or_hh==1 | ind_fri==1
label var fri_hh_snf "Any HH, SNF, or mobility indicator from DME"
gen hh_snf_oxy=ind_snf_or_hh==1 | oxy==1
label var hh_snf_oxy "Any HH, SNF, or oxygen from DME"
gen fri_oxy =ind_fri | oxy
label var fri_oxy "Any mobility indcator or oxygen from DME"
gen bed_or_chair=bed==1 | chair==1
label var bed_or_chair "Hospital bed or wheelchair from DME"



/* table 1
demographics, by SR ADL impairment*/

local cvars age aveincome
gen age_lt75=age<=74
gen age_lt85=age>=75 & age<85
gen age_85=age>=85
label var age_lt75 "Age 65-74"
label var age_lt85 "Age 75-84"
label var age_85 "Age 85+"

tab income_cat, gen(inccat)
cap label define income_cat 0 "<15000" 1 "15-29,999" 2 "30-59,999" 3 ">60000"
label values income_cat income_cat
forvalues i=0/3 {
local lab : label income_cat `i'
label var inccat`=`i'+1' "`lab'"
}

foreach x  in cancer dem esrd chf copd diab_compl liver {
	local smi `smi' smi_`x'_ind
}


*gen prob_dem=dem_3_cat==1 if !missing(dem_3)
label var prob_dem "Probable dementia"
cap label define homebound_cat 1 "Homebound" 2 "Semi (Never by Self)" 3 "Semi: Needs Help/Diff" 4 "Not Homebound"
label values homebound_cat homebound_cat
tab homebound, gen(hb)
forvalues i=1/4 {
	local lab: label homebound_cat `i'
	label var hb`i' "`lab'"
}

local help
foreach x of varlist adl*help {
	local help `help' `x'
}
label var educ_hs_ind "Education: HS +"

keep if !missing(adl_index_new)
gen adl_2=adl_index_new>=2 if !missing(adl_index_new)
gen adl_3=adl_index_new>=3 if !missing(adl_index_new)
//note-3/7/18 add indicators for meeting 2 or all 3 criteria
gen ind_2=(ind_fri==1 & oxy==1) | (ind_fri==1 & ind_snf_or_hh==1) | ///
(oxy==1 & ind_snf_or_hh==1)
gen ind_3=ind_fri==1 & oxy==1 & ind_snf_or_hh==1
label var ind_2 "2+ indicators"
label var ind_3 "All 3 indicators"
label var adl_2 "Dependent in 2+ ADLs"
label var adl_3 "Dependent in 3+ ADLs"
local cvars age
local ivars age_lt75 age_lt85 age_85 inccat1 inccat2 inccat3 inccat4 ///
female white black hisp other_race married educ_hs_ind proxy ///
medicaid medigap srh_fp adl_impair_new hb1 hb2 hb3 hb4 prob_dem adl_2 adl_3 ///
`help' /*iadl_independent*/ `pps' `ind_indication' ///
`dmouth' `smi' `device' ind_hosp_adm_12m
local ipps pps100 pps90 pps80 ///
pps70 pps60 pps50 pps40 pps30 
local cout tot_paid_by_mc_12m n_hospd_p12m
local iout ind_hosp_adm_p12m died_12
foreach x of local ivars {
sum `x' if `x'==1 & adl_impair_new==1
}
local rn : word count `cvars' `ivars'
local r=1
local c=1
mat tab=J(`rn'+3,6,.)
mat stars=J(`rn'+3,6,0)

gen adl_impair1=1
gen adl_impair2=1 if adl_impair_new==0
gen adl_impair3=1 if adl_impair_new==1
gen adl_impair4=1 if adl_index_new>=2 & !missing(adl_index_new)
forvalues adl=1/4 {
	replace adl_impair`adl'=0 if missing(adl_impair`adl')
	foreach x in `cvars' {
		sum `x' if inlist(adl_impair`adl',1) [aw=anfinw]
		mat tab[`r',`c']=r(mean)
		if `adl'>2 {
			svy, subpop(if adl_impair2==1 | adl_impair`adl'==1): mean `x', ///
			over(adl_impair2)
			test [`x']0=[`x']1
			mat tab[`r',`c'+1]=r(p)
			mat stars[`r',`c'+1]=(r(p)<.05)+(r(p)<.01)
}
		local r=`r'+1
}
	foreach x in `ivars' {
		qui sum `x' if inlist(adl_impair`adl',1)
		local denom=r(mean)*r(N)
		sum `x' if inlist(adl_impair`adl',1) [aw=anfinw]
		if `denom'>=11 mat tab[`r',`c']=r(mean)*100
		if `adl'>2 {
			svy, subpop(if adl_impair2==1 | adl_impair`adl'==1): tab `x' adl_impair2
			mat tab[`r',`c'+1]=e(p_Pear)
			mat stars[`r',`c'+1]=(e(p_Pear)<.05)+(e(p_Pear)<.01)
}
		local r=`r'+1
}
	local r=`r'+1
	sum n if inlist(adl_impair`adl',1) [aw=anfinw]
	mat tab[`r',`c']=r(N)
	mat tab[`r'+1,`c']=r(sum)
	local r=1
	local c=`c'+1
	if `adl'==3 local c=`c'+1
}
mat rownames tab=`cvars' `ivars' "_" "N" "National Estimate"

frmttable using "`logpath'function.rtf", statmat(tab) addtable title("Sample Characteristics") ///
ctitles("" "Full Sample" "Non-ADL dependent" "ADL dependent 1+" "P" "ADL dependent 2+" "P") ///
sdec(2) varlabels annotate(stars) asymbol(*,**) ///
 note("NHATS wave 1 SP interviews, restricted to those with 12m FFS Medicare" ///
"ADL impairment defined as having assistance in 1+ ADL")

/*table 2
Weighted %
p-value
sensitivity=Indicator and ADL/All ADL
specificity=No Indicator or ADL/All non-ADL
PPV=Indicator and ADL/All Indicator
NPV=No indicator or ADL/All non-indicator
C-statistic=AUC
*/

//note--3/7/18--added indicator of 2 and/or 3
local vars `dme' bed_or_chair ind_fri mult_fri oxy ind_snf_12m ind_hh_12m ///
ind_snf_or_hh_12m ///
fri_hh_snf fri_oxy hh_snf_oxy fri_hh_snf_oxy ind_2 ind_3

local rn : word count `vars' 1 1 


local replace replace
forvalues timethrough=1/3 {
preserve
foreach dem in all {
replace adl_impair_new=0 if adl_index_new<`timethrough'
mat tab`dem'=J(`rn',9,.)
mat stars`dem'=J(`rn',9,0)
local r=1
local c=1

foreach i in "0,1" "0" "1" {
	foreach x of local vars {
		sum `x' if inlist(adl_impair_new,`i')
		if r(mean)*r(N)>=11	mat tab`dem'[`r',`c']=r(mean)*r(N)
		sum `x' if inlist(adl_impair_new,`i') [aw=anfinw]
		*mat tab`dem'[`r',`c'+1]=r(mean)*100
		if "`i'"=="1" & !inlist("`x'","bedpan","urinal"){
			*svy: tab adl_impair `x'
			*mat tab`dem'[`r',`c'+2]=e(p_Pear)
			*mat stars`dem'[`r',`c'+2]=(e(p_Pear)<.05)+(e(p_Pear)<.01)
			tab `x' adl_impair_new , matcell(cell) chi2
			mat tab`dem'[`r',`c'+1]=r(p)
			mat stars`dem'[`r',`c'+1]=(r(p)<.05)+(r(p)<.01)
			mat tab`dem'[`r',`c'+2]=(cell[2,2]/(cell[2,2]+cell[1,2]))*100
			mat tab`dem'[`r',`c'+3]=(cell[1,1]/(cell[2,1]+cell[1,1]))*100
			mat tab`dem'[`r',`c'+4]=(cell[2,2]/(cell[2,2]+cell[2,1]))*100
			mat tab`dem'[`r',`c'+5]=(cell[1,1]/(cell[1,2]+cell[1,1]))*100
			roctab adl_impair_new `x'
			mat tab`dem'[`r',`c'+6]=r(area)
}
		local r=`r'+1
}
	local r=`r'+1
	sum n if inlist(adl_impair_new,`i') [aw=anfinw]
	mat tab`dem'[`r',`c']=r(N)
	*mat tab`dem'[`r'+1,`c']=r(sum)
	local r=1
	local c=`c'+1
}
keep if dem_3_cat==1
mat rownames tab`dem'=`vars' "_" "N" 
}
restore
/*local vars `dme' ind_fri mult_fri ind_snf_12m ind_hh_12m ind_snf_or_hh_12m ///
fri_hh_snf fri_oxy hh_snf_oxy fri_hh_snf_oxy
*/
foreach x of local vars {
	local lab : var label `x'
	di "`lab'"
	local lab "`lab' \      % \"
	local rows `rows'`lab'
	local sdec `sdec'0,0,0,2\2,2,2,2\
	di "`sdec'"
}

local sdec `sdec'0,0,0,0\2,2,2,2\0,0,0,0
local sdec 0,0,0,2,2,2,2,2,2
frmttable using "`logpath'function.rtf", statmat(taball)  ctitles("" "Full Sample" ///
"Non-ADL dependent" "ADL dependent" "P-value" "Sensitivity" "Specificity" "PPV" "NPV" ///
"AUC") title("SR and claims-based function") ///
annotate(starsall) asymbol(*,**) sdec(`sdec') varlabels ///
note("NHATS wave 1 SP interviews, restricted to those with 12m FFS Medicare" ///
"ADL impairment defined as having assistance in `timethrough'+ ADLs") ///
addtable
local replace addtable


}

local vars age_lt75 age_lt85 age_85 inccat1 inccat2 inccat3 inccat4 ///
female white black hisp other_race married educ_hs_ind ///
medicaid medigap srh_fp adl_impair_new hb1 hb2 hb3 hb4 prob_dem adl_2 adl_3 ///
sr_cancer_ever

foreach x in sr_cancer_ever prob_dem married female educ_hs_ind {
	gen no_`x'=`x'==0 if !missing(`x')
}
label var no_sr_c "No cancer"
label var no_prob "Not demented"
label var no_marr "Not married"
label var no_fem "Male"
label var no_edu "Education: <HS"

local vars n sr_cancer_ever no_sr_cancer_ever prob_dem no_prob_dem ///
inccat1 inccat2 inccat3 inccat4 hb1 hb2 hb3 hb4 ///
white black hisp other_race age_lt75 age_lt85 age_85 married no_married ///
female no_female educ_hs_ind no_educ_hs_ind
label var n "Full Sample"
local group bed_or_chair ind_fri oxy ind_snf_or_hh_12m fri_hh_snf_oxy

label var fri_hh_snf_oxy "Any HH/SNF/FRI/Oxy"
label var ind_snf_or_hh_12m "Any HH/SNF"



local rn: word count `vars' 

local cn : word count `group' 

mat tab=J(`rn',`cn',.)
mat stars=J(`rn',`cn',0) 
local r=1
local c=1

foreach x of local vars {
	foreach g of local group {
		roctab adl_impair_new `g' if `x'==1
		mat tab[`r',`c']=r(area)
		local c=`c'+1
}
	local c=1
	local r=`r'+1
}



mat rownames tab=`vars'
mat colnames tab=`group'

frmttable using "`logpath'function.rtf", statmat(tab) varlabels sdec(2) annotate(stars) asymbol(*,**) ///
title ("C-Statistics, stratified by characteristics") addtable


local rn: word count `vars' 

local cn : word count `group' `group'

mat tab=J(`rn',`cn',.)
mat stars=J(`rn',`cn',0) 
local r=1
local c=1

foreach x of local vars {
	foreach g of local group {
		logit adl_impair_new `g' if `x'==1, or
		mat beta=e(b)
		mat tab[`r',`c']=exp(beta[1,1])
		mat p=r(table)
		scalar p=p[4,1]
		mat tab[`r',`c'+1]=p
		mat stars[`r',`c'+1]=(p<.05)+(p<.01)
		local c=`c'+2
}
	local c=1
	local r=`r'+1
}

foreach x of local group {
	local colnames `colnames' `x' P 
}

mat rownames tab=`vars'
mat colnames tab=`colnames'

frmttable using "`logpath'function.rtf", statmat(tab) varlabels sdec(2) annotate(stars) asymbol(*,**) ///
title ("Bivariate Odds Ratios, stratified by characteristics") substat(1) addtable


H="Self Report from NHATS vs. Claims Tables"
clear all 
set more off
capture log close

local intpath "E:\nhats\data\Projects\serious_ill\int_data"
local datapath "E:\nhats\data\Projects\serious_ill\final_data"
local logpath "E:\nhats\data\Projects\serious_ill\logs\"

cd `datapath'
*log using `logpath'\nhats_dme_function.txt, text replace

use serious_ill_nhats_sample if wave==1

duplicates drop spid, force

drop adl_eat_help adl_dres_help adl_index
merge 1:1 spid wave using "E:\nhats\data\NHATS cleaned\sp_round_1_6_public_sens_only.dta",  ///
keepusing(insdhlp oftgoarea oflvslepr bedhlp dreshlp dresoft toilhlp bathhlp ///
showrbat1 showrbat2 showrbat3 eathlp eatdev outoft ntlvrmslp bathtoi_nhats adl_dres_help ///
adl_eat_help adl_index) keep(match)
drop _merge

local vars n nonh sp_ivw_yes nomiss ffs_12m

gen nonh=!nhres
label var nonh "SP interview eligible (not nursing home resident)"
gen n=1
label var n "Total Wave 1"
//created new adl_index var b/c we want to keep people who even answered one adl question
egen adl_index_new=rowtotal(adl_*_help) 
tab adl_index_new 


gen nomiss=!missing(adl_index_new)
label var nomiss "With responses to atleast 1 ADL question"
label var sp_ivw_yes "SP interview conducted"

mat tab=J(5,1,.)
local r=1

foreach x in `vars' {
	sum n if `x'==1
	mat tab[`r',1]=r(N)
	drop if `x'!=1
	local r=`r'+1
}

mat rownames tab=`vars'

frmttable using "`logpath'table.rtf", statmat(tab) replace title("Sample Derivation") ///
sdec(0) varlabels

use serious_ill_nhats_sample if wave==1 & sp_ivw==1 & ffs_12m==1, clear 
//& !missing(adl_index), clear
foreach x of varlist device* {
	local device `device' `x'
}
tab bathtoi
tab adl_dres_help
tab adl_eat_help
drop bathtoi adl_dres_help adl_eat_help
merge 1:1 spid wave using "E:\nhats\data\NHATS cleaned\sp_round_1_6_public_sens_only.dta",  ///
keepusing(insdhlp oftgoarea oflvslepr bedhlp dreshlp dresoft toilhlp bathhlp ///
showrbat1 showrbat2 showrbat3 eathlp eatdev outoft ntlvrmslp bathtoi_nhats adl_dres_help ///
adl_eat_help adl_index ) keep(match)
drop _merge
//new variable definition taken
tab bathtoi
tab adl_dres_help
tab adl_eat_help

egen adl_index_new=rowtotal(adl_*_help)
tab adl_index_new

keep if !missing(adl_index_new)

gen adl_impair_new=1 if adl_index_new>0 & !missing(adl_index_new)
replace adl_impair_new=0 if adl_index_new==0

svyset varunit [pw=anfinw], strata(varstrat)
*replace adl_impair=0 if adl_index==1

gen caneorwalker=cane==1 | walker==1
local dme cane walker caneorwalker commode urinal bedpan tub_toil_dev lift bed chair //oxy
gen n=1

label var caneorwalker "Cane or walker from DME"
label var cane "Cane from DME"
label var walker "Walker from DME"
label var commode "Commode from DME"
label var urinal "Urinal from DME"
label var bedpan "Bedpan from DME"
label var tub_toil_dev "Toilet/tub/shower assistive device from DME"
label var lift "Lift, transfer board, safety belt/harness/vest from DME"
label var bed "Hospital bed from DME"
label var chair "Wheelchair from DME"
label var oxy "Oxygen from DME"

foreach x of local dme {
	replace `x'=0 if `x'==.
}

gen n_fri=0

foreach x of local dme {
	replace n_fri=n_fri+1 if `x'==1
}
gen ind_fri=n_fri>=1 if !missing(n_fri)
label var ind_fri "Any mobility indicator from DME"
label var n_fri "Count of mobility indicators from DME"
gen mult_fri=n_fri>=2
label var mult_fri "Indicator of multiple mobility indicators from DME"

foreach x in `dme' ind_fri mult_fri n_fri {
	tab adl_impair_new `x', col nokey chi2
}


sum `dme' ind_fri mult_fri n_fri
tab1 `dme' ind_fri mult_fri n_fri

/*
gen ind_snf_12m=snf_paid_by_mc_12m>0
gen ind_hh_12m=hh_paid_by_mc_12m>0
*/

gen ind_snf_12m=n_snf_days_12m>0 & !missing(n_snf_days_12m)
gen ind_snf_or_hh_12m=ind_snf_12m==1 | ind_hh_12m==1
replace ind_hh_12m=0 if missing(ind_hh_12)
label var ind_snf_12m "Any SNF utilization"
label var ind_hh_ "Any HH utilization"
label var ind_snf_or_hh "Any HH or SNF utilization"

gen fri_hh_snf_oxy=ind_fri==1 | ind_snf_or_hh==1 | oxy==1
label var fri_hh_snf_oxy "Any HH, SNF, oxygen, or mobility indicator from DME"
gen fri_hh_snf =ind_snf_or_hh==1 | ind_fri==1
label var fri_hh_snf "Any HH, SNF, or mobility indicator from DME"
gen hh_snf_oxy=ind_snf_or_hh==1 | oxy==1
label var hh_snf_oxy "Any HH, SNF, or oxygen from DME"
gen fri_oxy =ind_fri | oxy
label var fri_oxy "Any mobility indcator or oxygen from DME"
gen bed_or_chair=bed==1 | chair==1
label var bed_or_chair "Hospital bed or wheelchair from DME"




/////Tables

gen wheelchr=chair
gen com=commode
gen bathtoi=tub_toil

foreach x in cane walker wheelchr com bathtoi{
sum `x'_nhats if `x'==1 & `x'_nhats==1
local a=`r(N)'
sum `x'_nhats if `x'==0 & `x'_nhats==1
local b=`r(N)'
sum `x' if `x'==1 & `x'_nhats==0
local c=`r(N)'
sum `x' if `x'==0 & `x'_nhats==0
local d=`r(N)'

sum `x'_nhats if `x'_nhats==1 & `x'!=. 
local e=`r(N)'
sum `x'_nhats if `x'_nhats==0 & `x'!=. 
local f=`r(N)'
sum `x' if `x'==1 & `x'_nhats!=.
local g=`r(N)'
sum `x' if `x'==0 & `x'_nhats!=.
local h=`r(N)'

matrix `x'= (`a',`b',`e' \ (`a'/`e')*100 , (`b'/`e')*100 , 100 \ `c',`d',`f' \ (`c'/`f')*100 , (`d'/`f')*100 , 100 \ `g',`h',`g'+`h'\(`g'/(`g'+`h'))*100,(`h'/(`g'+`h'))*100, 100) 

}
tab cane_nhats cane, row
mat list cane



foreach x in cane walker wheelchr com bathtoi {
//if "`x'"!="cane" local add addtable
if "`x'"=="cane" local title Cane
if "`x'"=="walker" local title Walker
if "`x'"=="wheelchr" local title Wheelchair
if "`x'"=="com" local title Commode/Bedpan/Urinal
if "`x'"=="bathtoi" local title Shower/Tub/Toilet Assistive Device
frmttable using "`logpath'table.rtf", replace statmat(`x') ///
sdec(1) ctitle("NHATS/DME", Yes, No, Total) rtitle(Yes\ % \No\% \ Total \ %) ///
title("`title'") addtable
}


tab cane_nhats adl_bath_diff 


foreach x in cane walker wheelchr com bathtoi {

sum `x'_nhats if `x'_nhats==1 & adl_impair_new==1
local a=`r(N)'
sum `x'_nhats if `x'_nhats==1 & adl_impair_new==0
local b=`r(N)'
sum `x'_nhats if `x'_nhats==0 & adl_impair_new==1
local c=`r(N)'
sum `x'_nhats if `x'_nhats==0 & adl_impair_new==0
local d=`r(N)'

sum `x'_nhats if `x'_nhats==1 & adl_impair_new!=.
local e=`r(N)'
sum `x'_nhats if `x'_nhats==0 & adl_impair_new!=.
local f=`r(N)'
sum adl_impair_new if adl_impair_new==1 & `x'_nhats!=.
local g=`r(N)'
sum adl_impair_new if adl_impair_new==0 & `x'_nhats!=.
local h=`r(N)'

matrix `x'= (`a',`b',`e' \ (`a'/`e')*100 , (`b'/`e')*100 , 100 \ `c',`d',`f' \ (`c'/`f')*100 , (`d'/`f')*100 , 100 \ `g',`h',`g'+`h'\(`g'/(`g'+`h'))*100,(`h'/(`g'+`h'))*100, 100) 
}
tab cane_nhats adl_impair_new, row
mat list cane

foreach x in cane walker wheelchr com bathtoi {
//if "`x'"!="cane" local add addtable
if "`x'"=="cane" local title Cane v.s. ADL Impairment
if "`x'"=="walker" local title Walker v.s. ADL Impairment
if "`x'"=="wheelchr" local title Wheelchair v.s. ADL Impairment
if "`x'"=="com" local title Commode/Bedpan/Urinal v.s. ADL Impairment
if "`x'"=="bathtoi" local title Shower/Tub/Toilet Assistive Device v.s. ADL Impairment
frmttable using "`logpath'table.rtf", replace statmat(`x') ///
sdec(1) ctitle("NHATS/ADL Impair", Yes, No, Total) rtitle(Yes\ % \ No\ % \Total \ %) ///
title("`title'") addtable
}


capture drop any_dev_nhats
gen any_dev_nhats=1 if cane_nhats==1 | walker_nhats==1 | wheelchr_nhats==1 | com_nhats==1 | bathtoi_nhats==1
replace any_dev_nhats=0 if cane_nhats==0 & walker_nhats==0 & wheelchr_nhats==0 & com_nhats==0 & bathtoi_nhats==0

sum any_dev_nhats if any_dev_nhats==1 & adl_impair_new==1
local a=`r(N)'
sum any_dev_nhats if any_dev_nhats==1 & adl_impair_new==0
local b=`r(N)'
sum any_dev_nhats if any_dev_nhats==0 & adl_impair_new==1
local c=`r(N)'
sum any_dev_nhats if any_dev_nhats==0 & adl_impair_new==0
local d=`r(N)'

sum any_dev_nhats if any_dev_nhats==1 & adl_impair_new!=.
local e=`r(N)'
sum any_dev_nhats if any_dev_nhats==0 & adl_impair_new!=.
local f=`r(N)'
sum adl_impair_new if adl_impair_new==1 & any_dev_nhats!=.
local g=`r(N)'
sum adl_impair_new if adl_impair_new==0 & any_dev_nhats!=.
local h=`r(N)'

matrix any= (`a',`b',`e' \ (`a'/`e')*100 , (`b'/`e')*100 , 100 \ `c',`d',`f' \ (`c'/`f')*100 , (`d'/`f')*100 , 100 \ `g',`h',`g'+`h'\(`g'/(`g'+`h'))*100,(`h'/(`g'+`h'))*100, 100) 

tab any_dev_nhats adl_impair_new, row
matrix list any

frmttable using "`logpath'table.rtf", replace statmat(any) ///
sdec(1) ctitle("Any Device NHATS/ADL Impairment", Yes, No, Total, %) rtitle(Yes\ % \No\ % \Total \ %)  ///
title("`title'") addtable

////////////////////////////////looked over until here should be good. 

///DME claim vs adl_impairment 
capture drop dme_cl*
egen dme_cl=rowtotal(cane walker commode urinal bedpan tub_toil_dev lift bed chair)

egen dme_c=rowtotal(cane walker commode urinal bedpan tub_toil_dev lift bed chair oxy ind_snf_or_hh_12m  )

gen dme_cl_1=0
replace dme_cl_1=1 if dme_cl>=1

gen dme_c_1=0
replace dme_c_1=1 if dme_c>=1

tab dme_cl_1 adl_impair_new

//Eat and dress vs DME
capture drop eat_dres
egen eat_dres=rowtotal(device_dres device_eat)
replace eat_dres=1 if eat_dres==2

tab dme_cl_1 eat_dres



sum n if adl_impair>=1 & dme_cl_1==0



preserve
keep if adl_impair_new==1 & dme_cl_1==0

sum eat_dres if eat_dres==1
local a=`r(N)'
sum eat_dres if eat_dres==0
local b=`r(N)'

tab eat_dres

matrix dme= (`a', ((`a'/(`a'+`b'))*100) \ `b', ((`b'/(`a'+`b'))*100) \ `a'+`b', 100)

restore

preserve
keep if adl_impair_new==1 & dme_c_1==0

sum eat_dres if eat_dres==1
local a=`r(N)'
sum eat_dres if eat_dres==0
local b=`r(N)'

tab eat_dres

matrix dme1= (`a', ((`a'/(`a'+`b'))*100) \ `b', ((`b'/(`a'+`b'))*100) \ `a'+`b', 100)
restore

foreach x in dme dme1 {

if "`x'"=="dme" local title ADL Impaired Self Report & DME Sample Excluding Oxygen, HH, & SNF 
if "`x'"=="dme1" local title ADL Impaired Self Report & DME Sample Including Oxygen, HH, & SNF 

frmttable using "`logpath'table.rtf", replace statmat(`x') ///
sdec(1) ctitle("Eating and/or Dressing Device Self Report", Freq., %) rtitle(Yes\ No \ Total)  ///
title("`title'") addtable
}


//put this into the word doc in same format
capture drop tag_dme
egen tag_dme= anymatch(cane walker commode urinal bedpan tub_toil_dev chair), v(1)
label var tag_dme "Claim for any device"

sum device_any if device_any==1 & tag_dme==1
local a=`r(N)'
sum device_any if device_any==1 & tag_dme==0
local b=`r(N)'
sum device_any if device_any==0 & tag_dme==1
local c=`r(N)'
sum device_any if device_any==0 & tag_dme==0
local d=`r(N)'

sum device_any if device_any==1 & tag_dme!=.
local e=`r(N)'
sum device_any if device_any==0 & tag_dme!=.
local f=`r(N)'
sum tag_dme if tag_dme==1 & device_any!=.
local g=`r(N)'
sum tag_dme if tag_dme==0 & device_any!=.
local h=`r(N)'

matrix dev= (`a',`b',`e' \ (`a'/`e')*100 , (`b'/`e')*100 , 100 \ `c',`d',`f' \ (`c'/`f')*100 , (`d'/`f')*100 , 100 \ `g',`h',`g'+`h'\(`g'/(`g'+`h'))*100,(`h'/(`g'+`h'))*100, 100) 
mat list dev

frmttable using "`logpath'table.rtf", replace statmat(dev) ///
sdec(1) ctitle("Self Report/Claims", Yes, No, Total) rtitle(Yes\ % \ No\ % \ Total \ %)  ///
title("Self Report using any Device vs. Claim for any Device") addtable ///
note("Excludes Oxygen & Lift")


tab device_any tag_dme, row


H="xxxxADL Help tables--not in use"
use "E:\nhats\data\NHATS cleaned\sp_round_1_6.dta" , clear

gen adl_dres_help1=adl_dres_help
gen adl_ins_help1=adl_ins_help
gen adl_bed_help1=adl_bed_help
gen adl_eat_help1=adl_eat_help
//egen adl_in=rowtotal(adl_help

replace adl_dres_help1=1 if dresoft==5
replace adl_bed_help1=1 if bedwout==1
replace adl_ins_help1=1 if oflvslepr==5
replace adl_eat_help1=1 if eatwout==1

egen adl_index1= rowtotal(adl_dres_help1 adl_ins_help1 adl_bed_help1 adl_eat_help1 adl_toil_help adl_bath_help)
gen adl_impair1=.
replace adl_impair1=0 if adl_index1==0
replace adl_impair1=1 if inrange(adl_index1,1,7)

local adl adl_dres_help adl_ins_help adl_bed_help adl_eat_help /*adl_index*/ adl_impair 
local adl1 adl_dres_help1 adl_ins_help1 adl_bed_help1 adl_eat_help1 /*adl_index1*/ adl_impair1

mat tab=J(11,6,.)
local r=1
local c=1

forvalues w=1/6 {
foreach x in `adl'{
sum `x' if `x'==0 & wave==`w'
mat tab[`r',`c']=r(N)
local r=`r'+1
sum `x' if `x'==1 & wave==`w'
mat tab[`r',`c']=r(N)
local r=`r'+1
}
sum adl_index if wave==`w'
mat tab[`r',`c']=r(mean)
local r=1
local c=`c'+1
}

mat list tab

frmttable using "E:\Files to move out\Mohammed\20180412\tab.doc", replace statmat(tab) ///
sdec(2) ctitle("Wave:", "1", "2" "3", "4", "5", "6" ) rtitle("ADL Dress Help-No" \ "ADL Dress Help-Yes"\ ///
"ADL Walk Help-No" \ "ADL Walk Help-Yes" \ "ADL Transfer Help-No" \ "ADL Transfer Help-Yes" \  ///
"ADL Eat Help-No" \ "ADL Eat Help-Yes" \ "ADL Impair-No" \ "ADL Impair-Yes" \ "ADL Index (Mean)")  ///
title("Previous Method for Calculating ADLs") note("Full Survey")


/*

local adl insdhlp oftgoarea oflvslepr bedhlp dreshlp ///
dresoft toilhlp bathhlp showrbat1 showrbat2 showrbat3 ///
eathlp eatdev outoft ntlvrmslp

foreach x in `adl'{
tab `x', matcell(`x')
}

foreach x in insdhlp bedhlp toilhlp{
mat rownames `x'= "1 YES" "2 NO"  
}

foreach x in dreshlp eathlp bathhlp{
mat rownames `x'= "-1 Inapplicable" "1 YES" "2 NO"
}

foreach x in showrbat1 showrbat2 showrbat3{
mat rownames `x'= "-7 RF" "1 YES" "2 NO"
}

mat rownames oftgoarea= "-8 DK" "-7 RF" "-1 Inapplicable" ///
"1 EVERY DAY (7 DAYS A WEEK)" "2 MOST DAYS (5-6 DAYS A WEEK)" "3 SOME DAYS (2-4 DAYS A WEEK)" ///
"4 RARELY (ONCE A WEEK OR LESS)" "5 NEVER" 

mat rownames dresoft="-7 RF" "1 EVERY DAY (7 DAYS A WEEK)" "2 MOST DAYS (5-6 DAYS A WEEK)" ///
"3 SOME DAYS (2-4 DAYS A WEEK)" "4 RARELY (ONCE A WEEK OR LESS)" "5 NEVER"

mat rownames oflvslepr= "-1 Inapplicable" "1 EVERY DAY (7 DAYS A WEEK)" "2 MOST DAYS (5-6 DAYS A WEEK)" ///
"3 SOME DAYS (2-4 DAYS A WEEK)" "4 RARELY (ONCE A WEEK OR LESS)"  

mat rownames eatdev= "1 YES" "2 NO" "7 ALWAYS FED THROUGH IV OR TUBE"

mat rownames outoft= "-8 DK" "1 EVERY DAY (7 DAYS A WEEK)" "2 MOST DAYS (5-6 DAYS A WEEK)" /// 
"3 SOME DAYS (2-4 DAYS A WEEK)" "4 RARELY (ONCE A WEEK OR LESS)" "5 NEVER"

mat rownames ntlvrmslp= "-1 Inapplicable"

foreach x in `adl' {
if "`x'"!="insdhlp" local add addtable
if "`x'"=="insdhlp" local title "Got Help Inside"
if "`x'"=="oftgoarea" local title "How Often Go Other Areas"
if "`x'"=="oflvslepr" local title "How Often Leave Bedroom"
if "`x'"=="bedhlp" local title "Got Help Out of Bed"
if "`x'"=="dreshlp" local title "Anyone Help Get Dressed"
if "`x'"=="dresoft" local title "Often you Get Dressed"
if "`x'"=="toilhlp" local title "Anyone Help you use Toilet"
if "`x'"=="bathhlp" local title "Anyone Help Shower Bath Other"
if "`x'"=="showrbat1" local title "Showered"
if "`x'"=="showrbat2" local title "Took Baths in a Tub"
if "`x'"=="showrbat3" local title "Washed Some Other Way"
if "`x'"=="eathlp" local title "Did Anyone Help You Eat"
if "`x'"=="eatdev" local title "Ever Use Adapted Utensils"
if "`x'"=="outoft" local title "Often Go Outside"
if "`x'"=="ntlvrmslp" local title "Did not Leave Bedroom"
frmttable using "E:\nhats\projects\Serious_Ill\FRI\20180425\tab.doc", replace statmat(`x') ///
sdec(0) title("`title'") `add'
}




mat tab1=J(11,6,.)
local r=1
local c=1

forvalues w=1/6 {
foreach x in `adl1'{
sum `x' if `x'==0 & wave==`w'
mat tab1[`r',`c']=r(N)
local r=`r'+1
sum `x' if `x'==1 & wave==`w'
mat tab1[`r',`c']=r(N)
local r=`r'+1
}
sum adl_index1 if wave==`w'
mat tab1[`r',`c']=r(mean)
local r=1
local c=`c'+1
}
mat list tab1

frmttable using "E:\Files to move out\Mohammed\20180412\tab.doc", replace statmat(tab1) ///
sdec(2) ctitle("Wave:", "1", "2" "3", "4", "5", "6" ) rtitle("ADL Dress Help-No" \ "ADL Dress Help-Yes"\ ///
"ADL Walk Help-No" \ "ADL Walk Help-Yes" \ "ADL Transfer Help-No" \ "ADL Transfer Help-Yes" \  ///
"ADL Eat Help-No" \ "ADL Eat Help-Yes" \ "ADL Impair-No" \ "ADL Impair-Yes" \ "ADL Index (Mean)")  ///
title("New Method for Calculating ADLs") note("Full Survey") addtable


mat tab2=J(6,6,.)
local r=1
local c=1

forvalues w=1/6 {
foreach x in `adl'{
sum `x' if wave==`w'
mat tab2[`r',`c']=r(mean)*100
local r=`r'+1
}
sum adl_index if wave==`w'
mat tab2[`r',`c']=r(mean)
local r=1
local c=`c'+1
}
mat list tab2

frmttable using "E:\Files to move out\Mohammed\20180412\tab.doc", replace statmat(tab2) ///
sdec(2) ctitle("Wave:", "1", "2" "3", "4", "5", "6" ) rtitle("ADL Dress Help"\ ///
"ADL Walk Help" \ "ADL Transfer Help" \ "ADL Eat Help" \ "ADL Impair" \ "ADL Index (Mean)")  ///
title("Old Method for Calculating ADLs %") note("Represents percentages of individuals who are ADL impaired") addtable


mat tab3=J(6,6,.)
local r=1
local c=1

forvalues w=1/6 {
foreach x in `adl1'{
sum `x' if wave==`w'
mat tab3[`r',`c']=r(mean)*100
local r=`r'+1
}
sum adl_index1 if wave==`w'
mat tab3[`r',`c']=r(mean)
local r=1
local c=`c'+1
}
mat list tab3

frmttable using "E:\Files to move out\Mohammed\20180412\tab.doc", replace statmat(tab3) ///
sdec(2) ctitle("Wave:", "1", "2" "3", "4", "5", "6" ) rtitle("ADL Dress Help"\ ///
"ADL Walk Help" \ "ADL Transfer Help" \ "ADL Eat Help" \ "ADL Impair" \ "ADL Index (Mean)")  ///
title("New Method for Calculating ADLs %") note("Represents percentages of individuals who are ADL impaired") addtable

/*
tab wave adl_dres_help, matcell(dres)
tab wave adl_ins_help, matcell(ins)
tab wave adl_bed_help, matcell(bed)
tab wave adl_index, matcell(index)
tab wave adl_impair, matcell(impair)


replace adl_dres_help=1 if dresoft==5
replace adl_dres_help=1 if bedwout==1
replace adl_ins_help =1 if oflvslepr==5
egen adl_index1= rowtotal(adl_*_help)
gen adl_impair1=.
replace adl_impair1=0 if adl_index1<1
replace adl_impair1=1 if adl_index1>0 & adl_index1<7


tab wave adl_dres_help, matcell(dres1)
tab wave adl_ins_help, matcell(ins1)
tab wave adl_bed_help, matcell(bed1)
tab wave adl_index1, matcell(index1)
tab wave adl_impair1, matcell(impair1)



H="NEW Self Report from NHATS vs Claims data 2 tables"
//This will create two tables 1 with the full sample.
//The next will be stratified to include those with an ADL impairment only. 

clear all 
set more off
capture log close

local intpath "E:\nhats\data\Projects\serious_ill\int_data"
local datapath "E:\nhats\data\Projects\serious_ill\final_data"
local logpath "E:\nhats\data\Projects\serious_ill\logs\"

cd `datapath'
*log using `logpath'\nhats_dme_function.txt, text replace

use serious_ill_nhats_sample if wave==1

duplicates drop spid, force

drop adl_eat_help adl_dres_help adl_index
merge 1:1 spid wave using "E:\nhats\data\NHATS cleaned\sp_round_1_6_public_sens_only.dta",  ///
keepusing(insdhlp oftgoarea oflvslepr bedhlp dreshlp dresoft toilhlp bathhlp ///
showrbat1 showrbat2 showrbat3 eathlp eatdev outoft ntlvrmslp bathtoi_nhats adl_dres_help ///
adl_eat_help adl_index) keep(match)
drop _merge

local vars n nonh sp_ivw_yes nomiss ffs_12m

gen nonh=!nhres
label var nonh "SP interview eligible (not nursing home resident)"
gen n=1
label var n "Total Wave 1"
//created new adl_index var b/c we want to keep people who even answered one adl question
egen adl_index_new=rowtotal(adl_*_help) 
tab adl_index_new 


gen nomiss=!missing(adl_index_new)
label var nomiss "With responses to atleast 1 ADL question"
label var sp_ivw_yes "SP interview conducted"

mat tab=J(5,1,.)
local r=1

foreach x in `vars' {
	sum n if `x'==1
	mat tab[`r',1]=r(N)
	drop if `x'!=1
	local r=`r'+1
}

mat rownames tab=`vars'

frmttable using "`logpath'table_all.rtf", statmat(tab) replace title("Sample Derivation") ///
sdec(0) varlabels

frmttable using "`logpath'table_adl.rtf", statmat(tab) replace title("Sample Derivation") ///
sdec(0) varlabels

use serious_ill_nhats_sample if wave==1 & sp_ivw==1 & ffs_12m==1, clear 
//& !missing(adl_index), clear
foreach x of varlist device* {
	local device `device' `x'
}
tab bathtoi
tab adl_dres_help
tab adl_eat_help
drop bathtoi adl_dres_help adl_eat_help
merge 1:1 spid wave using "E:\nhats\data\NHATS cleaned\sp_round_1_6_public_sens_only.dta",  ///
keepusing(insdhlp oftgoarea oflvslepr bedhlp dreshlp dresoft toilhlp bathhlp ///
showrbat1 showrbat2 showrbat3 eathlp eatdev outoft ntlvrmslp bathtoi_nhats adl_dres_help ///
adl_eat_help adl_index ) keep(match)
drop _merge
//new variable definition taken
tab bathtoi
tab adl_dres_help
tab adl_eat_help

egen adl_index_new=rowtotal(adl_*_help)
tab adl_index_new

keep if !missing(adl_index_new)

gen adl_impair_new=1 if adl_index_new>0 & !missing(adl_index_new)
replace adl_impair_new=0 if adl_index_new==0

svyset varunit [pw=anfinw], strata(varstrat)
*replace adl_impair=0 if adl_index==1

gen caneorwalker=cane==1 | walker==1
local dme cane walker caneorwalker commode urinal bedpan tub_toil_dev lift bed chair //oxy
gen n=1

label var caneorwalker "Cane or walker from DME"
label var cane "Cane from DME"
label var walker "Walker from DME"
label var commode "Commode from DME"
label var urinal "Urinal from DME"
label var bedpan "Bedpan from DME"
label var tub_toil_dev "Toilet/tub/shower assistive device from DME"
label var lift "Lift, transfer board, safety belt/harness/vest from DME"
label var bed "Hospital bed from DME"
label var chair "Wheelchair from DME"
label var oxy "Oxygen from DME"

foreach x of local dme {
	replace `x'=0 if `x'==.
}

gen n_fri=0

foreach x of local dme {
	replace n_fri=n_fri+1 if `x'==1
}
gen ind_fri=n_fri>=1 if !missing(n_fri)
label var ind_fri "Any mobility indicator from DME"
label var n_fri "Count of mobility indicators from DME"
gen mult_fri=n_fri>=2
label var mult_fri "Indicator of multiple mobility indicators from DME"

foreach x in `dme' ind_fri mult_fri n_fri {
	tab adl_impair_new `x', col nokey chi2
}


sum `dme' ind_fri mult_fri n_fri
tab1 `dme' ind_fri mult_fri n_fri

/*
gen ind_snf_12m=snf_paid_by_mc_12m>0
gen ind_hh_12m=hh_paid_by_mc_12m>0
*/

gen ind_snf_12m=n_snf_days_12m>0 & !missing(n_snf_days_12m)
gen ind_snf_or_hh_12m=ind_snf_12m==1 | ind_hh_12m==1
replace ind_hh_12m=0 if missing(ind_hh_12)
label var ind_snf_12m "Any SNF utilization"
label var ind_hh_ "Any HH utilization"
label var ind_snf_or_hh "Any HH or SNF utilization"

gen fri_hh_snf_oxy=ind_fri==1 | ind_snf_or_hh==1 | oxy==1
label var fri_hh_snf_oxy "Any HH, SNF, oxygen, or mobility indicator from DME"
gen fri_hh_snf =ind_snf_or_hh==1 | ind_fri==1
label var fri_hh_snf "Any HH, SNF, or mobility indicator from DME"
gen hh_snf_oxy=ind_snf_or_hh==1 | oxy==1
label var hh_snf_oxy "Any HH, SNF, or oxygen from DME"
gen fri_oxy =ind_fri | oxy
label var fri_oxy "Any mobility indcator or oxygen from DME"
gen bed_or_chair=bed==1 | chair==1
label var bed_or_chair "Hospital bed or wheelchair from DME"



gen all=1 
gen adl=1 if adl_impair_new==1
 
/////Tables


foreach p in all adl{
preserve
keep if `p'==1

gen wheelchr=chair
gen com=commode
gen bathtoi=tub_toil

foreach x in cane walker wheelchr com bathtoi{
sum `x'_nhats if `x'==1 & `x'_nhats==1
local a=`r(N)'
sum `x'_nhats if `x'==0 & `x'_nhats==1
local b=`r(N)'
sum `x' if `x'==1 & `x'_nhats==0
local c=`r(N)'
sum `x' if `x'==0 & `x'_nhats==0
local d=`r(N)'

sum `x'_nhats if `x'_nhats==1 & `x'!=. 
local e=`r(N)'
sum `x'_nhats if `x'_nhats==0 & `x'!=. 
local f=`r(N)'
sum `x' if `x'==1 & `x'_nhats!=.
local g=`r(N)'
sum `x' if `x'==0 & `x'_nhats!=.
local h=`r(N)'

matrix `x'= (`a',`b',`e' \ (`a'/`e')*100 , (`b'/`e')*100 , 100 \ `c',`d',`f' \ (`c'/`f')*100 , (`d'/`f')*100 , 100 \ `g',`h',`g'+`h'\(`g'/(`g'+`h'))*100,(`h'/(`g'+`h'))*100, 100) 

}
tab cane_nhats cane, row
mat list cane



foreach x in cane walker wheelchr com bathtoi {
if "`x'"!="cane" local add addtable
if "`x'"=="cane" local title Cane
if "`x'"=="walker" local title Walker
if "`x'"=="wheelchr" local title Wheelchair
if "`x'"=="com" local title Commode/Bedpan/Urinal
if "`x'"=="bathtoi" local title Shower/Tub/Toilet Assistive Device
frmttable using "`logpath'table_`p'.rtf", replace statmat(`x') ///
sdec(1) ctitle("NHATS/DME", Yes, No, Total) rtitle(Yes\ % \No\% \ Total \ %) ///
title("`title'") addtable
}


tab cane_nhats adl_bath_diff 


foreach x in cane walker wheelchr com bathtoi {

sum `x'_nhats if `x'_nhats==1 & adl_impair_new==1
local a=`r(N)'
sum `x'_nhats if `x'_nhats==1 & adl_impair_new==0
local b=`r(N)'
sum `x'_nhats if `x'_nhats==0 & adl_impair_new==1
local c=`r(N)'
sum `x'_nhats if `x'_nhats==0 & adl_impair_new==0
local d=`r(N)'

sum `x'_nhats if `x'_nhats==1 & adl_impair_new!=.
local e=`r(N)'
sum `x'_nhats if `x'_nhats==0 & adl_impair_new!=.
local f=`r(N)'
sum adl_impair_new if adl_impair_new==1 & `x'_nhats!=.
local g=`r(N)'
sum adl_impair_new if adl_impair_new==0 & `x'_nhats!=.
local h=`r(N)'

matrix `x'= (`a',`b',`e' \ (`a'/`e')*100 , (`b'/`e')*100 , 100 \ `c',`d',`f' \ (`c'/`f')*100 , (`d'/`f')*100 , 100 \ `g',`h',`g'+`h'\(`g'/(`g'+`h'))*100,(`h'/(`g'+`h'))*100, 100) 
}
tab cane_nhats adl_impair_new, row
mat list cane

foreach x in cane walker wheelchr com bathtoi {
//if "`x'"!="cane" local add addtable
if "`x'"=="cane" local title Cane v.s. ADL Impairment
if "`x'"=="walker" local title Walker v.s. ADL Impairment
if "`x'"=="wheelchr" local title Wheelchair v.s. ADL Impairment
if "`x'"=="com" local title Commode/Bedpan/Urinal v.s. ADL Impairment
if "`x'"=="bathtoi" local title Shower/Tub/Toilet Assistive Device v.s. ADL Impairment
frmttable using "`logpath'table_`p'.rtf", replace statmat(`x') ///
sdec(1) ctitle("NHATS/ADL Impair", Yes, No, Total) rtitle(Yes\ % \ No\ % \Total \ %) ///
title("`title'") addtable
}


capture drop any_dev_nhats
gen any_dev_nhats=1 if cane_nhats==1 | walker_nhats==1 | wheelchr_nhats==1 | com_nhats==1 | bathtoi_nhats==1
replace any_dev_nhats=0 if cane_nhats==0 & walker_nhats==0 & wheelchr_nhats==0 & com_nhats==0 & bathtoi_nhats==0

sum any_dev_nhats if any_dev_nhats==1 & adl_impair_new==1
local a=`r(N)'
sum any_dev_nhats if any_dev_nhats==1 & adl_impair_new==0
local b=`r(N)'
sum any_dev_nhats if any_dev_nhats==0 & adl_impair_new==1
local c=`r(N)'
sum any_dev_nhats if any_dev_nhats==0 & adl_impair_new==0
local d=`r(N)'

sum any_dev_nhats if any_dev_nhats==1 & adl_impair_new!=.
local e=`r(N)'
sum any_dev_nhats if any_dev_nhats==0 & adl_impair_new!=.
local f=`r(N)'
sum adl_impair_new if adl_impair_new==1 & any_dev_nhats!=.
local g=`r(N)'
sum adl_impair_new if adl_impair_new==0 & any_dev_nhats!=.
local h=`r(N)'

matrix any= (`a',`b',`e' \ (`a'/`e')*100 , (`b'/`e')*100 , 100 \ `c',`d',`f' \ (`c'/`f')*100 , (`d'/`f')*100 , 100 \ `g',`h',`g'+`h'\(`g'/(`g'+`h'))*100,(`h'/(`g'+`h'))*100, 100) 

tab any_dev_nhats adl_impair_new, row
matrix list any

frmttable using "`logpath'table_`p'.rtf", replace statmat(any) ///
sdec(1) ctitle("Any Device NHATS/ADL Impairment", Yes, No, Total, %) rtitle(Yes\ % \No\ % \Total \ %)  ///
title(Any NHATS Device V.S. ADL Impairment) addtable


///DME claim vs adl_impairment 
capture drop dme_cl*
egen dme_cl=rowtotal(cane walker commode urinal bedpan tub_toil_dev lift bed chair)

egen dme_c=rowtotal(cane walker commode urinal bedpan tub_toil_dev lift bed chair oxy ind_snf_or_hh_12m  )

gen dme_cl_1=0
replace dme_cl_1=1 if dme_cl>=1

gen dme_c_1=0
replace dme_c_1=1 if dme_c>=1

tab dme_cl_1 adl_impair_new

//Eat and dress vs DME
capture drop eat_dres
egen eat_dres=rowtotal(device_dres device_eat)
replace eat_dres=1 if eat_dres==2

tab dme_cl_1 eat_dres



sum n if adl_impair>=1 & dme_cl_1==0


tempfile temp`p'
save "'temp`p''", replace
keep if adl_impair_new==1 & dme_cl_1==0

sum eat_dres if eat_dres==1
local a=`r(N)'
sum eat_dres if eat_dres==0
local b=`r(N)'

tab eat_dres

matrix dme= (`a', ((`a'/(`a'+`b'))*100) \ `b', ((`b'/(`a'+`b'))*100) \ `a'+`b', 100)

use "'temp`p''", clear

tempfile temp1`p'
save "'temp1`p''", replace

keep if adl_impair_new==1 & dme_c_1==0

sum eat_dres if eat_dres==1
local a=`r(N)'
sum eat_dres if eat_dres==0
local b=`r(N)'

tab eat_dres

matrix dme1= (`a', ((`a'/(`a'+`b'))*100) \ `b', ((`b'/(`a'+`b'))*100) \ `a'+`b', 100)
use "'temp1`p''", clear


foreach x in dme dme1 {

if "`x'"=="dme" local title ADL Impaired Self Report & DME Sample Excluding Oxygen, HH, & SNF 
if "`x'"=="dme1" local title ADL Impaired Self Report & DME Sample Including Oxygen, HH, & SNF 

frmttable using "`logpath'table_`p'.rtf", replace statmat(`x') ///
sdec(1) ctitle("Eating and/or Dressing Device Self Report", Freq., %) rtitle(Yes\ No \ Total)  ///
title("`title'") addtable
}


capture drop tag_dme
egen tag_dme= anymatch(cane walker commode urinal bedpan tub_toil_dev chair), v(1)
label var tag_dme "Claim for any device"

sum device_any if any_dev_nhats==1 & tag_dme==1
local a=`r(N)'
sum device_any if any_dev_nhats==1 & tag_dme==0
local b=`r(N)'
sum device_any if any_dev_nhats==0 & tag_dme==1
local c=`r(N)'
sum device_any if any_dev_nhats==0 & tag_dme==0
local d=`r(N)'

sum device_any if any_dev_nhats==1 & tag_dme!=.
local e=`r(N)'
sum device_any if any_dev_nhats==0 & tag_dme!=.
local f=`r(N)'
sum tag_dme if tag_dme==1 & any_dev_nhats!=.
local g=`r(N)'
sum tag_dme if tag_dme==0 & any_dev_nhats!=.
local h=`r(N)'

matrix dev= (`a',`b',`e' \ (`a'/`e')*100 , (`b'/`e')*100 , 100 \ `c',`d',`f' \ (`c'/`f')*100 , (`d'/`f')*100 , 100 \ `g',`h',`g'+`h'\(`g'/(`g'+`h'))*100,(`h'/(`g'+`h'))*100, 100) 
mat list dev

frmttable using "`logpath'table_`p'.rtf", replace statmat(dev) ///
sdec(1) ctitle("Self Report/Claims", Yes, No, Total) rtitle(Yes\ % \ No\ % \ Total \ %)  ///
title("Self Report using any Device vs. Claim for any Device") addtable ///
note("Excludes Oxygen & Lift")


tab device_any tag_dme, row

tab any_dev_nhats device_any
restore
}

