= V4 Outline MultiLine NoSorting TabWidth=30

H="Homebound and income"
clear all
set more off
capture log close

cd "E:\nhats\data\projects\Homebound\logs"
use "E:\nhats\data\NHATS cleaned\sp_round_1_5.dta" if year==2011 & lml==0, clear
xtset spid wave
replace homebound_cat=. if nhres==1
gen homebound=homebound==1 if !missing(homebound)
gen hbw=wave if homebound==1
gen nhw=wave if nhres==1
by spid, sort: egen firsthb=min(hbw)
by spid, sort: egen firstnh=min(nhw)
*drop if firsthb==1 | missing(homebou)
by spid: gen hbnextwave=homebound[_n+1]
by spid: gen nhnextwave=nhres[_n+1]
gen inchbnextwave=firsthb==wave+1 & homebound==0
gen incnhnextwave=firstnh==wave+1 & nhres==0
replace adl_diff_ind=1 if adl_impair==1
label var adl_diff_ind "ADL difficulty or impairment"


gen wherelandgroup=1 if missing(firsthb) & missing(firstnh)
replace wherelandgroup=2 if !missing(firsthb) 
replace wherelandgroup=3 if !missing(firstnh) 
replace wherelandgroup=4 if !missing(firstnh) & firsthb<firstnh
label define wherelandgroup 1 "Never homebound or NH resident" 2 "Future HB" ///
3 "Future NH resident" 4 "Homebound, then NH"
label values wherelandgroup wherelandgroup

sort spid wave

gen nwstatus=.
forvalues i=1/4 {
replace nwstatus=r`=`i'+1'status if wave==`i'
}
tab nwstat
tab r2status
replace nwstatus=1 if inlist(nwstatus,60,63) & !missing(hbne)
replace nwstatus=4 if inlist(nwstatus,61)
replace nwstatus=6 if inlist(nwstatus,62,86)
replace nwstatus=7 if nwstatus>7
replace nwstatus=6 if died_12==1 & nwstatus==7
label define nwstatus 1 "Community, not homebound" 2 "Homebound, not incident" ///
3 "Incident homebound" 4 "NH Resident, not incident" ///
5 "Incident NH" 6 "Died" 7 "LFU"
label values nwstatus nwstatus
replace nwstatus=2 if hbne==1
replace nwstatus=3 if inchb==1
replace nwstat=4 if nhne==1
replace nwstat=5 if incnhne==1
label var nwstat "Status next wave"

gen sr_cond_cat=1 if sr_numcond<2
replace sr_cond_cat=2 if inrange(sr_numcond,2,4)
replace sr_cond_cat=3 if inrange(sr_numcond,5,15)
label define sr_cond_cat 1 "0-1 SR condition" 2 "2-4 SR conditions" 3 "5+ SR conditions"
label values sr_cond_cat sr_cond_CAT
tab sr_cond_cat, gen(sr_cond_cat)
forvalues i=1/3 {
local lab: label sr_cond_cat `i'
label var sr_cond_cat`i' "`lab'"
}

gen status=1 if sp_ivw==1 & !missing(homebound)
replace status=2 if homebound==1
replace status=3 if nhres==1
replace status=4 if status==1 & (firsthb<wave | firstnh<wave)
label define status 1 "Community, not HB" 2 "Homebound" 3 "NH resident" 4 ///
"Community, previously HB or NH resident"
label values status status
label var status "Status this wave"

tab wave nwstat if wave<=4, row
tab nwsta status if wave==1

sum aveincome
forvalues i=1/4 {
gen inccat`i'=income_cat==`i'-1
local lab : label income_cat `=`i'-1'
label var inccat`i' "Income: `lab'"
}
gen prob_dementia=dem_3==1 if !missing(dem_3)
label var prob_dementia "Probable dementia"

by spid, sort: gen persontime=_N
label var persontime "Waves contributing information"

local cvars1 age
local cvars2 persontime aveincome n_helpers n_paid_helpers tot_hrsmonth_help_i ///
tot_hrsmonth_paid_i 
local ivars1 female white black hisp other_race married educ_hs_ind proxy
local ivars2 ind_any_helpers ind_paid_helper top_quartile_help_helped ///
medicaid medigap srh_fp nhres ///
sr_ami_ever sr_stroke_ever sr_cancer_ever sr_hip_ever sr_heart_dis_ever ///
sr_htn_ever sr_ra_ever sr_osteoprs_ever sr_diabetes_ever sr_lung_dis_ever ///
prob_dementia dem_2_cat adl_diff_ind adl_independent iadl_diff_ind iadl_independent 
local ivars3 adl1 adl2 adl3 iadl1 iadl2 iadl3 adl_eat_help adl_bath_help adl_toil_help ///
adl_dres_help adl_ins_help adl_bed_help iadl_laun_help ///
iadl_shop_help iadl_meal_help iadl_bank_help iadl_meds_help ///
 reg_doc_seen sr_hosp_ind
 
local cvars1 age
local cvars2 persontime  aveincome
local ivars1 female white black hisp other_race married 
label var inchb "Incident Homebound Next Wave"
label var incnh "Incident Nursing Home Next Wave"
local ivars2 inccat1 inccat2 inccat3 inccat4 proxy  ///
medicaid medigap srh_fp adl_eat_help adl_bath_help adl_toil_help adl_dres_help ///
adl_ins_help adl_bed_help adl_impair iadl_impair ///
sr_ami_ever sr_stroke_ever sr_cancer_ever sr_hip_ever sr_heart_dis_ever ///
sr_htn_ever sr_ra_ever sr_osteoprs_ever sr_diabetes_ever sr_lung_dis_ever ///
prob_dementia dem_2_cat adl_diff_ind adl_independent inchbnextwave incnhnextwave 
gen n=1

forvalues i=1/7 {
gen group`i'=nwstatus==`i'
}


preserve
drop group*
forvalues i=1/3 {
gen group`i'=status==`i'
}
gen group_all=1
local rn : word count 1 `cvars1' `cvars2' `ivars1' `ivars2' `coutcomes' `coutcomes' `ioutcomes' 1 1
di `rn'
mat tab1=J(`rn',7,.)
mat stars=J(`rn',5,0)
local r=1
local c=1
foreach i in _all 1 2 3 {
	foreach round in 1 2 {
		foreach x of local cvars`round' {
			qui sum `x' if group`i'==1  [aw=anfin]
			mat tab1[`r',`c']=r(mean)
/*			if inlist("`i'","a","b","c") {
				qui ttest `x' if group`i'==1 | criteria_none==1, by(group`i')
				mat stars[`r',`c']=(r(p)<.01) + (r(p)<.05)
}*/
			local r=`r'+1
}
		foreach x of local ivars`round' {
			qui sum `x' if group`i'==1 [aw=anfin]
			mat tab1[`r',`c']=r(mean)*100
	/*		if inlist("`i'","a","b","c") {
				qui tab `x' group`i' if group`i'==1 | criteria_none==1, chi2
				mat stars[`r',`c']=(r(p)<.01) + (r(p)<.05)
}*/
			local r=`r'+1
}
}
	local r=`r'+1

	
	foreach x of local coutcomes {
		qui sum `x' if group`i'==1 [aw=anfin],d
		mat tab1[`r',`c']=r(mean)
	/*	if inlist("`i'","a","b","c") {
			qui ttest `x' if group`i'==1 | criteria_none==1, by(group`i')
			mat stars[`r',`c']=(r(p)<.01) + (r(p)<.05)
}*/
		local r=`r'+1
*		if "`x'"=="tot_paid_by_mc_12m_wi_n0" {
			qui sum `x' if group`i'==1 [aw=anfin],d 
			mat tab1[`r',`c']=r(p50)
			local r=`r'+1
*}
}
	foreach x of local ioutcomes {
		qui sum `x' if group`i'==1 [aw=anfin]
		mat tab1[`r',`c']=r(mean)*100
	/*		if inlist("`i'","a","b","c") {
				qui tab `x' group`i' if group`i'==1 | criteria_none==1, chi2
				mat stars[`r',`c']=(r(p)<.01) + (r(p)<.05)
}*/
			local r=`r'+1
}
	qui sum n if group`i'==1 [aw=anfin]
	mat tab1[`r',`c']=r(N)
	mat tab1[`r'+1,`c']=r(sum)
	local r=1
	local c=`c'+1
}

foreach x in `coutcomes' {
local rnames `rnames' "`x'" "Median"
}

mat rownames tab1=`cvars1' `ivars1' `cvars2' `ivars2' "_" N "Estimate"

frmttable using sample_characteristics.doc, replace statmat(tab1) ///
 title("Sample Characteristics by Status at Wave") ///
 ctitles("" "All" "Community" "Homebound" "Nursing Home") ///
 sdec(1) annotate(stars) asymbol(*,*) ///
 varlabels note("Cross-wave NHATS sample")
 restore
preserve
keep if status==1
local rn : word count 1 `cvars1' `cvars2' `ivars1' `ivars2' `coutcomes' `coutcomes' `ioutcomes' 1 1
di `rn'
mat tab1=J(`rn',7,.)
mat stars=J(`rn',5,0)
local r=1
local c=1
forvalues i=1/7 {
	foreach round in 1 2 {
		foreach x of local cvars`round' {
			qui sum `x' if group`i'==1 [aw=anfin]
			mat tab1[`r',`c']=r(mean)
/*			if inlist("`i'","a","b","c") {
				qui ttest `x' if group`i'==1 | criteria_none==1, by(group`i')
				mat stars[`r',`c']=(r(p)<.01) + (r(p)<.05)
}*/
			local r=`r'+1
}
		foreach x of local ivars`round' {
			qui sum `x' if group`i'==1 [aw=anfin]
			mat tab1[`r',`c']=r(mean)*100
	/*		if inlist("`i'","a","b","c") {
				qui tab `x' group`i' if group`i'==1 | criteria_none==1, chi2
				mat stars[`r',`c']=(r(p)<.01) + (r(p)<.05)
}*/
			local r=`r'+1
}
}
	local r=`r'+1

	
	foreach x of local coutcomes {
		qui sum `x' if group`i'==1,d
		mat tab1[`r',`c']=r(mean)
	/*	if inlist("`i'","a","b","c") {
			qui ttest `x' if group`i'==1 | criteria_none==1, by(group`i')
			mat stars[`r',`c']=(r(p)<.01) + (r(p)<.05)
}*/
		local r=`r'+1
*		if "`x'"=="tot_paid_by_mc_12m_wi_n0" {
			qui sum `x' if group`i'==1,d
			mat tab1[`r',`c']=r(p50)
			local r=`r'+1
*}
}
	foreach x of local ioutcomes {
		qui sum `x' if group`i'==1
		mat tab1[`r',`c']=r(mean)*100
	/*		if inlist("`i'","a","b","c") {
				qui tab `x' group`i' if group`i'==1 | criteria_none==1, chi2
				mat stars[`r',`c']=(r(p)<.01) + (r(p)<.05)
}*/
			local r=`r'+1
}
	qui sum n if group`i'==1 [aw=anfin]
	
	mat tab1[`r',`c']=r(N)
	mat tab1[`r'+1,`c']=r(sum)
	local r=1
	local c=`c'+1
}

foreach x in `coutcomes' {
local rnames `rnames' "`x'" "Median"
}

mat rownames tab1=`cvars1' `ivars1' `cvars2' `ivars2' "_" N "Estimate"

frmttable using sample_characteristics.doc, addtable statmat(tab1) ///
 title("Sample Characteristics by next wave status") ///
 ctitles("" "Community" "HB, Not Incident" "Incident HB" "NH, Not Incident" "Incident NH" ///
 "Died" "LFU") ///
 sdec(1) annotate(stars) asymbol(*,*) ///
 varlabels note("Cross-wave NHATS community-dwelling sample, by next-wave status")

restore
preserve
keep if status==1
local rn : word count 1 `cvars1' `cvars2' `ivars1' `ivars2' `coutcomes' `coutcomes' `ioutcomes' 1 1
di `rn'
mat tab1=J(`rn',4,.)
mat stars=J(`rn',4,0)
local r=1
local c=1

drop group*
forvalues i=1/4 {
gen group`i'=inccat`i'
local lab`i' : var label inccat`i'
}

forvalues i=1/4 {
	foreach round in 1 2 {
		foreach x of local cvars`round' {
			qui sum `x' if group`i'==1 [aw=anfin]
			mat tab1[`r',`c']=r(mean)
/*			if inlist("`i'","a","b","c") {
				qui ttest `x' if group`i'==1 | criteria_none==1, by(group`i')
				mat stars[`r',`c']=(r(p)<.01) + (r(p)<.05)
}*/
			local r=`r'+1
}
		foreach x of local ivars`round' {
			qui sum `x' if group`i'==1 [aw=anfin]
			mat tab1[`r',`c']=r(mean)*100
	/*		if inlist("`i'","a","b","c") {
				qui tab `x' group`i' if group`i'==1 | criteria_none==1, chi2
				mat stars[`r',`c']=(r(p)<.01) + (r(p)<.05)
}*/
			local r=`r'+1
}
}
	local r=`r'+1

	
	foreach x of local coutcomes {
		qui sum `x' if group`i'==1,d
		mat tab1[`r',`c']=r(mean)
	/*	if inlist("`i'","a","b","c") {
			qui ttest `x' if group`i'==1 | criteria_none==1, by(group`i')
			mat stars[`r',`c']=(r(p)<.01) + (r(p)<.05)
}*/
		local r=`r'+1
*		if "`x'"=="tot_paid_by_mc_12m_wi_n0" {
			qui sum `x' if group`i'==1,d
			mat tab1[`r',`c']=r(p50)
			local r=`r'+1
*}
}
	foreach x of local ioutcomes {
		qui sum `x' if group`i'==1
		mat tab1[`r',`c']=r(mean)*100
	/*		if inlist("`i'","a","b","c") {
				qui tab `x' group`i' if group`i'==1 | criteria_none==1, chi2
				mat stars[`r',`c']=(r(p)<.01) + (r(p)<.05)
}*/
			local r=`r'+1
}
	qui sum n if group`i'==1 [aw=anfin]
	
	mat tab1[`r',`c']=r(N)
	mat tab1[`r'+1,`c']=r(sum)
	local r=1
	local c=`c'+1
}

foreach x in `coutcomes' {
local rnames `rnames' "`x'" "Median"
}

mat rownames tab1=`cvars1' `ivars1' `cvars2' `ivars2' "_" N "Estimate"

frmttable using sample_characteristics.doc, addtable statmat(tab1) ///
 title("Sample Characteristics by Income category") ///
 ctitles("" "`lab1'" "`lab2'" "`lab3'" "`lab4'") ///
 sdec(1) annotate(stars) asymbol(*,*) ///
 varlabels note("Cross-wave NHATS community-dwelling sample, by income group")
restore
preserve
keep if wave==1 & nwstatus<=5 & !homebound
drop group*


tab wherela, gen(group)


local rn : word count 1 `cvars1' `cvars2' `ivars1' `ivars2' `coutcomes' `coutcomes' `ioutcomes' 1 1
di `rn'
mat tab1=J(`rn',4,.)
mat stars=J(`rn',4,0)
local r=1
local c=1
forvalues i=1/4 {
	foreach round in 1 2 {
		foreach x of local cvars`round' {
			qui sum `x' if group`i'==1 [aw=anfin]
			mat tab1[`r',`c']=r(mean)
/*			if inlist("`i'","a","b","c") {
				qui ttest `x' if group`i'==1 | criteria_none==1, by(group`i')
				mat stars[`r',`c']=(r(p)<.01) + (r(p)<.05)
}*/
			local r=`r'+1
}
		foreach x of local ivars`round' {
			qui sum `x' if group`i'==1 [aw=anfin]
			mat tab1[`r',`c']=r(mean)*100
	/*		if inlist("`i'","a","b","c") {
				qui tab `x' group`i' if group`i'==1 | criteria_none==1, chi2
				mat stars[`r',`c']=(r(p)<.01) + (r(p)<.05)
}*/
			local r=`r'+1
}
}
	local r=`r'+1

	
	foreach x of local coutcomes {
		qui sum `x' if group`i'==1,d
		mat tab1[`r',`c']=r(mean)
	/*	if inlist("`i'","a","b","c") {
			qui ttest `x' if group`i'==1 | criteria_none==1, by(group`i')
			mat stars[`r',`c']=(r(p)<.01) + (r(p)<.05)
}*/
		local r=`r'+1
*		if "`x'"=="tot_paid_by_mc_12m_wi_n0" {
			qui sum `x' if group`i'==1,d
			mat tab1[`r',`c']=r(p50)
			local r=`r'+1
*}
}
	foreach x of local ioutcomes {
		qui sum `x' if group`i'==1
		mat tab1[`r',`c']=r(mean)*100
	/*		if inlist("`i'","a","b","c") {
				qui tab `x' group`i' if group`i'==1 | criteria_none==1, chi2
				mat stars[`r',`c']=(r(p)<.01) + (r(p)<.05)
}*/
			local r=`r'+1
}
	qui sum n if group`i'==1 [aw=anfin]
	
	mat tab1[`r',`c']=r(N)
	mat tab1[`r'+1,`c']=r(sum)
	local r=1
	local c=`c'+1
}

foreach x in `coutcomes' {
local rnames `rnames' "`x'" "Median"
}

mat rownames tab1=`cvars1' `ivars1' `cvars2' `ivars2' "_" N "Estimate"

frmttable using sample_characteristics.doc, addtable statmat(tab1) ///
 title("Sample Characteristics by future homebound status") ///
 ctitles("" "Never Homebound or NH res" "Future HB" "Furture NH" "Future HB, then NH") ///
 sdec(1) annotate(stars) asymbol(*,*) ///
 varlabels note("Wave 1 community-dwelling sample, by ultimate homebound status" ///
 "Excludes those Lost to Follow up or dead prior to wave 2")

 restore
preserve
keep if status==1 & wave==1 & nwstatus<=5
tab wherela, gen(whereland)
forvalues i=1/4 {
local lab : label wherelandgroup `i'
label var whereland`i' "`lab'"
}

local ivars2 inccat1 inccat2 inccat3 inccat4 whereland1 whereland2 whereland3 ///
whereland4 proxy  ///
medicaid medigap srh_fp adl_eat_help adl_bath_help adl_toil_help adl_dres_help ///
adl_ins_help adl_bed_help adl_impair iadl_impair ///
sr_ami_ever sr_stroke_ever sr_cancer_ever sr_hip_ever sr_heart_dis_ever ///
sr_htn_ever sr_ra_ever sr_osteoprs_ever sr_diabetes_ever sr_lung_dis_ever ///
prob_dementia dem_2_cat adl_diff_ind adl_independent inchbnextwave incnhnextwave 

local rn : word count 1 `cvars1' `cvars2' `ivars1' `ivars2' `coutcomes' `coutcomes' `ioutcomes' 1 1
di `rn'
mat tab1=J(`rn',4,.)
mat stars=J(`rn',4,0)
local r=1
local c=1

drop group*
forvalues i=1/4 {
gen group`i'=inccat`i'
local lab`i' : var label inccat`i'
}

forvalues i=1/4 {
	foreach round in 1 2 {
		foreach x of local cvars`round' {
			qui sum `x' if group`i'==1 [aw=anfin]
			mat tab1[`r',`c']=r(mean)
/*			if inlist("`i'","a","b","c") {
				qui ttest `x' if group`i'==1 | criteria_none==1, by(group`i')
				mat stars[`r',`c']=(r(p)<.01) + (r(p)<.05)
}*/
			local r=`r'+1
}
		foreach x of local ivars`round' {
			qui sum `x' if group`i'==1 [aw=anfin]
			mat tab1[`r',`c']=r(mean)*100
	/*		if inlist("`i'","a","b","c") {
				qui tab `x' group`i' if group`i'==1 | criteria_none==1, chi2
				mat stars[`r',`c']=(r(p)<.01) + (r(p)<.05)
}*/
			local r=`r'+1
}
}
	local r=`r'+1

	
	foreach x of local coutcomes {
		qui sum `x' if group`i'==1,d
		mat tab1[`r',`c']=r(mean)
	/*	if inlist("`i'","a","b","c") {
			qui ttest `x' if group`i'==1 | criteria_none==1, by(group`i')
			mat stars[`r',`c']=(r(p)<.01) + (r(p)<.05)
}*/
		local r=`r'+1
*		if "`x'"=="tot_paid_by_mc_12m_wi_n0" {
			qui sum `x' if group`i'==1,d
			mat tab1[`r',`c']=r(p50)
			local r=`r'+1
*}
}
	foreach x of local ioutcomes {
		qui sum `x' if group`i'==1
		mat tab1[`r',`c']=r(mean)*100
	/*		if inlist("`i'","a","b","c") {
				qui tab `x' group`i' if group`i'==1 | criteria_none==1, chi2
				mat stars[`r',`c']=(r(p)<.01) + (r(p)<.05)
}*/
			local r=`r'+1
}
	qui sum n if group`i'==1 [aw=anfin]
	
	mat tab1[`r',`c']=r(N)
	mat tab1[`r'+1,`c']=r(sum)
	local r=1
	local c=`c'+1
}

foreach x in `coutcomes' {
local rnames `rnames' "`x'" "Median"
}

mat rownames tab1=`cvars1' `ivars1' `cvars2' `ivars2' "_" N "Estimate"

frmttable using sample_characteristics.doc, addtable statmat(tab1) ///
 title("Sample Characteristics by Income category") ///
 ctitles("" "`lab1'" "`lab2'" "`lab3'" "`lab4'") ///
 sdec(1) annotate(stars) asymbol(*,*) ///
 varlabels note("Wave 1 community-dwelling sample, by income group")
restore
preserve

sort spid wave
by spid: drop if wave>1 & status[_n-1]!=1
xtset spid wave
drop if l.status!=1 & wave>1

local r=1
local c=2
tokenize A B C D E F G H I J K L M N O P Q R S T U V W X Y Z

putexcel set homebound_over_time.xlsx, replace
levelsof nwstatus, local(levels)
putexcel A`r'="Next-wave status among community-dwelling SPs who have never been homebound or nursing home residents" 


forvalues timethrough=1/2 {
putexcel B`=`r'+2'="Community, not homebound" C`=`r'+2'="Homebound, not incident" D`=`r'+2'="Incident homebound" ///
E`=`r'+2'="NH resident, not incident" F`=`r'+2'="Incident NH" G`=`r'+2'="Died" H`=`r'+2'="LFU" ///
I`=`r'+2'="Total Community dwelling in wave"
local r=`r'+3
forvalues i=1/4 {
	qui sum status if wave==`i' & status==1 & !missing(homebound_cat)
	local denom=r(N)
	qui putexcel A`r'="Wave `i'" A`=`r'+1'="N" A`=`r'+2'="% of non-homebound"
	local r=`r'+1
	foreach l of local levels {
		qui sum nwstatus if nwstatus==`l' & wave==`i' & status==1
		qui putexcel ``c''`r'=(r(N))
		qui putexcel ``c''`=`r'+1'=(r(N)/`denom'*100), nformat(number_d2)
		local c=`c'+1
}
	putexcel ``c''`r'=`denom'
	local r=`r'+3
	local c=2
}
restore
preserve
replace status=1 if status==4
local r=`r'+4
putexcel A`r'="Next-wave status among all community-dwelling SPs" 
}




restore
label var educ_hs_ind "Education: HS+"
preserve
log using homebound_income_cox_log.txt, text replace
drop if missing(homebound_cat) & !nhres
by spid, sort: egen lastwave=max(wave)
keep if wave==1
tab lastwave
keep if inrange(homebound_cat,2,4)
gen time=lastwave
gen first_hb_or_nh=firsthb
replace first_hb=firstnh if firstnh<firsthb
replace time=first_hb_or_nh if !missing(first_hb_or_nh)
gen everhb=!missing(firsthb)
tab everhb
gen ind_helper_any=n_helpers>0
label var ind_helper_any "Any helpers"
gen evernh=!missing(firstnh)
gen dies=!missing(death_date)
gen ultimate=everhb==1
replace ultimate=2 if evernh==1 & !ultimate
replace ultimate=3 if !missing(death_date) & !ultimate
stset time, failure(everhb)
sts graph, by(income_cat)
graph save km_hb, replace
graph export km_hb.pdf, replace
local vars i.agecat i.income_cat female black hisp married educ_hs_ind  ///
prob_dem adl_diff_ind srh_fp ind_helper_any ind_paid_helper metro_ind

stcox `vars'

qui outreg, ctitles("" "Homebound") varlabels or
gen timenh=firstnh
replace timenh=lastwave if missing(firstnh)
stset timenh, failure(evernh)
sts graph, by(income_cat)
graph save km_nh, replace
graph export km_nh.pdf, replace
local vars i.agecat i.income_cat female black hisp married educ_hs_ind  ///
prob_dem adl_diff_ind srh_fp ind_helper_any ind_paid_helper metro_ind

stcox `vars'

qui outreg, merge ctitles("" "Nursing home") varlabels or

gen either=everhb==1 | evernh==1
stset time, failure(either)
sts graph, by(income_cat)
graph save km_either, replace
graph export km_either.pdf, replace
local vars i.agecat i.income_cat female black hisp married educ_hs_ind  ///
prob_dem adl_diff_ind srh_fp ind_helper_any ind_paid_helper metro_ind

stcox `vars'

qui outreg using homebound_income_cox_models, merge ctitles("" "HB or NH") varlabels or ///
title(Cox proportional hazard models)



H="updated for 7/14"
clear all
set more off
capture log close


use "E:\nhats\data\NHATS Public\round_1\NHATS_Round_1_SP_File.dta", clear
foreach x of varlist ew* {
	replace `x'=. if `x'<0
}

gen creditdebt=inlist(ew1pycredbal,2,3) | !missing(ew1crecardeb) if ///
 !missing(ew1pycredbal) | !missing(ew1crecardeb)
rename ew1credcdmed medcreditdebt
rename ew1medpaovtm medbillsovertime
gen medpaynotcash=medbillsovertime==1 | medcreditdebt==1 if !missing(medbillsovertime) | ///
!missing(medcreditdebt)

rename ew1finhlpfam finhlpfam
rename ew1fingftfam fingftfam
gen govtasst=ew1progneed1==1 | ew1progneed2==1 | ew1progneed3==1 if !missing(ew1progneed1) ///
| !missing(ew1progneed2) | !missing(ew1progneed3)
drop hp1* ew1*
label var creditdebt "Has credit card debt or does not pay off in full monthly"
label var medpaynotcash "Has medical credit card debt or pays bills over time"
label var govtasst "Receives foodstamps or other food or gas/energy assistance"
keep spid creditdebt medpaynotcash govtasst
gen wave=1
tempfile t1
save `t1'

cd "E:\nhats\data\projects\Homebound\logs"
use "E:\nhats\data\NHATS cleaned\sp_round_1_5.dta" if year==2011 & lml==0, clear
merge 1:1 spid wave using `t1', nogen keep(match master)


xtset spid wave
replace homebound_cat=. if nhres==1
gen homebound=homebound==1 if !missing(homebound) & !nhres
gen hbw=wave if homebound==1
gen nhw=wave if nhres==1
by spid, sort: egen firsthb=min(hbw)
by spid, sort: egen firstnh=min(nhw)
gen everhb=!missing(firsthb)
gen evernh=!missing(firstnh)
label var everhb "Ever HB"
label var evernh "Ever NH"
*drop if firsthb==1 | missing(homebou)
by spid: gen hbnextwave=homebound[_n+1]
by spid: gen nhnextwave=nhres[_n+1]
gen inchbnextwave=firsthb==wave+1 & homebound==0
gen incnhnextwave=firstnh==wave+1 & nhres==0
replace adl_diff_ind=1 if adl_impair==1
label var adl_diff_ind "ADL difficulty or impairment"

gen wherelandgroup=1 if missing(firsthb) & missing(firstnh)
replace wherelandgroup=2 if !missing(firsthb) 
replace wherelandgroup=3 if !missing(firstnh) 
replace wherelandgroup=4 if !missing(firstnh) & firsthb<firstnh
label define wherelandgroup 1 "Never homebound or NH resident" 2 "Future HB" ///
3 "Future NH resident" 4 "Homebound, then NH"
label values wherelandgroup wherelandgroup

sort spid wave
by spid: drop if nhres[_n-1]==1 
by spid: drop if homebound_cat[_n-1]==. & wave!=1


gen nwstatus=.
forvalues i=1/4 {
replace nwstatus=r`=`i'+1'status if wave==`i'
}
tab nwstat
tab r2status
replace nwstatus=1 if inlist(nwstatus,60,63) & !missing(hbne)
replace nwstatus=4 if inlist(nwstatus,61)
replace nwstatus=6 if inlist(nwstatus,62,86)
replace nwstatus=7 if nwstatus>7
replace nwstatus=6 if died_12==1 & nwstatus==7
label define nwstatus 1 "Community, not homebound" 2 "Homebound, not incident" ///
3 "Incident homebound" 4 "NH Resident, not incident" ///
5 "Incident NH" 6 "Died" 7 "LFU"
label values nwstatus nwstatus
replace nwstatus=2 if hbne==1
replace nwstatus=3 if inchb==1
replace nwstat=4 if nhne==1
replace nwstat=5 if incnhne==1
label var nwstat "Status next wave"
replace died_12=0 if nwstatus<=5
label var died_12 "Died prior to next wave"

gen sr_cond_cat=1 if sr_numcond<2
replace sr_cond_cat=2 if inrange(sr_numcond,2,4)
replace sr_cond_cat=3 if inrange(sr_numcond,5,15)
label define sr_cond_cat 1 "0-1 SR condition" 2 "2-4 SR conditions" 3 "5+ SR conditions"
label values sr_cond_cat sr_cond_cat
tab sr_cond_cat, gen(sr_cond_cat)
forvalues i=1/3 {
local lab: label sr_cond_cat `i'
label var sr_cond_cat`i' "`lab'"
}

gen status=1 if sp_ivw==1 & !missing(homebound)
replace status=2 if homebound==1
replace status=3 if nhres==1
replace status=4 if status==1 & (firsthb<wave | firstnh<wave)
label define status 1 "Community, not HB" 2 "Homebound" 3 "NH resident" 4 ///
"Community, previously HB or NH resident"
label values status status
label var status "Status this wave"

tab wave nwstat if wave<=4, row
tab nwsta status if wave==1

sum aveincome
forvalues i=1/4 {
gen inccat`i'=income_cat==`i'-1
local lab : label income_cat `=`i'-1'
label var inccat`i' "Income: `lab'"
}
gen prob_dementia=dem_3==1 if !missing(dem_3)
label var prob_dementia "Probable dementia"

by spid, sort: gen persontime=_N
replace persontime=firsthb if firsthb<persontime
replace persontime=firstnh if firstnh<persontime
label var persontime "Waves contributing information"

local cvars1 age
local cvars2 persontime aveincome n_helpers n_paid_helpers tot_hrsmonth_help_i ///
tot_hrsmonth_paid_i 
local ivars1 female white black hisp other_race married educ_hs_ind proxy
local ivars2 ind_any_helpers ind_paid_helper top_quartile_help_helped ///
medicaid medigap srh_fp nhres ///
sr_ami_ever sr_stroke_ever sr_cancer_ever sr_hip_ever sr_heart_dis_ever ///
sr_htn_ever sr_ra_ever sr_osteoprs_ever sr_diabetes_ever sr_lung_dis_ever ///
prob_dementia dem_2_cat adl_diff_ind adl_independent iadl_diff_ind iadl_independent 
local ivars3 adl1 adl2 adl3 iadl1 iadl2 iadl3 adl_eat_help adl_bath_help adl_toil_help ///
adl_dres_help adl_ins_help adl_bed_help iadl_laun_help ///
iadl_shop_help iadl_meal_help iadl_bank_help iadl_meds_help ///
 reg_doc_seen sr_hosp_ind
gen lfunextwave=nwstatus==7
label var lfune "Lost to follow up prior to next wave"
local cvars1 age
local cvars2 persontime  aveincome
local ivars1 female white black hisp other_race married 
label var inchb "Incident Homebound Next Wave"
label var incnh "Incident Nursing Home Next Wave"
local ivars2 inccat1 inccat2 inccat3 inccat4 creditdebt medpaynotcash govtasst proxy  ///
medicaid medigap srh_fp adl_eat_help adl_bath_help adl_toil_help adl_dres_help ///
adl_ins_help adl_bed_help adl_impair iadl_impair ///
sr_cond_cat1 sr_cond_cat2 sr_cond_cat3 sr_ami_ever sr_stroke_ever sr_cancer_ever sr_hip_ever sr_heart_dis_ever ///
sr_htn_ever sr_ra_ever sr_osteoprs_ever sr_diabetes_ever sr_lung_dis_ever ///
prob_dementia dem_2_cat adl_diff_ind adl_independent inchbnextwave incnhnextwave ///
lfunextwave died_12 everhb evernh metro_ind
gen n=1

forvalues i=1/7 {
gen group`i'=nwstatus==`i'
}


preserve
drop group*
forvalues i=1/3 {
gen group`i'=status==`i'
}
tab nwstatus,gen(nw)
levelsof nwstatus, local(levels)

foreach l of local levels {
local lab : label nwstatus `l'
label var nw`l' "`lab'"
local nw `nw' nw`l'
}

keep if wave==1
gen group_all=1
local rn : word count 1 `cvars1' `cvars2' `ivars1' `ivars2' `coutcomes' `coutcomes' `ioutcomes' 1 1
di `rn'
mat tab1=J(`rn',8,.)
mat stars=J(`rn',8,0)
local r=1
local c=1
foreach i in _all 1 2 3 {
	foreach round in 1 2 {
		foreach x of local cvars`round' {
			qui sum `x' if group`i'==1  [aw=anfin]
			mat tab1[`r',`c']=r(mean)
			if inlist("`i'","2","4") {
				svy: reg `x' group`i' if group`i'==1 | group1==1
				test
				mat tab1[`r',`c'+1]=r(p)
				mat stars[`r',`c'+1]=(r(p)<.05)+(r(p)<.01)
}
			local r=`r'+1
}
		foreach x of local ivars`round' {
			qui sum `x' if group`i'==1 [aw=anfin]
			mat tab1[`r',`c']=r(mean)*100
			if inlist("`i'","2","4") {
				mat tab1[`r',`c'+1]=r(p)
				mat stars[`r',`c'+1]=(r(p)<.05)+(r(p)<.01)
}
			local r=`r'+1
}
}
	local r=`r'+1

	
	foreach x of local coutcomes {
		qui sum `x' if group`i'==1 [aw=anfin],d
		mat tab1[`r',`c']=r(mean)
		if inlist("`i'","2","4") {
				svy: reg `x' group`i' if group`i'==1 | group1==1
				test
				mat tab1[`r',`c'+1]=r(p)
				mat stars[`r',`c'+1]=(r(p)<.05)+(r(p)<.01)
}
		local r=`r'+1
*		if "`x'"=="tot_paid_by_mc_12m_wi_n0" {
			qui sum `x' if group`i'==1 [aw=anfin],d 
			mat tab1[`r',`c']=r(p50)
			local r=`r'+1
*}
}
	foreach x of local ioutcomes {
		qui sum `x' if group`i'==1 [aw=anfin]
		mat tab1[`r',`c']=r(mean)*100
			if inlist("`i'","2","4") {
				svy: tab `x' group`i' if group`i'==1 | group1==1
				mat tab1[`r',`c'+1]=e(p_Pear)
				mat stars[`r',`c'+1]=(e(p_Pear)<.05)+(e(p_Pear)<.01)
}
			local r=`r'+1
}
	qui sum n if group`i'==1 [aw=anfin]
	mat tab1[`r',`c']=r(N)
	mat tab1[`r'+1,`c']=r(sum)
	local r=1
	local c=`c'+2
}

foreach x in `coutcomes' {
local rnames `rnames' "`x'" "Median"
}

mat rownames tab1=`cvars1' `ivars1' `cvars2' `ivars2' "_" N "Estimate"

frmttable using sample_characteristics.doc, replace statmat(tab1) ///
 title("Sample Characteristics by Status at Wave") ///
 ctitles("" "All" "" "Community" "" "Homebound" "P-value" "Nursing Home" "P-value") ///
 sdec(2) annotate(stars) asymbol(*,*) ///
 varlabels note("Wave 1 NHATS sample")
 restore
 
 /*
preserve
keep if status==1
local rn : word count 1 `cvars1' `cvars2' `ivars1' `ivars2' `coutcomes' `coutcomes' `ioutcomes' 1 1
di `rn'
mat tab1=J(`rn',7,.)
mat stars=J(`rn',5,0)
local r=1
local c=1
forvalues i=1/7 {
	foreach round in 1 2 {
		foreach x of local cvars`round' {
			qui sum `x' if group`i'==1 [aw=anfin]
			mat tab1[`r',`c']=r(mean)
			if inlist("`i'","2","3","4") {
				qui ttest `x' if group`i'==1 | group1==1, by(group`i')
				mat stars[`r',`c']=(r(p)<.01) + (r(p)<.05)
}
			local r=`r'+1
}
		foreach x of local ivars`round' {
			qui sum `x' if group`i'==1 [aw=anfin]
			mat tab1[`r',`c']=r(mean)*100
			if inlist("`i'","2","3","4") {
				svy: tab `x' group`i' if group`i'==1 | group1==1
				mat stars[`r',`c']=(r(p)<.01) + (r(p)<.05)
}
			local r=`r'+1
}
}
	local r=`r'+1

	
	foreach x of local coutcomes {
		qui sum `x' if group`i'==1,d
		mat tab1[`r',`c']=r(mean)
		if inlist("`i'","2","3","4") {
			qui ttest `x' if group`i'==1 | group1==1, by(group`i')
			mat stars[`r',`c']=(r(p)<.01) + (r(p)<.05)
}
		local r=`r'+1
*		if "`x'"=="tot_paid_by_mc_12m_wi_n0" {
			qui sum `x' if group`i'==1,d
			mat tab1[`r',`c']=r(p50)
			local r=`r'+1
*}
}
	foreach x of local ioutcomes {
		qui sum `x' if group`i'==1
		mat tab1[`r',`c']=r(mean)*100
			if inlist("`i'","2","3","4") {
				svy: tab `x' group`i' if group`i'==1 | group1==1
				mat stars[`r',`c']=(r(p)<.01) + (r(p)<.05)
}
			local r=`r'+1
}
	qui sum n if group`i'==1 [aw=anfin]
	
	mat tab1[`r',`c']=r(N)
	mat tab1[`r'+1,`c']=r(sum)
	local r=1
	local c=`c'+1
}

foreach x in `coutcomes' {
local rnames `rnames' "`x'" "Median"
}

mat rownames tab1=`cvars1' `ivars1' `cvars2' `ivars2' "_" N "Estimate"

frmttable using sample_characteristics.doc, addtable statmat(tab1) ///
 title("Sample Characteristics by next wave status") ///
 ctitles("" "Community" "HB, Not Incident" "Incident HB" "NH, Not Incident" "Incident NH" ///
 "Died" "LFU") ///
 sdec(2) annotate(stars) asymbol(*,*) ///
 varlabels note("Cross-wave NHATS community-dwelling sample, by next-wave status")

restore
preserve
keep if status==1
local rn : word count 1 `cvars1' `cvars2' `ivars1' `ivars2' `coutcomes' `coutcomes' `ioutcomes' 1 1
di `rn'
mat tab1=J(`rn',4,.)
mat stars=J(`rn',4,0)
local r=1
local c=1

drop group*
forvalues i=1/4 {
gen group`i'=inccat`i'
local lab`i' : var label inccat`i'
}

forvalues i=1/4 {
	foreach round in 1 2 {
		foreach x of local cvars`round' {
			qui sum `x' if group`i'==1 [aw=anfin]
			mat tab1[`r',`c']=r(mean)
			if inlist("`i'","2","3","4") {
				qui ttest `x' if group`i'==1 | group1==1, by(group`i')
				mat stars[`r',`c']=(r(p)<.01) + (r(p)<.05)
}
			local r=`r'+1
}
		foreach x of local ivars`round' {
			qui sum `x' if group`i'==1 [aw=anfin]
			mat tab1[`r',`c']=r(mean)*100
			if inlist("`i'","2","3","4") {
				svy: tab `x' group`i' if group`i'==1 | group1==1
				mat stars[`r',`c']=(r(p)<.01) + (r(p)<.05)
}
			local r=`r'+1
}
}
	local r=`r'+1

	
	foreach x of local coutcomes {
		qui sum `x' if group`i'==1,d
		mat tab1[`r',`c']=r(mean)
		if inlist("`i'","2","3","4") {
			qui ttest `x' if group`i'==1 | group1==1, by(group`i')
			mat stars[`r',`c']=(r(p)<.01) + (r(p)<.05)
}
		local r=`r'+1
*		if "`x'"=="tot_paid_by_mc_12m_wi_n0" {
			qui sum `x' if group`i'==1,d
			mat tab1[`r',`c']=r(p50)
			local r=`r'+1
*}
}
	foreach x of local ioutcomes {
		qui sum `x' if group`i'==1
		mat tab1[`r',`c']=r(mean)*100
			if inlist("`i'","2","3","4") {
				svy: tab `x' group`i' if group`i'==1 | group1==1
				mat stars[`r',`c']=(r(p)<.01) + (r(p)<.05)
}
			local r=`r'+1
}
	qui sum n if group`i'==1 [aw=anfin]
	
	mat tab1[`r',`c']=r(N)
	mat tab1[`r'+1,`c']=r(sum)
	local r=1
	local c=`c'+1
}

foreach x in `coutcomes' {
local rnames `rnames' "`x'" "Median"
}

mat rownames tab1=`cvars1' `ivars1' `cvars2' `ivars2' "_" N "Estimate"

frmttable using sample_characteristics.doc, addtable statmat(tab1) ///
 title("Sample Characteristics by Income category") ///
 ctitles("" "`lab1'" "`lab2'" "`lab3'" "`lab4'") ///
 sdec(2) annotate(stars) asymbol(*,*) ///
 varlabels note("Cross-wave NHATS community-dwelling sample, by income group")
restore*/





preserve
drop group*
keep if status==1 & wave==1 & nwstatus<=5
replace wherela=2 if wherela==4
tab wherela, gen(group)
forvalues i=1/3 {
local lab : label wherelandgroup `i'
label var group`i' "`lab'"
}

local rn : word count 1 `cvars1' `cvars2' `ivars1' `ivars2' `coutcomes' `coutcomes' `ioutcomes' 1 1
di `rn'
mat tab1=J(`rn',6,.)
mat stars=J(`rn',6,0)
local r=1
local c=1
forvalues i=1/3 {
	foreach round in 1 2 {
		foreach x of local cvars`round' {
			qui sum `x' if group`i'==1 [aw=anfin]
			mat tab1[`r',`c']=r(mean)
			if inlist("`i'","2","3","4") {
				svy: reg `x' group`i' if group`i'==1 | group1==1
				test
				mat tab1[`r',`c'+1]=r(p)
				mat stars[`r',`c'+1]=(r(p)<.05)+(r(p)<.01)
}
			local r=`r'+1
}
		foreach x of local ivars`round' {
			qui sum `x' if group`i'==1 [aw=anfin]
			mat tab1[`r',`c']=r(mean)*100
			if inlist("`i'","2","3","4") {
				svy: tab `x' group`i' if group`i'==1 | group1==1
				mat tab1[`r',`c'+1]=e(p_Pear)
				mat stars[`r',`c'+1]=(e(p_Pear)<.05)+(e(p_Pear)<.01)
}
			local r=`r'+1
}
}
	local r=`r'+1

	
	foreach x of local coutcomes {
		qui sum `x' if group`i'==1,d
		mat tab1[`r',`c']=r(mean)
		if inlist("`i'","2","3","4") {
				svy: reg `x' group`i' if group`i'==1 | group1==1
				test
				mat tab1[`r',`c'+1]=r(p)
				mat stars[`r',`c'+1]=(r(p)<.05)+(r(p)<.01)
}
		local r=`r'+1
*		if "`x'"=="tot_paid_by_mc_12m_wi_n0" {
			qui sum `x' if group`i'==1,d
			mat tab1[`r',`c']=r(p50)
			local r=`r'+1
*}
}
	foreach x of local ioutcomes {
		qui sum `x' if group`i'==1
		mat tab1[`r',`c']=r(mean)*100
			if inlist("`i'","2","3") {
				svy: tab `x' group`i' if group`i'==1 | group1==1
				mat tab1[`r',`c'+1]=e(p_Pear)
				mat stars[`r',`c'+1]=(e(p_Pear)<.05)+(e(p_Pear)<.01)
}
			local r=`r'+1
}
	qui sum n if group`i'==1 [aw=anfin]
	
	mat tab1[`r',`c']=r(N)
	mat tab1[`r'+1,`c']=r(sum)
	local r=1
	local c=`c'+2
}

foreach x in `coutcomes' {
local rnames `rnames' "`x'" "Median"
}

mat rownames tab1=`cvars1' `ivars1' `cvars2' `ivars2' "_" N "Estimate"

frmttable using sample_characteristics.doc, addtable statmat(tab1) ///
 title("Sample Characteristics by future homebound status") ///
 ctitles("" "Never Homebound or NH res" "" "Future HB" "P-value" "Future NH" "P-value") ///
 sdec(2) annotate(stars) asymbol(*,*) ///
 varlabels note("Wave 1 community-dwelling sample, by ultimate homebound status" ///
 "Excludes those Lost to Follow up or dead prior to wave 2" ///
 "Future status evaluated at HB or NH, or final wave prior to dropout/wave 5")

restore
replace wherela=2 if wherela==4
preserve
tab wherela, gen(whereland)
forvalues i=1/3 {
local lab : label wherelandgroup `i'
label var whereland`i' "`lab'"
}
keep if status==1 & wave==1

local ivars2 inccat1 inccat2 inccat3 inccat4 creditdebt medpaynotcash govtasst ///
 whereland1 whereland2 whereland3 proxy  ///
medicaid medigap srh_fp adl_eat_help adl_bath_help adl_toil_help adl_dres_help ///
adl_ins_help adl_bed_help adl_impair iadl_impair ///
sr_cond_cat1 sr_cond_cat2 sr_cond_cat3 sr_ami_ever sr_stroke_ever sr_cancer_ever sr_hip_ever sr_heart_dis_ever ///
sr_htn_ever sr_ra_ever sr_osteoprs_ever sr_diabetes_ever sr_lung_dis_ever ///
prob_dementia dem_2_cat adl_diff_ind adl_independent inchbnextwave incnhnextwave ///
died_12 lfunextwave everhb evernh metro_ind

local rn : word count 1 `cvars1' `cvars2' `ivars1' `ivars2' `coutcomes' `coutcomes' `ioutcomes' 1 1
di `rn'
mat tab1=J(`rn',8,.)
mat stars=J(`rn',8,0)
local r=1
local c=1

drop group*
forvalues i=1/4 {
gen group`i'=inccat`i'
local lab`i' : var label inccat`i'
}

forvalues i=1/4 {
	foreach round in 1 2 {
		foreach x of local cvars`round' {
			qui sum `x' if group`i'==1 [aw=anfin]
			mat tab1[`r',`c']=r(mean)
			if inlist("`i'","2","3","4") {
				svy: reg `x' group`i' if group`i'==1 | group1==1
				test
				mat tab1[`r',`c'+1]=r(p)
				mat stars[`r',`c'+1]=(r(p)<.05)+(r(p)<.01)
}
			local r=`r'+1
}
		foreach x of local ivars`round' {
			qui sum `x' if group`i'==1 [aw=anfin]
			mat tab1[`r',`c']=r(mean)*100
			if inlist("`i'","2","3","4") {
				svy: tab `x' group`i' if group`i'==1 | group1==1
				mat tab1[`r',`c'+1]=e(p_Pear)
				mat stars[`r',`c'+1]=(e(p_Pear)<.05)+(e(p_Pear)<.01)
}
			local r=`r'+1
}
}
	local r=`r'+1

	
	foreach x of local coutcomes {
		qui sum `x' if group`i'==1,d
		mat tab1[`r',`c']=r(mean)
		if inlist("`i'","2","3","4") {
				svy: reg `x' group`i' if group`i'==1 | group1==1
				test
				mat tab1[`r',`c'+1]=r(p)
				mat stars[`r',`c'+1]=(r(p)<.05)+(r(p)<.01)
}
		local r=`r'+1
*		if "`x'"=="tot_paid_by_mc_12m_wi_n0" {
			qui sum `x' if group`i'==1,d
			mat tab1[`r',`c']=r(p50)
			local r=`r'+1
*}
}
	foreach x of local ioutcomes {
		qui sum `x' if group`i'==1
		mat tab1[`r',`c']=r(mean)*100
			if inlist("`i'","2","3","4") {
				svy: tab `x' group`i' if group`i'==1 | group1==1
				mat tab1[`r',`c'+1]=e(p_Pear)
				mat stars[`r',`c'+1]=(e(p_Pear)<.05)+(e(p_Pear)<.01)
}
			local r=`r'+1
}
	qui sum n if group`i'==1 [aw=anfin]
	
	mat tab1[`r',`c']=r(N)
	mat tab1[`r'+1,`c']=r(sum)
	local r=1
	local c=`c'+2
}

foreach x in `coutcomes' {
local rnames `rnames' "`x'" "Median"
}

mat rownames tab1=`cvars1' `ivars1' `cvars2' `ivars2' "_" N "Estimate"

frmttable using sample_characteristics.doc, addtable statmat(tab1) ///
 title("Sample Characteristics by Income category") ///
 ctitles("" "`lab1'" "" "`lab2'" "P-value" "`lab3'" "P-value" "`lab4'" "P-value") ///
 sdec(2) annotate(stars) asymbol(*,*) ///
 varlabels note("Wave 1 community-dwelling sample, by income group")
restore
preserve
keep if status==1 & wave==1 & nwstatus<=5
tab wherela, gen(whereland)
forvalues i=1/3 {
local lab : label wherelandgroup `i'
label var whereland`i' "`lab'"
}


local rn : word count 1 `cvars1' `cvars2' `ivars1' `ivars2' `coutcomes' `coutcomes' `ioutcomes' 1 1
di `rn'
mat tab1=J(`rn',8,.)
mat stars=J(`rn',8,0)
local r=1
local c=1

drop group*
forvalues i=1/4 {
gen group`i'=inccat`i'
local lab`i' : var label inccat`i'
}

forvalues i=1/4 {
	foreach round in 1 2 {
		foreach x of local cvars`round' {
			qui sum `x' if group`i'==1 [aw=anfin]
			mat tab1[`r',`c']=r(mean)
			if inlist("`i'","2","3","4") {
				svy: reg `x' group`i' if group`i'==1 | group1==1
				test
				mat tab1[`r',`c'+1]=r(p)
				mat stars[`r',`c'+1]=(r(p)<.05)+(r(p)<.01)
}
			local r=`r'+1
}
		foreach x of local ivars`round' {
			qui sum `x' if group`i'==1 [aw=anfin]
			mat tab1[`r',`c']=r(mean)*100
			if inlist("`i'","2","3","4") {
				svy: tab `x' group`i' if group`i'==1 | group1==1
				mat tab1[`r',`c'+1]=e(p_Pear)
				mat stars[`r',`c'+1]=(e(p_Pear)<.05)+(e(p_Pear)<.01)
}
			local r=`r'+1
}
}
	local r=`r'+1

	
	foreach x of local coutcomes {
		qui sum `x' if group`i'==1,d
		mat tab1[`r',`c']=r(mean)
		if inlist("`i'","2","3","4") {
				svy: reg `x' group`i' if group`i'==1 | group1==1
				test
				mat tab1[`r',`c'+1]=r(p)
				mat stars[`r',`c'+1]=(r(p)<.05)+(r(p)<.01)
}
		local r=`r'+1
*		if "`x'"=="tot_paid_by_mc_12m_wi_n0" {
			qui sum `x' if group`i'==1,d
			mat tab1[`r',`c']=r(p50)
			local r=`r'+1
*}
}
	foreach x of local ioutcomes {
		qui sum `x' if group`i'==1
		mat tab1[`r',`c']=r(mean)*100
			if inlist("`i'","2","3","4") {
				svy: tab `x' group`i' if group`i'==1 | group1==1
				mat tab1[`r',`c'+1]=e(p_Pear)
				mat stars[`r',`c'+1]=(e(p_Pear)<.05)+(e(p_Pear)<.01)
}
			local r=`r'+1
}
	qui sum n if group`i'==1 [aw=anfin]
	
	mat tab1[`r',`c']=r(N)
	mat tab1[`r'+1,`c']=r(sum)
	local r=1
	local c=`c'+2
}

foreach x in `coutcomes' {
local rnames `rnames' "`x'" "Median"
}

mat rownames tab1=`cvars1' `ivars1' `cvars2' `ivars2' "_" N "Estimate"

frmttable using sample_characteristics.doc, addtable statmat(tab1) ///
 title("Sample Characteristics by Income category") ///
 ctitles("" "`lab1'" "" "`lab2'" "P-value" "`lab3'" "P-value" "`lab4'" "P-value") ///
 sdec(2) annotate(stars) asymbol(*,*) ///
 varlabels note("Wave 1 community-dwelling sample, by income group" ///
 "Excluding those LFU or dead prior to wave 2")
restore
preserve

sort spid wave
by spid: drop if wave>1 & status[_n-1]!=1
xtset spid wave
drop if l.status!=1 & wave>1

local r=1
local c=2
tokenize A B C D E F G H I J K L M N O P Q R S T U V W X Y Z

putexcel set homebound_over_time.xlsx, replace
levelsof nwstatus, local(levels)
putexcel A`r'="Next-wave status among community-dwelling SPs who have never been homebound or nursing home residents" 


forvalues timethrough=1/2 {
putexcel B`=`r'+2'="Community, not homebound" C`=`r'+2'="Homebound, not incident" D`=`r'+2'="Incident homebound" ///
E`=`r'+2'="NH resident, not incident" F`=`r'+2'="Incident NH" G`=`r'+2'="Died" H`=`r'+2'="LFU" ///
I`=`r'+2'="Total Community dwelling in wave"
local r=`r'+3
forvalues i=1/4 {
	qui sum status if wave==`i' & status==1 & !missing(homebound_cat)
	local denom=r(N)
	qui putexcel A`r'="Wave `i'" A`=`r'+1'="N" A`=`r'+2'="% of non-homebound"
	local r=`r'+1
	foreach l of local levels {
		qui sum nwstatus if nwstatus==`l' & wave==`i' & status==1
		qui putexcel ``c''`r'=(r(N))
		qui putexcel ``c''`=`r'+1'=(r(N)/`denom'*100), nformat(number_d2)
		local c=`c'+1
}
	putexcel ``c''`r'=`denom'
	local r=`r'+3
	local c=2
}
restore
preserve
replace status=1 if status==4
local r=`r'+4
putexcel A`r'="Next-wave status among all community-dwelling SPs" 
}




restore
label var educ_hs_ind "Education: HS+"
preserve
log using homebound_income_cox_log.txt, text replace
drop if missing(homebound_cat) & !nhres
by spid, sort: egen lastwave=max(wave)
keep if wave==1
tab lastwave
keep if inrange(homebound_cat,2,4)
gen time=lastwave
gen first_hb_or_nh=firsthb
replace first_hb=firstnh if firstnh<firsthb
replace time=first_hb_or_nh if !missing(first_hb_or_nh)

gen ind_helper_any=n_helpers>0
label var ind_helper_any "Any helpers"
gen dies=!missing(death_date)
gen ultimate=everhb==1
replace ultimate=2 if evernh==1 & !ultimate
replace ultimate=3 if !missing(death_date) & !ultimate
stset time, failure(everhb)
sts graph, by(income_cat)
graph save km_hb, replace
graph export km_hb.pdf, replace

forvalues i=1/6 {
local lab : label r1d2intvrage `i'
label define agecat `i' "`lab'", modify
}


foreach x in agecat income_cat {
levelsof `x', local(levels)
foreach l of local levels {
	gen `x'`l'=`x'==`l'
	local lab : label `x' `l'
	label var `x'`l' "`lab'"
}
}

forvalues i=2/6 {
	local age `age' agecat`i'
}

forvalues i=1/3 {
	local inc `inc' income_cat`i'
}

local cond sr_cond_cat2 sr_cond_cat3

local vars `age' `inc' female black hisp married educ_hs_ind  ///
medicaid prob_dem `cond' adl_diff_ind srh_fp ind_helper_any ind_paid_helper metro_ind

svy: stcox `vars' //, nohr mgale(mg)
stcoxkm. by(income_cat)
stphplot, by(income_cat) adjust(`age'  female black hisp married educ_hs_ind  ///
medicaid prob_dem `cond' adl_diff_ind srh_fp ind_helper_any ind_paid_helper metro_ind)
stphplot, by(income_cat)
qui outreg, ctitles("" "Homebound") varlabels stats(e_b p)
gen timenh=firstnh
replace timenh=lastwave if missing(firstnh)
stset timenh, failure(evernh)
sts graph, by(income_cat)
graph save km_nh, replace
graph export km_nh.pdf, replace


svy: stcox `vars'

qui outreg, merge ctitles("" "Nursing home") varlabels stats(e_b p)

gen either=everhb==1 | evernh==1
stset time, failure(either)
sts graph, by(income_cat)
graph save km_either, replace
graph export km_either.pdf, replace

local vars `age' `inc' female black hisp married educ_hs_ind  ///
medicaid prob_dem `cond' adl_diff_ind srh_fp ind_helper_any ind_paid_helper metro_ind

svy: stcox `vars'

qui outreg using homebound_income_cox_models, merge ctitles("" "HB or NH") varlabels or ///
title(Cox proportional hazard models) stats(e_b p)

predict p 
sum `vars' if missing(p)


H="updated to include wave 6 and run logistic regressions"
clear all
set more off
capture log close


use "E:\nhats\data\NHATS Public\round_1\NHATS_Round_1_SP_File.dta", clear
foreach x of varlist ew* {
	replace `x'=. if `x'<0
}

gen creditdebt=inlist(ew1pycredbal,2,3) | !missing(ew1crecardeb) if ///
 !missing(ew1pycredbal) | !missing(ew1crecardeb)
rename ew1credcdmed medcreditdebt
rename ew1medpaovtm medbillsovertime
gen medpaynotcash=medbillsovertime==1 | medcreditdebt==1 if !missing(medbillsovertime) | ///
!missing(medcreditdebt)

rename ew1finhlpfam finhlpfam
rename ew1fingftfam fingftfam
gen govtasst=ew1progneed1==1 | ew1progneed2==1 | ew1progneed3==1 if !missing(ew1progneed1) ///
| !missing(ew1progneed2) | !missing(ew1progneed3)
drop hp1* ew1*
label var creditdebt "Has credit card debt or does not pay off in full monthly"
label var medpaynotcash "Has medical credit card debt or pays bills over time"
label var govtasst "Receives foodstamps or other food or gas/energy assistance"
keep spid creditdebt medpaynotcash govtasst
gen wave=1
tempfile t1
save `t1'

cd "E:\nhats\data\projects\Homebound\logs"
use "E:\nhats\data\NHATS cleaned\sp_round_1_6.dta" if year==2011 & lml==0, clear
merge 1:1 spid wave using `t1', nogen keep(match master)

sort spid wave
*by spid: keep if prob_dem[1]==1
by spid: egen firstdem=min(cond(prob_dem==1,wave,.))
xtset spid wave
replace homebound_cat=. if nhres==1
gen homebound=homebound==1 if !missing(homebound) & !nhres
gen hbw=wave if homebound==1
gen nhw=wave if nhres==1
by spid, sort: egen firsthb=min(hbw)
by spid, sort: egen firstnh=min(nhw)
gen everhb=!missing(firsthb)
gen evernh=!missing(firstnh)
label var everhb "Ever HB"
label var evernh "Ever NH"
*drop if firsthb==1 | missing(homebou)
by spid: gen hbnextwave=homebound[_n+1]
by spid: gen nhnextwave=nhres[_n+1]
gen inchbnextwave=firsthb==wave+1 & homebound==0
gen incnhnextwave=firstnh==wave+1 & nhres==0
replace adl_diff_ind=1 if adl_impair==1
label var adl_diff_ind "ADL difficulty or impairment"

gen wherelandgroup=1 if missing(firsthb) & missing(firstnh)
replace wherelandgroup=2 if !missing(firsthb) 
replace wherelandgroup=3 if !missing(firstnh) 
replace wherelandgroup=4 if !missing(firstnh) & firsthb<firstnh
label define wherelandgroup 1 "Never homebound or NH resident" 2 "Future HB" ///
3 "Future NH resident" 4 "Homebound, then NH"
label values wherelandgroup wherelandgroup

sort spid wave
by spid: drop if nhres[_n-1]==1 
by spid: drop if homebound_cat[_n-1]==. & wave!=1


gen nwstatus=.
forvalues i=1/5 {
replace nwstatus=r`=`i'+1'status if wave==`i'
}
tab nwstat
tab r2status
replace nwstatus=1 if inlist(nwstatus,60,63) & !missing(hbne)
replace nwstatus=4 if inlist(nwstatus,61)
replace nwstatus=6 if inlist(nwstatus,62,86)
replace nwstatus=7 if nwstatus>7
replace nwstatus=6 if died_12==1 & nwstatus==7
label define nwstatus 1 "Community, not homebound" 2 "Homebound, not incident" ///
3 "Incident homebound" 4 "NH Resident, not incident" ///
5 "Incident NH" 6 "Died" 7 "LFU"
label values nwstatus nwstatus
replace nwstatus=2 if hbne==1
replace nwstatus=3 if inchb==1
replace nwstat=4 if nhne==1
replace nwstat=5 if incnhne==1
label var nwstat "Status next wave"
replace died_12=0 if nwstatus<=5
label var died_12 "Died prior to next wave"

gen northeast=region==1
gen midwest=region==2
gen south=region==3
gen west=region==4
label var northe "Northeast"
label var midw "Midwest"
label var south "South"
label var west "West"
gen sr_cond_cat=1 if sr_numcond<2
replace sr_cond_cat=2 if inrange(sr_numcond,2,4)
replace sr_cond_cat=3 if inrange(sr_numcond,5,15)
label define sr_cond_cat 1 "0-1 SR condition" 2 "2-4 SR conditions" 3 "5+ SR conditions"
label values sr_cond_cat sr_cond_cat
tab sr_cond_cat, gen(sr_cond_cat)
forvalues i=1/3 {
local lab: label sr_cond_cat `i'
label var sr_cond_cat`i' "`lab'"
}

gen status=1 if sp_ivw==1 & !missing(homebound)
replace status=2 if homebound==1
replace status=3 if nhres==1
replace status=4 if status==1 & (firsthb<wave | firstnh<wave)
label define status 1 "Community, not HB" 2 "Homebound" 3 "NH resident" 4 ///
"Community, previously HB or NH resident"
label values status status
label var status "Status this wave"

tab wave nwstat if wave<=4, row
tab nwsta status if wave==1 

sum aveincome
forvalues i=1/4 {
gen inccat`i'=income_cat==`i'-1
local lab : label income_cat `=`i'-1'
label var inccat`i' "Income: `lab'"
}
gen prob_dementia=dem_3==1 if !missing(dem_3)
label var prob_dementia "Probable dementia"

by spid, sort: gen persontime=_N
replace persontime=firsthb if firsthb<persontime
replace persontime=firstnh if firstnh<persontime
label var persontime "Waves contributing information"

local cvars1 age
local cvars2 persontime aveincome n_helpers n_paid_helpers tot_hrsmonth_help_i ///
tot_hrsmonth_paid_i 
local ivars1 female white black hisp other_race married educ_hs_ind proxy
local ivars2 ind_any_helpers ind_paid_helper top_quartile_help_helped ///
medicaid medigap srh_fp nhres ///
sr_ami_ever sr_stroke_ever sr_cancer_ever sr_hip_ever sr_heart_dis_ever ///
sr_htn_ever sr_ra_ever sr_osteoprs_ever sr_diabetes_ever sr_lung_dis_ever ///
prob_dementia dem_2_cat adl_diff_ind adl_independent iadl_diff_ind iadl_independent 
local ivars3 adl1 adl2 adl3 iadl1 iadl2 iadl3 adl_eat_help adl_bath_help adl_toil_help ///
adl_dres_help adl_ins_help adl_bed_help iadl_laun_help ///
iadl_shop_help iadl_meal_help iadl_bank_help iadl_meds_help ///
 reg_doc_seen sr_hosp_ind
gen lfunextwave=nwstatus==7
label var lfune "Lost to follow up prior to next wave"
local cvars1 age
local cvars2 persontime  aveincome
local ivars1 female white black hisp other_race married 
label var inchb "Incident Homebound Next Wave"
label var incnh "Incident Nursing Home Next Wave"
local ivars2 inccat1 inccat2 inccat3 inccat4 creditdebt medpaynotcash govtasst proxy  ///
medicaid medigap srh_fp adl_eat_help adl_bath_help adl_toil_help adl_dres_help ///
adl_ins_help adl_bed_help adl_impair iadl_impair ///
sr_cond_cat1 sr_cond_cat2 sr_cond_cat3 sr_ami_ever sr_stroke_ever sr_cancer_ever sr_hip_ever sr_heart_dis_ever ///
sr_htn_ever sr_ra_ever sr_osteoprs_ever sr_diabetes_ever sr_lung_dis_ever ///
prob_dementia dem_2_cat adl_diff_ind adl_independent inchbnextwave incnhnextwave ///
lfunextwave died_12 everhb evernh metro_ind northeast midwest south
gen n=1

forvalues i=1/7 {
gen group`i'=nwstatus==`i'
}


preserve
drop group*
forvalues i=1/3 {
gen group`i'=status==`i'
}
tab nwstatus,gen(nw)
levelsof nwstatus, local(levels)

foreach l of local levels {
local lab : label nwstatus `l'
label var nw`l' "`lab'"
local nw `nw' nw`l'
}

*keep if wave==1 
gen group_all=1
local rn : word count 1 `cvars1' `cvars2' `ivars1' `ivars2' `coutcomes' `coutcomes' `ioutcomes' 1 1
di `rn'
mat tab1=J(`rn',8,.)
mat stars=J(`rn',8,0)
local r=1
local c=1
foreach i in _all 1 2 3 {
	foreach round in 1 2 {
		foreach x of local cvars`round' {
			qui sum `x' if group`i'==1  & wave==1  [aw=anfin]
			mat tab1[`r',`c']=r(mean)
			if inlist("`i'","2","4") {
				svy, subpop(if wave==1  &group`i'==1 | group1==1): reg `x' group`i' 
				test
				mat tab1[`r',`c'+1]=r(p)
				mat stars[`r',`c'+1]=(r(p)<.05)+(r(p)<.01)
}
			local r=`r'+1
}
		foreach x of local ivars`round' {
			qui sum `x' if group`i'==1 & wave==1  [aw=anfin]
			mat tab1[`r',`c']=r(mean)*100
			if inlist("`i'","2","4") {
				svy, subpop(if wave==1  &group`i'==1 | group1==1): tab `x' group`i' 
				mat tab1[`r',`c'+1]=e(p_Pear)
				mat stars[`r',`c'+1]=(e(p_Pear)<.05)+(e(p_Pear)<.01)
}
			local r=`r'+1
}
}
	local r=`r'+1

	
	foreach x of local coutcomes {
		qui sum `x' if group`i'==1 & wave==1  [aw=anfin],d
		mat tab1[`r',`c']=r(mean)
		if inlist("`i'","2","4") {
				svy, subpop(if wave==1  &group`i'==1 | group1==1): reg `x' group`i' 
				test
				mat tab1[`r',`c'+1]=r(p)
				mat stars[`r',`c'+1]=(r(p)<.05)+(r(p)<.01)
}
		local r=`r'+1
*		if "`x'"=="tot_paid_by_mc_12m_wi_n0" {
			qui sum `x' if group`i'==1 & wave==1  [aw=anfin],d 
			mat tab1[`r',`c']=r(p50)
			local r=`r'+1
*}
}
	foreach x of local ioutcomes {
		qui sum `x' if group`i'==1 & wave==1  [aw=anfin]
		mat tab1[`r',`c']=r(mean)*100
			if inlist("`i'","2","4") {
				svy, subpop(if wave==1  &group`i'==1 | group1==1): tab `x' group`i' 
				mat tab1[`r',`c'+1]=e(p_Pear)
				mat stars[`r',`c'+1]=(e(p_Pear)<.05)+(e(p_Pear)<.01)
}
			local r=`r'+1
}
	qui sum n if group`i'==1 & wave==1  [aw=anfin]
	mat tab1[`r',`c']=r(N)
	mat tab1[`r'+1,`c']=r(sum)
	local r=1
	local c=`c'+2
}

foreach x in `coutcomes' {
local rnames `rnames' "`x'" "Median"
}

mat rownames tab1=`cvars1' `ivars1' `cvars2' `ivars2' "_" N "Estimate"

frmttable using sample_characteristics.doc, replace statmat(tab1) ///
 title("Sample Characteristics by Status at Wave") ///
 ctitles("" "All" "" "Community" "" "Homebound" "P-value" "Nursing Home" "P-value") ///
 sdec(2) annotate(stars) asymbol(*,*) ///
 varlabels note("Wave 1 NHATS sample")
 restore
 
 /*
preserve
keep if status==1
local rn : word count 1 `cvars1' `cvars2' `ivars1' `ivars2' `coutcomes' `coutcomes' `ioutcomes' 1 1
di `rn'
mat tab1=J(`rn',7,.)
mat stars=J(`rn',5,0)
local r=1
local c=1
forvalues i=1/7 {
	foreach round in 1 2 {
		foreach x of local cvars`round' {
			qui sum `x' if group`i'==1 & wave==1  [aw=anfin]
			mat tab1[`r',`c']=r(mean)
			if inlist("`i'","2","3","4") {
				qui ttest `x' if group`i'==1 | group1==1, by(group`i')
				mat stars[`r',`c']=(r(p)<.01) + (r(p)<.05)
}
			local r=`r'+1
}
		foreach x of local ivars`round' {
			qui sum `x' if group`i'==1 & wave==1  [aw=anfin]
			mat tab1[`r',`c']=r(mean)*100
			if inlist("`i'","2","3","4") {
				svy, subpop(if status==1 & wave==1  & nwstatus<=5 &group`i'==1 | group1==1): tab `x' group`i' 
				mat stars[`r',`c']=(r(p)<.01) + (r(p)<.05)
}
			local r=`r'+1
}
}
	local r=`r'+1

	
	foreach x of local coutcomes {
		qui sum `x' if group`i'==1,d
		mat tab1[`r',`c']=r(mean)
		if inlist("`i'","2","3","4") {
			qui ttest `x' if group`i'==1 | group1==1, by(group`i')
			mat stars[`r',`c']=(r(p)<.01) + (r(p)<.05)
}
		local r=`r'+1
*		if "`x'"=="tot_paid_by_mc_12m_wi_n0" {
			qui sum `x' if group`i'==1,d
			mat tab1[`r',`c']=r(p50)
			local r=`r'+1
*}
}
	foreach x of local ioutcomes {
		qui sum `x' if group`i'==1
		mat tab1[`r',`c']=r(mean)*100
			if inlist("`i'","2","3","4") {
				svy, subpop(if status==1 & wave==1  & nwstatus<=5 &group`i'==1 | group1==1): tab `x' group`i' 
				mat stars[`r',`c']=(r(p)<.01) + (r(p)<.05)
}
			local r=`r'+1
}
	qui sum n if group`i'==1 & wave==1  [aw=anfin]
	
	mat tab1[`r',`c']=r(N)
	mat tab1[`r'+1,`c']=r(sum)
	local r=1
	local c=`c'+1
}

foreach x in `coutcomes' {
local rnames `rnames' "`x'" "Median"
}

mat rownames tab1=`cvars1' `ivars1' `cvars2' `ivars2' "_" N "Estimate"

frmttable using sample_characteristics.doc, addtable statmat(tab1) ///
 title("Sample Characteristics by next wave status") ///
 ctitles("" "Community" "HB, Not Incident" "Incident HB" "NH, Not Incident" "Incident NH" ///
 "Died" "LFU") ///
 sdec(2) annotate(stars) asymbol(*,*) ///
 varlabels note("Cross-wave NHATS community-dwelling sample, by next-wave status")

restore
preserve
keep if status==1
local rn : word count 1 `cvars1' `cvars2' `ivars1' `ivars2' `coutcomes' `coutcomes' `ioutcomes' 1 1
di `rn'
mat tab1=J(`rn',4,.)
mat stars=J(`rn',4,0)
local r=1
local c=1

drop group*
forvalues i=1/4 {
gen group`i'=inccat`i'
local lab`i' : var label inccat`i'
}

forvalues i=1/4 {
	foreach round in 1 2 {
		foreach x of local cvars`round' {
			qui sum `x' if group`i'==1 & wave==1  [aw=anfin]
			mat tab1[`r',`c']=r(mean)
			if inlist("`i'","2","3","4") {
				qui ttest `x' if group`i'==1 | group1==1, by(group`i')
				mat stars[`r',`c']=(r(p)<.01) + (r(p)<.05)
}
			local r=`r'+1
}
		foreach x of local ivars`round' {
			qui sum `x' if group`i'==1 & wave==1  [aw=anfin]
			mat tab1[`r',`c']=r(mean)*100
			if inlist("`i'","2","3","4") {
				svy, subpop(if status==1 & wave==1  & nwstatus<=5 &group`i'==1 | group1==1): tab `x' group`i' 
				mat stars[`r',`c']=(r(p)<.01) + (r(p)<.05)
}
			local r=`r'+1
}
}
	local r=`r'+1

	
	foreach x of local coutcomes {
		qui sum `x' if group`i'==1,d
		mat tab1[`r',`c']=r(mean)
		if inlist("`i'","2","3","4") {
			qui ttest `x' if group`i'==1 | group1==1, by(group`i')
			mat stars[`r',`c']=(r(p)<.01) + (r(p)<.05)
}
		local r=`r'+1
*		if "`x'"=="tot_paid_by_mc_12m_wi_n0" {
			qui sum `x' if group`i'==1,d
			mat tab1[`r',`c']=r(p50)
			local r=`r'+1
*}
}
	foreach x of local ioutcomes {
		qui sum `x' if group`i'==1
		mat tab1[`r',`c']=r(mean)*100
			if inlist("`i'","2","3","4") {
				svy, subpop(if status==1 & wave==1  & nwstatus<=5 &group`i'==1 | group1==1): tab `x' group`i' 
				mat stars[`r',`c']=(r(p)<.01) + (r(p)<.05)
}
			local r=`r'+1
}
	qui sum n if group`i'==1 & wave==1  [aw=anfin]
	
	mat tab1[`r',`c']=r(N)
	mat tab1[`r'+1,`c']=r(sum)
	local r=1
	local c=`c'+1
}

foreach x in `coutcomes' {
local rnames `rnames' "`x'" "Median"
}

mat rownames tab1=`cvars1' `ivars1' `cvars2' `ivars2' "_" N "Estimate"

frmttable using sample_characteristics.doc, addtable statmat(tab1) ///
 title("Sample Characteristics by Income category") ///
 ctitles("" "`lab1'" "`lab2'" "`lab3'" "`lab4'") ///
 sdec(2) annotate(stars) asymbol(*,*) ///
 varlabels note("Cross-wave NHATS community-dwelling sample, by income group")
restore*/




local cvars1 age 
local ivars1 female
preserve
drop group*
*keep if status==1 & wave==1  & nwstatus<=5
replace wherela=2 if wherela==4
tab wherela, gen(group)
forvalues i=1/3 {
local lab : label wherelandgroup `i'
label var group`i' "`lab'"
}
tab1 group*
local rn : word count 1 `cvars1' `cvars2' `ivars1' `ivars2' `coutcomes' `coutcomes' `ioutcomes' 1 1
di `rn'
mat tab1=J(`rn',6,.)
mat stars=J(`rn',6,0)
local r=1
local c=1
forvalues i=1/3 {
	foreach round in 1 2 {
		foreach x of local cvars`round' {
			qui sum `x' if group`i'==1 & wave==1  & status==1 & wave==1  & nwstatus<=5 [aw=anfin]
			mat tab1[`r',`c']=r(mean)
			if inlist("`i'","2","3","4") {
				svy, subpop(if status==1 & wave==1  & nwstatus<=5 &group`i'==1 | group1==1): reg `x' group`i' 
				test
				mat tab1[`r',`c'+1]=r(p)
				mat stars[`r',`c'+1]=(r(p)<.05)+(r(p)<.01)
}
			local r=`r'+1
}
		foreach x of local ivars`round' {
			qui sum `x' if group`i'==1 & wave==1  & status==1 & wave==1  & nwstatus<=5 [aw=anfin]
			mat tab1[`r',`c']=r(mean)*100
			if inlist("`i'","2","3","4") {
				svy, subpop(if status==1 & wave==1  & nwstatus<=5 &group`i'==1 | group1==1): tab `x' group`i' 
				mat tab1[`r',`c'+1]=e(p_Pear)
				mat stars[`r',`c'+1]=(e(p_Pear)<.05)+(e(p_Pear)<.01)
}
			local r=`r'+1
}
}
	local r=`r'+1

	
	foreach x of local coutcomes {
		qui sum `x' if group`i'==1 & status==1 & wave==1  & nwstatus<=5,d
		mat tab1[`r',`c']=r(mean)
		if inlist("`i'","2","3","4") {
				svy, subpop(if status==1 & wave==1  & nwstatus<=5 &group`i'==1 | group1==1): reg `x' group`i' 
				test
				mat tab1[`r',`c'+1]=r(p)
				mat stars[`r',`c'+1]=(r(p)<.05)+(r(p)<.01)
}
		local r=`r'+1
*		if "`x'"=="tot_paid_by_mc_12m_wi_n0" {
			qui sum `x' if group`i'==1,d
			mat tab1[`r',`c']=r(p50)
			local r=`r'+1
*}
}
	foreach x of local ioutcomes {
		qui sum `x' if group`i'==1 & status==1 & wave==1  & nwstatus<=5
		mat tab1[`r',`c']=r(mean)*100
			if inlist("`i'","2","3") {
				svy, subpop(if status==1 & wave==1  & nwstatus<=5 &group`i'==1 | group1==1): tab `x' group`i' 
				mat tab1[`r',`c'+1]=e(p_Pear)
				mat stars[`r',`c'+1]=(e(p_Pear)<.05)+(e(p_Pear)<.01)
}
			local r=`r'+1
}
	qui sum n if group`i'==1 & wave==1  & status==1 & wave==1  & nwstatus<=5 [aw=anfin]
	
	mat tab1[`r',`c']=r(N)
	mat tab1[`r'+1,`c']=r(sum)
	local r=1
	local c=`c'+2
}

foreach x in `coutcomes' {
local rnames `rnames' "`x'" "Median"
}

mat rownames tab1=`cvars1' `ivars1' `cvars2' `ivars2' "_" N "Estimate"

frmttable using sample_characteristics.doc, addtable statmat(tab1) ///
 title("Sample Characteristics by future homebound status") ///
 ctitles("" "Never Homebound or NH res" "" "Future HB" "P-value" "Future NH" "P-value") ///
 sdec(2) annotate(stars) asymbol(*,*) ///
 varlabels note("Wave 1 community-dwelling sample, by ultimate homebound status" ///
 "Excludes those Lost to Follow up or dead prior to wave 2" ///
 "Future status evaluated at HB or NH, or final wave prior to dropout/wave 6")

restore
replace wherela=2 if wherela==4
preserve
tab wherela, gen(whereland)
forvalues i=1/3 {
local lab : label wherelandgroup `i'
label var whereland`i' "`lab'"
}
*keep if status==1 & wave==1 

local ivars2 inccat1 inccat2 inccat3 inccat4 creditdebt medpaynotcash govtasst ///
 whereland1 whereland2 whereland3 proxy  ///
medicaid medigap srh_fp adl_eat_help adl_bath_help adl_toil_help adl_dres_help ///
adl_ins_help adl_bed_help adl_impair iadl_impair ///
sr_cond_cat1 sr_cond_cat2 sr_cond_cat3 sr_ami_ever sr_stroke_ever sr_cancer_ever sr_hip_ever sr_heart_dis_ever ///
sr_htn_ever sr_ra_ever sr_osteoprs_ever sr_diabetes_ever sr_lung_dis_ever ///
prob_dementia dem_2_cat adl_diff_ind adl_independent inchbnextwave incnhnextwave ///
died_12 lfunextwave everhb evernh metro_ind northeast midwest south

local rn : word count 1 `cvars1' `cvars2' `ivars1' `ivars2' `coutcomes' `coutcomes' `ioutcomes' 1 1
di `rn'
mat tab1=J(`rn',8,.)
mat stars=J(`rn',8,0)
local r=1
local c=1

drop group*
forvalues i=1/4 {
gen group`i'=inccat`i'
local lab`i' : var label inccat`i'
}

forvalues i=1/4 {
	foreach round in 1 2 {
		foreach x of local cvars`round' {
			qui sum `x' if group`i'==1 & wave==1  & status==1 & wave==1  [aw=anfin]
			mat tab1[`r',`c']=r(mean)
			if inlist("`i'","2","3","4") {
				svy, subpop(if status==1 & wave==1   &group`i'==1 | group1==1): reg `x' group`i' 
				test
				mat tab1[`r',`c'+1]=r(p)
				mat stars[`r',`c'+1]=(r(p)<.05)+(r(p)<.01)
}
			local r=`r'+1
}
		foreach x of local ivars`round' {
			qui sum `x' if group`i'==1 & wave==1  & status==1 & wave==1  [aw=anfin]
			mat tab1[`r',`c']=r(mean)*100
			if inlist("`i'","2","3","4") {
				svy, subpop(if status==1 & wave==1  &group`i'==1 | group1==1): tab `x' group`i' 
				mat tab1[`r',`c'+1]=e(p_Pear)
				mat stars[`r',`c'+1]=(e(p_Pear)<.05)+(e(p_Pear)<.01)
}
			local r=`r'+1
}
}
	local r=`r'+1

	
	foreach x of local coutcomes {
		qui sum `x' if group`i'==1 & status==1 & wave==1 ,d
		mat tab1[`r',`c']=r(mean)
		if inlist("`i'","2","3","4") {
				svy, subpop(if status==1 & wave==1  & group`i'==1 | group1==1): reg `x' group`i' 
				test
				mat tab1[`r',`c'+1]=r(p)
				mat stars[`r',`c'+1]=(r(p)<.05)+(r(p)<.01)
}
		local r=`r'+1
*		if "`x'"=="tot_paid_by_mc_12m_wi_n0" {
			qui sum `x' if group`i'==1,d
			mat tab1[`r',`c']=r(p50)
			local r=`r'+1
*}
}
	foreach x of local ioutcomes {
		qui sum `x' if group`i'==1 & status==1 & wave==1 
		mat tab1[`r',`c']=r(mean)*100
			if inlist("`i'","2","3","4") {
				svy, subpop(if status==1 & wave==1  & group`i'==1 | group1==1): tab `x' group`i' 
				mat tab1[`r',`c'+1]=e(p_Pear)
				mat stars[`r',`c'+1]=(e(p_Pear)<.05)+(e(p_Pear)<.01)
}
			local r=`r'+1
}
	qui sum n if group`i'==1 & wave==1  [aw=anfin]
	
	mat tab1[`r',`c']=r(N)
	mat tab1[`r'+1,`c']=r(sum)
	local r=1
	local c=`c'+2
}

foreach x in `coutcomes' {
local rnames `rnames' "`x'" "Median"
}

mat rownames tab1=`cvars1' `ivars1' `cvars2' `ivars2' "_" N "Estimate"

frmttable using sample_characteristics.doc, addtable statmat(tab1) ///
 title("Sample Characteristics by Income category") ///
 ctitles("" "`lab1'" "" "`lab2'" "P-value" "`lab3'" "P-value" "`lab4'" "P-value") ///
 sdec(2) annotate(stars) asymbol(*,*) ///
 varlabels note("Wave 1 community-dwelling sample, by income group")
restore
preserve
*keep if status==1 & wave==1  & nwstatus<=5
tab wherela, gen(whereland)
forvalues i=1/3 {
local lab : label wherelandgroup `i'
label var whereland`i' "`lab'"
}


local rn : word count 1 `cvars1' `cvars2' `ivars1' `ivars2' `coutcomes' `coutcomes' `ioutcomes' 1 1
di `rn'
mat tab1=J(`rn',8,.)
mat stars=J(`rn',8,0)
local r=1
local c=1

drop group*
forvalues i=1/4 {
gen group`i'=inccat`i'
local lab`i' : var label inccat`i'
}

forvalues i=1/4 {
	foreach round in 1 2 {
		foreach x of local cvars`round' {
			qui sum `x' if group`i'==1 & wave==1  & status==1 & wave==1  & nwstatus<=5 [aw=anfin]
			mat tab1[`r',`c']=r(mean)
			if inlist("`i'","2","3","4") {
				svy, subpop(if status==1 & wave==1  & nwstatus<=5 &group`i'==1 | group1==1): reg `x' group`i' 
				test
				mat tab1[`r',`c'+1]=r(p)
				mat stars[`r',`c'+1]=(r(p)<.05)+(r(p)<.01)
}
			local r=`r'+1
}
		foreach x of local ivars`round' {
			qui sum `x' if group`i'==1 & wave==1  & status==1 & wave==1  & nwstatus<=5 [aw=anfin]
			mat tab1[`r',`c']=r(mean)*100
			if inlist("`i'","2","3","4") {
				svy, subpop(if status==1 & wave==1  & nwstatus<=5 &group`i'==1 | group1==1): tab `x' group`i' 
				mat tab1[`r',`c'+1]=e(p_Pear)
				mat stars[`r',`c'+1]=(e(p_Pear)<.05)+(e(p_Pear)<.01)
}
			local r=`r'+1
}
}
	local r=`r'+1

	
	foreach x of local coutcomes {
		qui sum `x' if group`i'==1 & status==1 & wave==1  & nwstatus<=5,d
		mat tab1[`r',`c']=r(mean)
		if inlist("`i'","2","3","4") {
				svy, subpop(if status==1 & wave==1  & nwstatus<=5 &group`i'==1 | group1==1): reg `x' group`i' 
				test
				mat tab1[`r',`c'+1]=r(p)
				mat stars[`r',`c'+1]=(r(p)<.05)+(r(p)<.01)
}
		local r=`r'+1
*		if "`x'"=="tot_paid_by_mc_12m_wi_n0" {
			qui sum `x' if group`i'==1,d
			mat tab1[`r',`c']=r(p50)
			local r=`r'+1
*}
}
	foreach x of local ioutcomes {
		qui sum `x' if group`i'==1 & status==1 & wave==1  & nwstatus<=5
		mat tab1[`r',`c']=r(mean)*100
			if inlist("`i'","2","3","4") {
				svy, subpop(if status==1 & wave==1  & nwstatus<=5 &group`i'==1 | group1==1): tab `x' group`i' 
				mat tab1[`r',`c'+1]=e(p_Pear)
				mat stars[`r',`c'+1]=(e(p_Pear)<.05)+(e(p_Pear)<.01)
}
			local r=`r'+1
}
	qui sum n if group`i'==1 & wave==1  [aw=anfin]
	
	mat tab1[`r',`c']=r(N)
	mat tab1[`r'+1,`c']=r(sum)
	local r=1
	local c=`c'+2
}

foreach x in `coutcomes' {
local rnames `rnames' "`x'" "Median"
}

mat rownames tab1=`cvars1' `ivars1' `cvars2' `ivars2' "_" N "Estimate"

frmttable using sample_characteristics.doc, addtable statmat(tab1) ///
 title("Sample Characteristics by Income category") ///
 ctitles("" "`lab1'" "" "`lab2'" "P-value" "`lab3'" "P-value" "`lab4'" "P-value") ///
 sdec(2) annotate(stars) asymbol(*,*) ///
 varlabels note("Wave 1 community-dwelling sample, by income group" ///
 "Excluding those LFU or dead prior to wave 2")
restore
preserve

sort spid wave
by spid: drop if wave>year+2010 & status[_n-1]!=1
xtset spid wave
drop if l.status!=1 & wave>1

local r=1
local c=2
tokenize A B C D E F G H I J K L M N O P Q R S T U V W X Y Z

putexcel set homebound_over_time.xlsx, replace
levelsof nwstatus, local(levels)
putexcel A`r'="Next-wave status among community-dwelling SPs who have never been homebound or nursing home residents" 


forvalues timethrough=1/2 {
putexcel B`=`r'+2'="Community, not homebound" C`=`r'+2'="Homebound, not incident" D`=`r'+2'="Incident homebound" ///
E`=`r'+2'="NH resident, not incident" F`=`r'+2'="Incident NH" G`=`r'+2'="Died" H`=`r'+2'="LFU" ///
I`=`r'+2'="Total Community dwelling in wave"
local r=`r'+3
forvalues i=1/5 {
	qui sum status if wave==`i' & status==1 & !missing(homebound_cat)
	local denom=r(N)
	qui putexcel A`r'="Wave `i'" A`=`r'+1'="N" A`=`r'+2'="% of non-homebound"
	local r=`r'+1
	foreach l of local levels {
		qui sum nwstatus if nwstatus==`l' & wave==`i' & status==1
		qui putexcel ``c''`r'=(r(N))
		qui putexcel ``c''`=`r'+1'=(r(N)/`denom'*100), nformat(number_d2)
		local c=`c'+1
}
	putexcel ``c''`r'=`denom'
	local r=`r'+3
	local c=2
}
restore
preserve
replace status=1 if status==4
local r=`r'+4
putexcel A`r'="Next-wave status among all community-dwelling SPs" 
}




restore
label var educ_hs_ind "Education: HS+"
preserve
log using homebound_income_cox_log.txt, text replace
drop if missing(homebound_cat) & !nhres
by spid, sort: egen lastwave=max(wave)
*keep if wave==1 
tab lastwave
*keep if inrange(homebound_cat,2,4)
gen time=lastwave
gen first_hb_or_nh=firsthb
replace first_hb=firstnh if firstnh<firsthb
replace time=first_hb_or_nh if !missing(first_hb_or_nh)

gen ind_helper_any=n_helpers>0
label var ind_helper_any "Any helpers"
gen dies=!missing(death_date)
gen ultimate=everhb==1
replace ultimate=2 if evernh==1 & !ultimate
replace ultimate=3 if !missing(death_date) & !ultimate
stset time, failure(everhb)
sts graph, by(income_cat)
graph save km_hb, replace
graph export km_hb.pdf, replace

forvalues i=1/6 {
local lab : label r1d2intvrage `i'
label define agecat `i' "`lab'", modify
}


foreach x in agecat income_cat {
levelsof `x', local(levels)
foreach l of local levels {
	gen `x'`l'=`x'==`l'
	local lab : label `x' `l'
	label var `x'`l' "`lab'"
}
}

forvalues i=2/6 {
	local age `age' agecat`i'
}

forvalues i=1/3 {
	local inc `inc' income_cat`i'
}

local cond sr_cond_cat2 sr_cond_cat3

local vars `age' `inc' female black hisp married educ_hs_ind  ///
medicaid prob_dem `cond' adl_diff_ind srh_fp ind_helper_any ind_paid_helper metro_ind northeast midwest south

svy, subpop(if wave==1 &  inrange(homebound_cat,2,4)): stcox `vars' //, nohr mgale(mg)
*stcoxkm. by(income_cat)
qui outreg, ctitles("" "Homebound") varlabels stats(e_b p)

stphplot, by(income_cat) adjust(`age'  female black hisp married educ_hs_ind  ///
medicaid prob_dem `cond' adl_diff_ind srh_fp ind_helper_any ind_paid_helper metro_ind northeast midwest south)
stphplot, by(income_cat)

gen timenh=firstnh
replace timenh=lastwave if missing(firstnh)
stset timenh, failure(evernh)
sts graph, by(income_cat)
graph save km_nh, replace
graph export km_nh.pdf, replace


svy, subpop(if wave==1 &  inrange(homebound_cat,2,4)): stcox `vars'

qui outreg, merge ctitles("" "Nursing home") varlabels stats(e_b p)

gen either=everhb==1 | evernh==1
stset time, failure(either)
sts graph, by(income_cat)
graph save km_either, replace
graph export km_either.pdf, replace

local vars `age' `inc' female black hisp married educ_hs_ind  ///
medicaid prob_dem `cond' adl_diff_ind srh_fp ind_helper_any ind_paid_helper metro_ind northeast midwest south

svy, subpop(if wave==1 &  inrange(homebound_cat,2,4)): stcox `vars'

qui outreg using homebound_income_cox_models, merge ctitles("" "HB or NH") varlabels  ///
title(Cox proportional hazard models) stats(e_b p) replace

predict p 
sum `vars' if missing(p)

sort spid wave
by spid: gen hb2=inlist(nwstat,2,3) if nwstat<7
by spid: gen nh2=inlist(nwstat,4,5) if nwstat<7
gen either2=hb2==1 | nh2==1 if !missing(hb2)
svy, subpop(if wave==1 & inrange(homebound_cat,2,4)): logit hb2 `vars'
qui outreg, stats(e_b p) ctitles("" "Homebound") varlabels
svy, subpop(if wave==1 & inrange(homebound_cat,2,4)): logit nh2 `vars'
qui outreg, stats(e_b p) ctitles("" "Nursing Home") varlabels
svy, subpop(if wave==1 & inrange(homebound_cat,2,4)): logit either2 `vars'
qui outreg, stats(e_b p) ctitles("" "HB or NH") varlabels

outreg using homebound_income_logit, replay replace ///
title(Logistic regression on next wave status) ///
note("Among wave 1 non-homebound community dwelling SPs")


H="Restricted to prob dementia"
clear all
set more off
capture log close


use "E:\nhats\data\NHATS Public\round_1\NHATS_Round_1_SP_File.dta", clear
foreach x of varlist ew* {
	replace `x'=. if `x'<0
}

gen creditdebt=inlist(ew1pycredbal,2,3) | !missing(ew1crecardeb) if ///
 !missing(ew1pycredbal) | !missing(ew1crecardeb)
rename ew1credcdmed medcreditdebt
rename ew1medpaovtm medbillsovertime
gen medpaynotcash=medbillsovertime==1 | medcreditdebt==1 if !missing(medbillsovertime) | ///
!missing(medcreditdebt)

rename ew1finhlpfam finhlpfam
rename ew1fingftfam fingftfam
gen govtasst=ew1progneed1==1 | ew1progneed2==1 | ew1progneed3==1 if !missing(ew1progneed1) ///
| !missing(ew1progneed2) | !missing(ew1progneed3)
drop hp1* ew1*
label var creditdebt "Has credit card debt or does not pay off in full monthly"
label var medpaynotcash "Has medical credit card debt or pays bills over time"
label var govtasst "Receives foodstamps or other food or gas/energy assistance"
keep spid creditdebt medpaynotcash govtasst
gen wave=1
tempfile t1
save `t1'

cd "E:\nhats\data\projects\Homebound\logs"
use "E:\nhats\data\NHATS cleaned\sp_round_1_6.dta" if year==2011 & lml==0, clear
merge 1:1 spid wave using `t1', nogen keep(match master)


gen northeast=region==1
gen midwest=region==2
gen south=region==3
gen west=region==4
label var northe "Northeast"
label var midw "Midwest"
label var south "South"
label var west "West"

sort spid wave
*by spid: keep if prob_dem[1]==1
by spid: egen firstdem=min(cond(prob_dem==1,wave,.))
xtset spid wave
replace homebound_cat=. if nhres==1
gen homebound=homebound==1 if !missing(homebound) & !nhres
gen hbw=wave if homebound==1
gen nhw=wave if nhres==1
by spid, sort: egen firsthb=min(hbw)
by spid, sort: egen firstnh=min(nhw)
gen everhb=!missing(firsthb)
gen evernh=!missing(firstnh)
label var everhb "Ever HB"
label var evernh "Ever NH"
*drop if firsthb==1 | missing(homebou)
by spid: gen hbnextwave=homebound[_n+1]
by spid: gen nhnextwave=nhres[_n+1]
gen inchbnextwave=firsthb==wave+1 & homebound==0
gen incnhnextwave=firstnh==wave+1 & nhres==0
replace adl_diff_ind=1 if adl_impair==1
label var adl_diff_ind "ADL difficulty or impairment"

gen wherelandgroup=1 if missing(firsthb) & missing(firstnh)
replace wherelandgroup=2 if !missing(firsthb) 
replace wherelandgroup=3 if !missing(firstnh) 
replace wherelandgroup=4 if !missing(firstnh) & firsthb<firstnh
label define wherelandgroup 1 "Never homebound or NH resident" 2 "Future HB" ///
3 "Future NH resident" 4 "Homebound, then NH"
label values wherelandgroup wherelandgroup

sort spid wave
by spid: drop if nhres[_n-1]==1 
by spid: drop if homebound_cat[_n-1]==. & wave!=1


gen nwstatus=.
forvalues i=1/5 {
replace nwstatus=r`=`i'+1'status if wave==`i'
}
tab nwstat
tab r2status
replace nwstatus=1 if inlist(nwstatus,60,63) & !missing(hbne)
replace nwstatus=4 if inlist(nwstatus,61)
replace nwstatus=6 if inlist(nwstatus,62,86)
replace nwstatus=7 if nwstatus>7
replace nwstatus=6 if died_12==1 & nwstatus==7
label define nwstatus 1 "Community, not homebound" 2 "Homebound, not incident" ///
3 "Incident homebound" 4 "NH Resident, not incident" ///
5 "Incident NH" 6 "Died" 7 "LFU"
label values nwstatus nwstatus
replace nwstatus=2 if hbne==1
replace nwstatus=3 if inchb==1
replace nwstat=4 if nhne==1
replace nwstat=5 if incnhne==1
label var nwstat "Status next wave"
replace died_12=0 if nwstatus<=5
label var died_12 "Died prior to next wave"

gen sr_cond_cat=1 if sr_numcond<2
replace sr_cond_cat=2 if inrange(sr_numcond,2,4)
replace sr_cond_cat=3 if inrange(sr_numcond,5,15)
label define sr_cond_cat 1 "0-1 SR condition" 2 "2-4 SR conditions" 3 "5+ SR conditions"
label values sr_cond_cat sr_cond_cat
tab sr_cond_cat, gen(sr_cond_cat)
forvalues i=1/3 {
local lab: label sr_cond_cat `i'
label var sr_cond_cat`i' "`lab'"
}

gen status=1 if sp_ivw==1 & !missing(homebound)
replace status=2 if homebound==1
replace status=3 if nhres==1
replace status=4 if status==1 & (firsthb<wave | firstnh<wave)
label define status 1 "Community, not HB" 2 "Homebound" 3 "NH resident" 4 ///
"Community, previously HB or NH resident"
label values status status
label var status "Status this wave"

tab wave nwstat if wave<=4, row
tab nwsta status if wave==1 & firstdem==1

sum aveincome
forvalues i=1/4 {
gen inccat`i'=income_cat==`i'-1
local lab : label income_cat `=`i'-1'
label var inccat`i' "Income: `lab'"
}
gen prob_dementia=dem_3==1 if !missing(dem_3)
label var prob_dementia "Probable dementia"

by spid, sort: gen persontime=_N
replace persontime=firsthb if firsthb<persontime
replace persontime=firstnh if firstnh<persontime
label var persontime "Waves contributing information"

local cvars1 age
local cvars2 persontime aveincome n_helpers n_paid_helpers tot_hrsmonth_help_i ///
tot_hrsmonth_paid_i 
local ivars1 female white black hisp other_race married educ_hs_ind proxy
local ivars2 ind_any_helpers ind_paid_helper top_quartile_help_helped ///
medicaid medigap srh_fp nhres ///
sr_ami_ever sr_stroke_ever sr_cancer_ever sr_hip_ever sr_heart_dis_ever ///
sr_htn_ever sr_ra_ever sr_osteoprs_ever sr_diabetes_ever sr_lung_dis_ever ///
prob_dementia dem_2_cat adl_diff_ind adl_independent iadl_diff_ind iadl_independent 
local ivars3 adl1 adl2 adl3 iadl1 iadl2 iadl3 adl_eat_help adl_bath_help adl_toil_help ///
adl_dres_help adl_ins_help adl_bed_help iadl_laun_help ///
iadl_shop_help iadl_meal_help iadl_bank_help iadl_meds_help ///
 reg_doc_seen sr_hosp_ind
gen lfunextwave=nwstatus==7
label var lfune "Lost to follow up prior to next wave"
local cvars1 age
local cvars2 persontime  aveincome
local ivars1 female white black hisp other_race married 
label var inchb "Incident Homebound Next Wave"
label var incnh "Incident Nursing Home Next Wave"
local ivars2 inccat1 inccat2 inccat3 inccat4 creditdebt medpaynotcash govtasst proxy  ///
medicaid medigap srh_fp adl_eat_help adl_bath_help adl_toil_help adl_dres_help ///
adl_ins_help adl_bed_help adl_impair iadl_impair ///
sr_cond_cat1 sr_cond_cat2 sr_cond_cat3 sr_ami_ever sr_stroke_ever sr_cancer_ever sr_hip_ever sr_heart_dis_ever ///
sr_htn_ever sr_ra_ever sr_osteoprs_ever sr_diabetes_ever sr_lung_dis_ever ///
prob_dementia dem_2_cat adl_diff_ind adl_independent inchbnextwave incnhnextwave ///
lfunextwave died_12 everhb evernh metro_ind northeast midwest south
gen n=1

forvalues i=1/7 {
gen group`i'=nwstatus==`i'
}


preserve
drop group*
forvalues i=1/3 {
gen group`i'=status==`i'
}
tab nwstatus,gen(nw)
levelsof nwstatus, local(levels)

foreach l of local levels {
local lab : label nwstatus `l'
label var nw`l' "`lab'"
local nw `nw' nw`l'
}

*keep if wave==1 & firstdem==1
gen group_all=1
local rn : word count 1 `cvars1' `cvars2' `ivars1' `ivars2' `coutcomes' `coutcomes' `ioutcomes' 1 1
di `rn'
mat tab1=J(`rn',8,.)
mat stars=J(`rn',8,0)
local r=1
local c=1
foreach i in _all 1 2 3 {
	foreach round in 1 2 {
		foreach x of local cvars`round' {
			qui sum `x' if group`i'==1  & wave==1 & firstdem==1 [aw=anfin]
			mat tab1[`r',`c']=r(mean)
			if inlist("`i'","2","4") {
				svy, subpop(if wave==1 & firstdem==1 &group`i'==1 | group1==1): reg `x' group`i' 
				test
				mat tab1[`r',`c'+1]=r(p)
				mat stars[`r',`c'+1]=(r(p)<.05)+(r(p)<.01)
}
			local r=`r'+1
}
		foreach x of local ivars`round' {
			qui sum `x' if group`i'==1 & wave==1 & firstdem==1 [aw=anfin]
			mat tab1[`r',`c']=r(mean)*100
			if inlist("`i'","2","4") {
				svy, subpop(if wave==1 & firstdem==1 &group`i'==1 | group1==1): tab `x' group`i' 
				mat tab1[`r',`c'+1]=e(p_Pear)
				mat stars[`r',`c'+1]=(e(p_Pear)<.05)+(e(p_Pear)<.01)
}
			local r=`r'+1
}
}
	local r=`r'+1

	
	foreach x of local coutcomes {
		qui sum `x' if group`i'==1 & wave==1 & firstdem==1 [aw=anfin],d
		mat tab1[`r',`c']=r(mean)
		if inlist("`i'","2","4") {
				svy, subpop(if wave==1 & firstdem==1 &group`i'==1 | group1==1): reg `x' group`i' 
				test
				mat tab1[`r',`c'+1]=r(p)
				mat stars[`r',`c'+1]=(r(p)<.05)+(r(p)<.01)
}
		local r=`r'+1
*		if "`x'"=="tot_paid_by_mc_12m_wi_n0" {
			qui sum `x' if group`i'==1 & wave==1 & firstdem==1 [aw=anfin],d 
			mat tab1[`r',`c']=r(p50)
			local r=`r'+1
*}
}
	foreach x of local ioutcomes {
		qui sum `x' if group`i'==1 & wave==1 & firstdem==1 [aw=anfin]
		mat tab1[`r',`c']=r(mean)*100
			if inlist("`i'","2","4") {
				svy, subpop(if wave==1 & firstdem==1 &group`i'==1 | group1==1): tab `x' group`i' 
				mat tab1[`r',`c'+1]=e(p_Pear)
				mat stars[`r',`c'+1]=(e(p_Pear)<.05)+(e(p_Pear)<.01)
}
			local r=`r'+1
}
	qui sum n if group`i'==1 & wave==1 & firstdem==1 [aw=anfin]
	mat tab1[`r',`c']=r(N)
	mat tab1[`r'+1,`c']=r(sum)
	local r=1
	local c=`c'+2
}

foreach x in `coutcomes' {
local rnames `rnames' "`x'" "Median"
}

mat rownames tab1=`cvars1' `ivars1' `cvars2' `ivars2' "_" N "Estimate"

frmttable using sample_characteristics_dem.doc, replace statmat(tab1) ///
 title("Sample Characteristics by Status at Wave") ///
 ctitles("" "All" "" "Community" "" "Homebound" "P-value" "Nursing Home" "P-value") ///
 sdec(2) annotate(stars) asymbol(*,*) ///
 varlabels note("Wave 1 NHATS sample")
 restore
 
 /*
preserve
keep if status==1
local rn : word count 1 `cvars1' `cvars2' `ivars1' `ivars2' `coutcomes' `coutcomes' `ioutcomes' 1 1
di `rn'
mat tab1=J(`rn',7,.)
mat stars=J(`rn',5,0)
local r=1
local c=1
forvalues i=1/7 {
	foreach round in 1 2 {
		foreach x of local cvars`round' {
			qui sum `x' if group`i'==1 & wave==1 & firstdem==1 [aw=anfin]
			mat tab1[`r',`c']=r(mean)
			if inlist("`i'","2","3","4") {
				qui ttest `x' if group`i'==1 | group1==1, by(group`i')
				mat stars[`r',`c']=(r(p)<.01) + (r(p)<.05)
}
			local r=`r'+1
}
		foreach x of local ivars`round' {
			qui sum `x' if group`i'==1 & wave==1 & firstdem==1 [aw=anfin]
			mat tab1[`r',`c']=r(mean)*100
			if inlist("`i'","2","3","4") {
				svy, subpop(if status==1 & wave==1 & firstdem==1 & nwstatus<=5 &group`i'==1 | group1==1): tab `x' group`i' 
				mat stars[`r',`c']=(r(p)<.01) + (r(p)<.05)
}
			local r=`r'+1
}
}
	local r=`r'+1

	
	foreach x of local coutcomes {
		qui sum `x' if group`i'==1,d
		mat tab1[`r',`c']=r(mean)
		if inlist("`i'","2","3","4") {
			qui ttest `x' if group`i'==1 | group1==1, by(group`i')
			mat stars[`r',`c']=(r(p)<.01) + (r(p)<.05)
}
		local r=`r'+1
*		if "`x'"=="tot_paid_by_mc_12m_wi_n0" {
			qui sum `x' if group`i'==1,d
			mat tab1[`r',`c']=r(p50)
			local r=`r'+1
*}
}
	foreach x of local ioutcomes {
		qui sum `x' if group`i'==1
		mat tab1[`r',`c']=r(mean)*100
			if inlist("`i'","2","3","4") {
				svy, subpop(if status==1 & wave==1 & firstdem==1 & nwstatus<=5 &group`i'==1 | group1==1): tab `x' group`i' 
				mat stars[`r',`c']=(r(p)<.01) + (r(p)<.05)
}
			local r=`r'+1
}
	qui sum n if group`i'==1 & wave==1 & firstdem==1 [aw=anfin]
	
	mat tab1[`r',`c']=r(N)
	mat tab1[`r'+1,`c']=r(sum)
	local r=1
	local c=`c'+1
}

foreach x in `coutcomes' {
local rnames `rnames' "`x'" "Median"
}

mat rownames tab1=`cvars1' `ivars1' `cvars2' `ivars2' "_" N "Estimate"

frmttable using sample_characteristics.doc, addtable statmat(tab1) ///
 title("Sample Characteristics by next wave status") ///
 ctitles("" "Community" "HB, Not Incident" "Incident HB" "NH, Not Incident" "Incident NH" ///
 "Died" "LFU") ///
 sdec(2) annotate(stars) asymbol(*,*) ///
 varlabels note("Cross-wave NHATS community-dwelling sample, by next-wave status")

restore
preserve
keep if status==1
local rn : word count 1 `cvars1' `cvars2' `ivars1' `ivars2' `coutcomes' `coutcomes' `ioutcomes' 1 1
di `rn'
mat tab1=J(`rn',4,.)
mat stars=J(`rn',4,0)
local r=1
local c=1

drop group*
forvalues i=1/4 {
gen group`i'=inccat`i'
local lab`i' : var label inccat`i'
}

forvalues i=1/4 {
	foreach round in 1 2 {
		foreach x of local cvars`round' {
			qui sum `x' if group`i'==1 & wave==1 & firstdem==1 [aw=anfin]
			mat tab1[`r',`c']=r(mean)
			if inlist("`i'","2","3","4") {
				qui ttest `x' if group`i'==1 | group1==1, by(group`i')
				mat stars[`r',`c']=(r(p)<.01) + (r(p)<.05)
}
			local r=`r'+1
}
		foreach x of local ivars`round' {
			qui sum `x' if group`i'==1 & wave==1 & firstdem==1 [aw=anfin]
			mat tab1[`r',`c']=r(mean)*100
			if inlist("`i'","2","3","4") {
				svy, subpop(if status==1 & wave==1 & firstdem==1 & nwstatus<=5 &group`i'==1 | group1==1): tab `x' group`i' 
				mat stars[`r',`c']=(r(p)<.01) + (r(p)<.05)
}
			local r=`r'+1
}
}
	local r=`r'+1

	
	foreach x of local coutcomes {
		qui sum `x' if group`i'==1,d
		mat tab1[`r',`c']=r(mean)
		if inlist("`i'","2","3","4") {
			qui ttest `x' if group`i'==1 | group1==1, by(group`i')
			mat stars[`r',`c']=(r(p)<.01) + (r(p)<.05)
}
		local r=`r'+1
*		if "`x'"=="tot_paid_by_mc_12m_wi_n0" {
			qui sum `x' if group`i'==1,d
			mat tab1[`r',`c']=r(p50)
			local r=`r'+1
*}
}
	foreach x of local ioutcomes {
		qui sum `x' if group`i'==1
		mat tab1[`r',`c']=r(mean)*100
			if inlist("`i'","2","3","4") {
				svy, subpop(if status==1 & wave==1 & firstdem==1 & nwstatus<=5 &group`i'==1 | group1==1): tab `x' group`i' 
				mat stars[`r',`c']=(r(p)<.01) + (r(p)<.05)
}
			local r=`r'+1
}
	qui sum n if group`i'==1 & wave==1 & firstdem==1 [aw=anfin]
	
	mat tab1[`r',`c']=r(N)
	mat tab1[`r'+1,`c']=r(sum)
	local r=1
	local c=`c'+1
}

foreach x in `coutcomes' {
local rnames `rnames' "`x'" "Median"
}

mat rownames tab1=`cvars1' `ivars1' `cvars2' `ivars2' "_" N "Estimate"

frmttable using sample_characteristics.doc, addtable statmat(tab1) ///
 title("Sample Characteristics by Income category") ///
 ctitles("" "`lab1'" "`lab2'" "`lab3'" "`lab4'") ///
 sdec(2) annotate(stars) asymbol(*,*) ///
 varlabels note("Cross-wave NHATS community-dwelling sample, by income group")
restore*/




local cvars1 age 
local ivars1 female
preserve
drop group*
*keep if status==1 & wave==1 & firstdem==1 & nwstatus<=5
replace wherela=2 if wherela==4
tab wherela, gen(group)
forvalues i=1/3 {
local lab : label wherelandgroup `i'
label var group`i' "`lab'"
}
tab1 group*
local rn : word count 1 `cvars1' `cvars2' `ivars1' `ivars2' `coutcomes' `coutcomes' `ioutcomes' 1 1
di `rn'
mat tab1=J(`rn',6,.)
mat stars=J(`rn',6,0)
local r=1
local c=1
forvalues i=1/3 {
	foreach round in 1 2 {
		foreach x of local cvars`round' {
			qui sum `x' if group`i'==1 & wave==1 & firstdem==1 & status==1 & wave==1 & firstdem==1 & nwstatus<=5 [aw=anfin]
			mat tab1[`r',`c']=r(mean)
			if inlist("`i'","2","3","4") {
				svy, subpop(if status==1 & wave==1 & firstdem==1 & nwstatus<=5 &group`i'==1 | group1==1): reg `x' group`i' 
				test
				mat tab1[`r',`c'+1]=r(p)
				mat stars[`r',`c'+1]=(r(p)<.05)+(r(p)<.01)
}
			local r=`r'+1
}
		foreach x of local ivars`round' {
			qui sum `x' if group`i'==1 & wave==1 & firstdem==1 & status==1 & wave==1 & firstdem==1 & nwstatus<=5 [aw=anfin]
			mat tab1[`r',`c']=r(mean)*100
			if inlist("`i'","2","3","4") {
				svy, subpop(if status==1 & wave==1 & firstdem==1 & nwstatus<=5 &group`i'==1 | group1==1): tab `x' group`i' 
				mat tab1[`r',`c'+1]=e(p_Pear)
				mat stars[`r',`c'+1]=(e(p_Pear)<.05)+(e(p_Pear)<.01)
}
			local r=`r'+1
}
}
	local r=`r'+1

	
	foreach x of local coutcomes {
		qui sum `x' if group`i'==1 & status==1 & wave==1 & firstdem==1 & nwstatus<=5,d
		mat tab1[`r',`c']=r(mean)
		if inlist("`i'","2","3","4") {
				svy, subpop(if status==1 & wave==1 & firstdem==1 & nwstatus<=5 &group`i'==1 | group1==1): reg `x' group`i' 
				test
				mat tab1[`r',`c'+1]=r(p)
				mat stars[`r',`c'+1]=(r(p)<.05)+(r(p)<.01)
}
		local r=`r'+1
*		if "`x'"=="tot_paid_by_mc_12m_wi_n0" {
			qui sum `x' if group`i'==1,d
			mat tab1[`r',`c']=r(p50)
			local r=`r'+1
*}
}
	foreach x of local ioutcomes {
		qui sum `x' if group`i'==1 & status==1 & wave==1 & firstdem==1 & nwstatus<=5
		mat tab1[`r',`c']=r(mean)*100
			if inlist("`i'","2","3") {
				svy, subpop(if status==1 & wave==1 & firstdem==1 & nwstatus<=5 &group`i'==1 | group1==1): tab `x' group`i' 
				mat tab1[`r',`c'+1]=e(p_Pear)
				mat stars[`r',`c'+1]=(e(p_Pear)<.05)+(e(p_Pear)<.01)
}
			local r=`r'+1
}
	qui sum n if group`i'==1 & wave==1 & firstdem==1 & status==1 & wave==1 & firstdem==1 & nwstatus<=5 [aw=anfin]
	
	mat tab1[`r',`c']=r(N)
	mat tab1[`r'+1,`c']=r(sum)
	local r=1
	local c=`c'+2
}

foreach x in `coutcomes' {
local rnames `rnames' "`x'" "Median"
}

mat rownames tab1=`cvars1' `ivars1' `cvars2' `ivars2' "_" N "Estimate"

frmttable using sample_characteristics_dem.doc, addtable statmat(tab1) ///
 title("Sample Characteristics by future homebound status") ///
 ctitles("" "Never Homebound or NH res" "" "Future HB" "P-value" "Future NH" "P-value") ///
 sdec(2) annotate(stars) asymbol(*,*) ///
 varlabels note("Wave 1 community-dwelling sample, by ultimate homebound status" ///
 "Excludes those Lost to Follow up or dead prior to wave 2" ///
 "Future status evaluated at HB or NH, or final wave prior to dropout/wave 6")

restore
replace wherela=2 if wherela==4
preserve
tab wherela, gen(whereland)
forvalues i=1/3 {
local lab : label wherelandgroup `i'
label var whereland`i' "`lab'"
}
*keep if status==1 & wave==1 & firstdem==1

local ivars2 inccat1 inccat2 inccat3 inccat4 creditdebt medpaynotcash govtasst ///
 whereland1 whereland2 whereland3 proxy  ///
medicaid medigap srh_fp adl_eat_help adl_bath_help adl_toil_help adl_dres_help ///
adl_ins_help adl_bed_help adl_impair iadl_impair ///
sr_cond_cat1 sr_cond_cat2 sr_cond_cat3 sr_ami_ever sr_stroke_ever sr_cancer_ever sr_hip_ever sr_heart_dis_ever ///
sr_htn_ever sr_ra_ever sr_osteoprs_ever sr_diabetes_ever sr_lung_dis_ever ///
prob_dementia dem_2_cat adl_diff_ind adl_independent inchbnextwave incnhnextwave ///
died_12 lfunextwave everhb evernh metro_ind northeast midwest south

local rn : word count 1 `cvars1' `cvars2' `ivars1' `ivars2' `coutcomes' `coutcomes' `ioutcomes' 1 1
di `rn'
mat tab1=J(`rn',8,.)
mat stars=J(`rn',8,0)
local r=1
local c=1

drop group*
forvalues i=1/4 {
gen group`i'=inccat`i'
local lab`i' : var label inccat`i'
}

forvalues i=1/4 {
	foreach round in 1 2 {
		foreach x of local cvars`round' {
			qui sum `x' if group`i'==1 & wave==1 & firstdem==1 & status==1 & wave==1 & firstdem==1 [aw=anfin]
			mat tab1[`r',`c']=r(mean)
			if inlist("`i'","2","3","4") {
				svy, subpop(if status==1 & wave==1 & firstdem==1  &group`i'==1 | group1==1): reg `x' group`i' 
				test
				mat tab1[`r',`c'+1]=r(p)
				mat stars[`r',`c'+1]=(r(p)<.05)+(r(p)<.01)
}
			local r=`r'+1
}
		foreach x of local ivars`round' {
			qui sum `x' if group`i'==1 & wave==1 & firstdem==1 & status==1 & wave==1 & firstdem==1 [aw=anfin]
			mat tab1[`r',`c']=r(mean)*100
			if inlist("`i'","2","3","4") {
				svy, subpop(if status==1 & wave==1 & firstdem==1 &group`i'==1 | group1==1): tab `x' group`i' 
				mat tab1[`r',`c'+1]=e(p_Pear)
				mat stars[`r',`c'+1]=(e(p_Pear)<.05)+(e(p_Pear)<.01)
}
			local r=`r'+1
}
}
	local r=`r'+1

	
	foreach x of local coutcomes {
		qui sum `x' if group`i'==1 & status==1 & wave==1 & firstdem==1,d
		mat tab1[`r',`c']=r(mean)
		if inlist("`i'","2","3","4") {
				svy, subpop(if status==1 & wave==1 & firstdem==1 & group`i'==1 | group1==1): reg `x' group`i' 
				test
				mat tab1[`r',`c'+1]=r(p)
				mat stars[`r',`c'+1]=(r(p)<.05)+(r(p)<.01)
}
		local r=`r'+1
*		if "`x'"=="tot_paid_by_mc_12m_wi_n0" {
			qui sum `x' if group`i'==1,d
			mat tab1[`r',`c']=r(p50)
			local r=`r'+1
*}
}
	foreach x of local ioutcomes {
		qui sum `x' if group`i'==1 & status==1 & wave==1 & firstdem==1
		mat tab1[`r',`c']=r(mean)*100
			if inlist("`i'","2","3","4") {
				svy, subpop(if status==1 & wave==1 & firstdem==1 & group`i'==1 | group1==1): tab `x' group`i' 
				mat tab1[`r',`c'+1]=e(p_Pear)
				mat stars[`r',`c'+1]=(e(p_Pear)<.05)+(e(p_Pear)<.01)
}
			local r=`r'+1
}
	qui sum n if group`i'==1 & wave==1 & firstdem==1 [aw=anfin]
	
	mat tab1[`r',`c']=r(N)
	mat tab1[`r'+1,`c']=r(sum)
	local r=1
	local c=`c'+2
}

foreach x in `coutcomes' {
local rnames `rnames' "`x'" "Median"
}

mat rownames tab1=`cvars1' `ivars1' `cvars2' `ivars2' "_" N "Estimate"

frmttable using sample_characteristics_dem.doc, addtable statmat(tab1) ///
 title("Sample Characteristics by Income category") ///
 ctitles("" "`lab1'" "" "`lab2'" "P-value" "`lab3'" "P-value" "`lab4'" "P-value") ///
 sdec(2) annotate(stars) asymbol(*,*) ///
 varlabels note("Wave 1 community-dwelling sample, by income group")
restore
preserve
*keep if status==1 & wave==1 & firstdem==1 & nwstatus<=5
tab wherela, gen(whereland)
forvalues i=1/3 {
local lab : label wherelandgroup `i'
label var whereland`i' "`lab'"
}


local rn : word count 1 `cvars1' `cvars2' `ivars1' `ivars2' `coutcomes' `coutcomes' `ioutcomes' 1 1
di `rn'
mat tab1=J(`rn',8,.)
mat stars=J(`rn',8,0)
local r=1
local c=1

drop group*
forvalues i=1/4 {
gen group`i'=inccat`i'
local lab`i' : var label inccat`i'
}

forvalues i=1/4 {
	foreach round in 1 2 {
		foreach x of local cvars`round' {
			qui sum `x' if group`i'==1 & wave==1 & firstdem==1 & status==1 & wave==1 & firstdem==1 & nwstatus<=5 [aw=anfin]
			mat tab1[`r',`c']=r(mean)
			if inlist("`i'","2","3","4") {
				svy, subpop(if status==1 & wave==1 & firstdem==1 & nwstatus<=5 &group`i'==1 | group1==1): reg `x' group`i' 
				test
				mat tab1[`r',`c'+1]=r(p)
				mat stars[`r',`c'+1]=(r(p)<.05)+(r(p)<.01)
}
			local r=`r'+1
}
		foreach x of local ivars`round' {
			qui sum `x' if group`i'==1 & wave==1 & firstdem==1 & status==1 & wave==1 & firstdem==1 & nwstatus<=5 [aw=anfin]
			mat tab1[`r',`c']=r(mean)*100
			if inlist("`i'","2","3","4") {
				svy, subpop(if status==1 & wave==1 & firstdem==1 & nwstatus<=5 &group`i'==1 | group1==1): tab `x' group`i' 
				mat tab1[`r',`c'+1]=e(p_Pear)
				mat stars[`r',`c'+1]=(e(p_Pear)<.05)+(e(p_Pear)<.01)
}
			local r=`r'+1
}
}
	local r=`r'+1

	
	foreach x of local coutcomes {
		qui sum `x' if group`i'==1 & status==1 & wave==1 & firstdem==1 & nwstatus<=5,d
		mat tab1[`r',`c']=r(mean)
		if inlist("`i'","2","3","4") {
				svy, subpop(if status==1 & wave==1 & firstdem==1 & nwstatus<=5 &group`i'==1 | group1==1): reg `x' group`i' 
				test
				mat tab1[`r',`c'+1]=r(p)
				mat stars[`r',`c'+1]=(r(p)<.05)+(r(p)<.01)
}
		local r=`r'+1
*		if "`x'"=="tot_paid_by_mc_12m_wi_n0" {
			qui sum `x' if group`i'==1,d
			mat tab1[`r',`c']=r(p50)
			local r=`r'+1
*}
}
	foreach x of local ioutcomes {
		qui sum `x' if group`i'==1 & status==1 & wave==1 & firstdem==1 & nwstatus<=5
		mat tab1[`r',`c']=r(mean)*100
			if inlist("`i'","2","3","4") {
				svy, subpop(if status==1 & wave==1 & firstdem==1 & nwstatus<=5 &group`i'==1 | group1==1): tab `x' group`i' 
				mat tab1[`r',`c'+1]=e(p_Pear)
				mat stars[`r',`c'+1]=(e(p_Pear)<.05)+(e(p_Pear)<.01)
}
			local r=`r'+1
}
	qui sum n if group`i'==1 & wave==1 & firstdem==1 [aw=anfin]
	
	mat tab1[`r',`c']=r(N)
	mat tab1[`r'+1,`c']=r(sum)
	local r=1
	local c=`c'+2
}

foreach x in `coutcomes' {
local rnames `rnames' "`x'" "Median"
}

mat rownames tab1=`cvars1' `ivars1' `cvars2' `ivars2' "_" N "Estimate"

frmttable using sample_characteristics_dem.doc, addtable statmat(tab1) ///
 title("Sample Characteristics by Income category") ///
 ctitles("" "`lab1'" "" "`lab2'" "P-value" "`lab3'" "P-value" "`lab4'" "P-value") ///
 sdec(2) annotate(stars) asymbol(*,*) ///
 varlabels note("Wave 1 community-dwelling sample, by income group" ///
 "Excluding those LFU or dead prior to wave 2")
restore
preserve

sort spid wave
by spid: drop if wave>year+2010 & status[_n-1]!=1
xtset spid wave
drop if l.status!=1 & wave>1

local r=1
local c=2
tokenize A B C D E F G H I J K L M N O P Q R S T U V W X Y Z

putexcel set homebound_over_time_dem.xlsx, replace
levelsof nwstatus, local(levels)
putexcel A`r'="Next-wave status among community-dwelling SPs who have never been homebound or nursing home residents" 


forvalues timethrough=1/2 {
putexcel B`=`r'+2'="Community, not homebound" C`=`r'+2'="Homebound, not incident" D`=`r'+2'="Incident homebound" ///
E`=`r'+2'="NH resident, not incident" F`=`r'+2'="Incident NH" G`=`r'+2'="Died" H`=`r'+2'="LFU" ///
I`=`r'+2'="Total Community dwelling in wave"
local r=`r'+3
forvalues i=1/5 {
	qui sum status if wave==`i' & status==1 & !missing(homebound_cat)
	local denom=r(N)
	qui putexcel A`r'="Wave `i'" A`=`r'+1'="N" A`=`r'+2'="% of non-homebound"
	local r=`r'+1
	foreach l of local levels {
		qui sum nwstatus if nwstatus==`l' & wave==`i' & status==1
		qui putexcel ``c''`r'=(r(N))
		qui putexcel ``c''`=`r'+1'=(r(N)/`denom'*100), nformat(number_d2)
		local c=`c'+1
}
	putexcel ``c''`r'=`denom'
	local r=`r'+3
	local c=2
}
restore
preserve
replace status=1 if status==4
local r=`r'+4
putexcel A`r'="Next-wave status among all community-dwelling SPs" 
}




restore
label var educ_hs_ind "Education: HS+"
preserve
log using homebound_income_cox_log_dem.txt, text replace
drop if missing(homebound_cat) & !nhres
by spid, sort: egen lastwave=max(wave)
*keep if wave==1 & firstdem==1
tab lastwave
*keep if inrange(homebound_cat,2,4)
gen time=lastwave
gen first_hb_or_nh=firsthb
replace first_hb=firstnh if firstnh<firsthb
replace time=first_hb_or_nh if !missing(first_hb_or_nh)

gen ind_helper_any=n_helpers>0
label var ind_helper_any "Any helpers"
gen dies=!missing(death_date)
gen ultimate=everhb==1
replace ultimate=2 if evernh==1 & !ultimate
replace ultimate=3 if !missing(death_date) & !ultimate
stset time, failure(everhb)
sts graph, by(income_cat)
graph save km_hb_dem, replace
graph export km_hb_dem.pdf, replace

forvalues i=1/6 {
local lab : label r1d2intvrage `i'
label define agecat `i' "`lab'", modify
}


foreach x in agecat income_cat {
levelsof `x', local(levels)
foreach l of local levels {
	gen `x'`l'=`x'==`l'
	local lab : label `x' `l'
	label var `x'`l' "`lab'"
}
}

forvalues i=2/6 {
	local age `age' agecat`i'
}

forvalues i=1/3 {
	local inc `inc' income_cat`i'
}

local cond sr_cond_cat2 sr_cond_cat3

local vars `age' `inc' female black hisp married educ_hs_ind  ///
medicaid prob_dem `cond' adl_diff_ind srh_fp ind_helper_any ind_paid_helper metro_ind northeast midwest south

svy, subpop(if wave==1 & firstdem==1 & inrange(homebound_cat,2,4) & prob_dem==1): stcox `vars' //, nohr mgale(mg)
*stcoxkm. by(income_cat)
qui outreg, ctitles("" "Homebound") varlabels stats(e_b p)

stphplot, by(income_cat) adjust(`age'  female black hisp married educ_hs_ind  ///
medicaid prob_dem `cond' adl_diff_ind srh_fp ind_helper_any ind_paid_helper metro_ind northeast midwest south)
stphplot, by(income_cat)

gen timenh=firstnh
replace timenh=lastwave if missing(firstnh)
stset timenh, failure(evernh)
sts graph, by(income_cat)
graph save km_nh_dem, replace
graph export km_nh_dem.pdf, replace


svy, subpop(if wave==1 & firstdem==1 & inrange(homebound_cat,2,4) & prob_dem==1): stcox `vars'

qui outreg, merge ctitles("" "Nursing home") varlabels stats(e_b p)

gen either=everhb==1 | evernh==1
stset time, failure(either)
sts graph, by(income_cat)
graph save km_either_dem, replace
graph export km_either_dem.pdf, replace

svy, subpop(if wave==1 & firstdem==1 & inrange(homebound_cat,2,4) & prob_dem==1): stcox `vars'

qui outreg using homebound_income_cox_models_dem, merge ctitles("" "HB or NH") varlabels  ///
title(Cox proportional hazard models) stats(e_b p) replace

predict p 
sum `vars' if missing(p)

local vars `age' `inc' female black hisp married educ_hs_ind  ///
medicaid prob_dem `cond' adl_diff_ind srh_fp ind_helper_any ind_paid_helper metro_ind northeast midwest south



sort spid wave
by spid: gen hb2=inlist(nwstat,2,3) if nwstat<7
by spid: gen nh2=inlist(nwstat,4,5) if nwstat<7
gen either2=hb2==1 | nh2==1 if !missing(hb2)
svy, subpop(if wave==1 & inrange(homebound_cat,2,4) & prob_dem==1): logit hb2 `vars'
qui outreg, stats(e_b p) ctitles("" "Homebound") varlabels
svy, subpop(if wave==1 & inrange(homebound_cat,2,4) & prob_dem==1): logit nh2 `vars'
qui outreg, stats(e_b p) ctitles("" "Nursing Home") varlabels merge
svy, subpop(if wave==1 & inrange(homebound_cat,2,4) & prob_dem==1): logit either2 `vars'
qui outreg, stats(e_b p) ctitles("" "HB or NH") varlabels merge

outreg using homebound_income_logit_dem, replay replace ///
title(Logistic regression on next wave status) ///
note("Among wave 1 non-homebound community dwelling SPs with dementia")


H="updated to include 2015 cohort"
clear all
set more off
capture log close


cd "E:\nhats\data\projects\Homebound\logs"
use "E:\nhats\data\NHATS cleaned\sp_round_1_6.dta" if lml==0, clear


//reweight so later waves aren't overweighted
gen orig_weight=anfinw
sum anfinw if wave==1
gen n=1
sum n if wave==1 [aw=anfinw]
local w=r(sum)
forvalues i=1/6 {
sum n if wave==`i' [aw=anfinw]
replace anfinw=anfinw*`w'/r(sum) if wave==`i'
}
svyset [pw=n]
drop n
//reset wave to 1/2 from 5/6 to run for 2015 cohort
replace wave=wave-4 if year==2015
gen ind_replenish=year==2015
label var ind_replenish "2015 Replenishment Cohort"

gen ind_noone=n_social==0
label var ind_noone "SR nobody in social network"
sort spid wave
*by spid: keep if prob_dem[1]==1
by spid: egen firstdem=min(cond(prob_dem==1,wave,.))
xtset spid wave
replace homebound_cat=. if nhres==1
gen homebound=homebound==1 if !missing(homebound) & !nhres
gen hbw=wave if homebound==1
gen nhw=wave if nhres==1
by spid, sort: egen firsthb=min(hbw)
by spid, sort: egen firstnh=min(nhw)
gen everhb=!missing(firsthb)
gen evernh=!missing(firstnh)
label var everhb "Ever HB"
label var evernh "Ever NH"
*drop if firsthb==1 | missing(homebou)
by spid: gen hbnextwave=homebound[_n+1]
by spid: gen nhnextwave=nhres[_n+1]
gen inchbnextwave=firsthb==wave+1 & homebound==0
gen incnhnextwave=firstnh==wave+1 & nhres==0
replace adl_diff_ind=1 if adl_impair==1
label var adl_diff_ind "ADL difficulty or impairment"

gen wherelandgroup=1 if missing(firsthb) & missing(firstnh)
replace wherelandgroup=2 if !missing(firsthb) 
replace wherelandgroup=3 if !missing(firstnh) 
replace wherelandgroup=4 if !missing(firstnh) & firsthb<firstnh
label define wherelandgroup 1 "Never homebound or NH resident" 2 "Future HB" ///
3 "Future NH resident" 4 "Homebound, then NH"
label values wherelandgroup wherelandgroup

sort spid wave
by spid: drop if nhres[_n-1]==1 
by spid: drop if homebound_cat[_n-1]==. & wave!=1


gen nwstatus=.
forvalues i=1/5 {
replace nwstatus=r`=`i'+1'status if wave==`i'
}
replace nwstatus=r`=wave+5'status if year==2015 & wave==1
tab nwstat
tab r2status
replace nwstatus=1 if inlist(nwstatus,60,63) & !missing(hbne)
replace nwstatus=4 if inlist(nwstatus,61)
replace nwstatus=6 if inlist(nwstatus,62,86)
replace nwstatus=7 if nwstatus>7
replace nwstatus=6 if died_12==1 & nwstatus==7
label define nwstatus 1 "Community, not homebound" 2 "Homebound, not incident" ///
3 "Incident homebound" 4 "NH Resident, not incident" ///
5 "Incident NH" 6 "Died" 7 "LFU"
label values nwstatus nwstatus
replace nwstatus=2 if hbne==1
replace nwstatus=3 if inchb==1
replace nwstat=4 if nhne==1
replace nwstat=5 if incnhne==1
label var nwstat "Status next wave"
replace died_12=0 if nwstatus<=5
label var died_12 "Died prior to next wave"

gen northeast=region==1
gen midwest=region==2
gen south=region==3
gen west=region==4
label var northe "Northeast"
label var midw "Midwest"
label var south "South"
label var west "West"
gen sr_cond_cat=1 if sr_numcond<2
replace sr_cond_cat=2 if inrange(sr_numcond,2,4)
replace sr_cond_cat=3 if inrange(sr_numcond,5,15)
label define sr_cond_cat 1 "0-1 SR condition" 2 "2-4 SR conditions" 3 "5+ SR conditions"
label values sr_cond_cat sr_cond_cat
tab sr_cond_cat, gen(sr_cond_cat)
forvalues i=1/3 {
local lab: label sr_cond_cat `i'
label var sr_cond_cat`i' "`lab'"
}

gen status=1 if sp_ivw==1 & !missing(homebound)
replace status=2 if homebound==1
replace status=3 if nhres==1
replace status=4 if status==1 & (firsthb<wave | firstnh<wave)
label define status 1 "Community, not HB" 2 "Homebound" 3 "NH resident" 4 ///
"Community, previously HB or NH resident"
label values status status
label var status "Status this wave"

tab wave nwstat if wave<=4, row
tab nwsta status if wave==1 

sum aveincome
forvalues i=1/4 {
gen inccat`i'=income_cat==`i'-1
local lab : label income_cat `=`i'-1'
label var inccat`i' "Income: `lab'"
}
gen prob_dementia=dem_3==1 if !missing(dem_3)
label var prob_dementia "Probable dementia"

by spid, sort: gen persontime=_N
replace persontime=firsthb if firsthb<persontime
replace persontime=firstnh if firstnh<persontime
label var persontime "Waves contributing information"

local cvars1 age
local cvars2 n_social_network persontime aveincome n_helpers n_paid_helpers tot_hrsmonth_help_i ///
tot_hrsmonth_paid_i 
local ivars1 female white black hisp other_race married livealone educ_hs_ind proxy ind_noone
local ivars2 ind_any_helpers ind_paid_helper top_quartile_help_helped ///
medicaid medigap srh_fp nhres ///
sr_ami_ever sr_stroke_ever sr_cancer_ever sr_hip_ever sr_heart_dis_ever ///
sr_htn_ever sr_ra_ever sr_osteoprs_ever sr_diabetes_ever sr_lung_dis_ever ///
prob_dementia dem_2_cat adl_diff_ind adl_independent iadl_diff_ind iadl_independent 
local ivars3 adl1 adl2 adl3 iadl1 iadl2 iadl3 adl_eat_help adl_bath_help adl_toil_help ///
adl_dres_help adl_ins_help adl_bed_help iadl_laun_help ///
iadl_shop_help iadl_meal_help iadl_bank_help iadl_meds_help ///
 reg_doc_seen sr_hosp_ind
gen lfunextwave=nwstatus==7
label var lfune "Lost to follow up prior to next wave"
local cvars1 age
local cvars2 persontime  aveincome
local ivars1 female white black hisp other_race married 
label var inchb "Incident Homebound Next Wave"
label var incnh "Incident Nursing Home Next Wave"
local ivars2 inccat1 inccat2 inccat3 inccat4 creditdebt medpaynotcash govtasst proxy  ///
medicaid medigap srh_fp adl_eat_help adl_bath_help adl_toil_help adl_dres_help ///
adl_ins_help adl_bed_help adl_impair iadl_impair ///
sr_cond_cat1 sr_cond_cat2 sr_cond_cat3 sr_ami_ever sr_stroke_ever sr_cancer_ever sr_hip_ever sr_heart_dis_ever ///
sr_htn_ever sr_ra_ever sr_osteoprs_ever sr_diabetes_ever sr_lung_dis_ever ///
prob_dementia dem_2_cat adl_diff_ind adl_independent inchbnextwave incnhnextwave ///
lfunextwave died_12 everhb evernh metro_ind northeast midwest south ind_replenish


gen n=1

forvalues i=1/7 {
gen group`i'=nwstatus==`i'
}


preserve
drop group*
forvalues i=1/3 {
gen group`i'=status==`i'
}
tab nwstatus,gen(nw)
levelsof nwstatus, local(levels)

foreach l of local levels {
local lab : label nwstatus `l'
label var nw`l' "`lab'"
local nw `nw' nw`l'
}


*keep if wave==1 
gen group_all=1
local rn : word count 1 `cvars1' `cvars2' `ivars1' `ivars2' `coutcomes' `coutcomes' `ioutcomes' 1 1
di `rn'
mat tab1=J(`rn',8,.)
mat stars=J(`rn',8,0)
local r=1
local c=1
foreach i in _all 1 2 3 {
	foreach round in 1 2 {
		foreach x of local cvars`round' {
			qui sum `x' if group`i'==1  & wave==1  [aw=anfin]
			mat tab1[`r',`c']=r(mean)
			if inlist("`i'","2","4") {
				svy, subpop(if wave==1  &group`i'==1 | group1==1): reg `x' group`i' 
				test
				mat tab1[`r',`c'+1]=r(p)
				mat stars[`r',`c'+1]=(r(p)<.05)+(r(p)<.01)
}
			local r=`r'+1
}
		foreach x of local ivars`round' {
			qui sum `x' if group`i'==1 & wave==1  [aw=anfin]
			mat tab1[`r',`c']=r(mean)*100
			if inlist("`i'","2","4") {
				svy, subpop(if wave==1  &group`i'==1 | group1==1): tab `x' group`i' 
				mat tab1[`r',`c'+1]=e(p_Pear)
				mat stars[`r',`c'+1]=(e(p_Pear)<.05)+(e(p_Pear)<.01)
}
			local r=`r'+1
}
}
	local r=`r'+1

	
	foreach x of local coutcomes {
		qui sum `x' if group`i'==1 & wave==1  [aw=anfin],d
		mat tab1[`r',`c']=r(mean)
		if inlist("`i'","2","4") {
				svy, subpop(if wave==1  &group`i'==1 | group1==1): reg `x' group`i' 
				test
				mat tab1[`r',`c'+1]=r(p)
				mat stars[`r',`c'+1]=(r(p)<.05)+(r(p)<.01)
}
		local r=`r'+1
*		if "`x'"=="tot_paid_by_mc_12m_wi_n0" {
			qui sum `x' if group`i'==1 & wave==1  [aw=anfin],d 
			mat tab1[`r',`c']=r(p50)
			local r=`r'+1
*}
}
	foreach x of local ioutcomes {
		qui sum `x' if group`i'==1 & wave==1  [aw=anfin]
		mat tab1[`r',`c']=r(mean)*100
			if inlist("`i'","2","4") {
				svy, subpop(if wave==1  &group`i'==1 | group1==1): tab `x' group`i' 
				mat tab1[`r',`c'+1]=e(p_Pear)
				mat stars[`r',`c'+1]=(e(p_Pear)<.05)+(e(p_Pear)<.01)
}
			local r=`r'+1
}
	qui sum n if group`i'==1 & wave==1  [aw=anfin]
	mat tab1[`r',`c']=r(N)
	*mat tab1[`r'+1,`c']=r(sum)
	local r=1
	local c=`c'+2
}

foreach x in `coutcomes' {
local rnames `rnames' "`x'" "Median"
}

mat rownames tab1=`cvars1' `ivars1' `cvars2' `ivars2' "_" N "Estimate"

frmttable using sample_characteristics_incl_2015_samp_unweighted, replace statmat(tab1) ///
 title("Sample Characteristics by Status at Wave") ///
 ctitles("" "All" "" "Community" "" "Homebound" "P-value" "Nursing Home" "P-value") ///
 sdec(2) annotate(stars) asymbol(*,*) ///
 varlabels note("Wave 1/5 NHATS sample")
 restore
 
 /*
preserve
keep if status==1
local rn : word count 1 `cvars1' `cvars2' `ivars1' `ivars2' `coutcomes' `coutcomes' `ioutcomes' 1 1
di `rn'
mat tab1=J(`rn',7,.)
mat stars=J(`rn',5,0)
local r=1
local c=1
forvalues i=1/7 {
	foreach round in 1 2 {
		foreach x of local cvars`round' {
			qui sum `x' if group`i'==1 & wave==1  [aw=anfin]
			mat tab1[`r',`c']=r(mean)
			if inlist("`i'","2","3","4") {
				qui ttest `x' if group`i'==1 | group1==1, by(group`i')
				mat stars[`r',`c']=(r(p)<.01) + (r(p)<.05)
}
			local r=`r'+1
}
		foreach x of local ivars`round' {
			qui sum `x' if group`i'==1 & wave==1  [aw=anfin]
			mat tab1[`r',`c']=r(mean)*100
			if inlist("`i'","2","3","4") {
				svy, subpop(if status==1 & wave==1  & nwstatus<=5 &group`i'==1 | group1==1): tab `x' group`i' 
				mat stars[`r',`c']=(r(p)<.01) + (r(p)<.05)
}
			local r=`r'+1
}
}
	local r=`r'+1

	
	foreach x of local coutcomes {
		qui sum `x' if group`i'==1,d
		mat tab1[`r',`c']=r(mean)
		if inlist("`i'","2","3","4") {
			qui ttest `x' if group`i'==1 | group1==1, by(group`i')
			mat stars[`r',`c']=(r(p)<.01) + (r(p)<.05)
}
		local r=`r'+1
*		if "`x'"=="tot_paid_by_mc_12m_wi_n0" {
			qui sum `x' if group`i'==1,d
			mat tab1[`r',`c']=r(p50)
			local r=`r'+1
*}
}
	foreach x of local ioutcomes {
		qui sum `x' if group`i'==1
		mat tab1[`r',`c']=r(mean)*100
			if inlist("`i'","2","3","4") {
				svy, subpop(if status==1 & wave==1  & nwstatus<=5 &group`i'==1 | group1==1): tab `x' group`i' 
				mat stars[`r',`c']=(r(p)<.01) + (r(p)<.05)
}
			local r=`r'+1
}
	qui sum n if group`i'==1 & wave==1  [aw=anfin]
	
	mat tab1[`r',`c']=r(N)
	mat tab1[`r'+1,`c']=r(sum)
	local r=1
	local c=`c'+1
}

foreach x in `coutcomes' {
local rnames `rnames' "`x'" "Median"
}

mat rownames tab1=`cvars1' `ivars1' `cvars2' `ivars2' "_" N "Estimate"

frmttable using sample_characteristics_incl_2015_samp_unweighted, addtable statmat(tab1) ///
 title("Sample Characteristics by next wave status") ///
 ctitles("" "Community" "HB, Not Incident" "Incident HB" "NH, Not Incident" "Incident NH" ///
 "Died" "LFU") ///
 sdec(2) annotate(stars) asymbol(*,*) ///
 varlabels note("Cross-wave NHATS community-dwelling sample, by next-wave status")

restore
preserve
keep if status==1
local rn : word count 1 `cvars1' `cvars2' `ivars1' `ivars2' `coutcomes' `coutcomes' `ioutcomes' 1 1
di `rn'
mat tab1=J(`rn',4,.)
mat stars=J(`rn',4,0)
local r=1
local c=1

drop group*
forvalues i=1/4 {
gen group`i'=inccat`i'
local lab`i' : var label inccat`i'
}

forvalues i=1/4 {
	foreach round in 1 2 {
		foreach x of local cvars`round' {
			qui sum `x' if group`i'==1 & wave==1  [aw=anfin]
			mat tab1[`r',`c']=r(mean)
			if inlist("`i'","2","3","4") {
				qui ttest `x' if group`i'==1 | group1==1, by(group`i')
				mat stars[`r',`c']=(r(p)<.01) + (r(p)<.05)
}
			local r=`r'+1
}
		foreach x of local ivars`round' {
			qui sum `x' if group`i'==1 & wave==1  [aw=anfin]
			mat tab1[`r',`c']=r(mean)*100
			if inlist("`i'","2","3","4") {
				svy, subpop(if status==1 & wave==1  & nwstatus<=5 &group`i'==1 | group1==1): tab `x' group`i' 
				mat stars[`r',`c']=(r(p)<.01) + (r(p)<.05)
}
			local r=`r'+1
}
}
	local r=`r'+1

	
	foreach x of local coutcomes {
		qui sum `x' if group`i'==1,d
		mat tab1[`r',`c']=r(mean)
		if inlist("`i'","2","3","4") {
			qui ttest `x' if group`i'==1 | group1==1, by(group`i')
			mat stars[`r',`c']=(r(p)<.01) + (r(p)<.05)
}
		local r=`r'+1
*		if "`x'"=="tot_paid_by_mc_12m_wi_n0" {
			qui sum `x' if group`i'==1,d
			mat tab1[`r',`c']=r(p50)
			local r=`r'+1
*}
}
	foreach x of local ioutcomes {
		qui sum `x' if group`i'==1
		mat tab1[`r',`c']=r(mean)*100
			if inlist("`i'","2","3","4") {
				svy, subpop(if status==1 & wave==1  & nwstatus<=5 &group`i'==1 | group1==1): tab `x' group`i' 
				mat stars[`r',`c']=(r(p)<.01) + (r(p)<.05)
}
			local r=`r'+1
}
	qui sum n if group`i'==1 & wave==1  [aw=anfin]
	
	mat tab1[`r',`c']=r(N)
	mat tab1[`r'+1,`c']=r(sum)
	local r=1
	local c=`c'+1
}

foreach x in `coutcomes' {
local rnames `rnames' "`x'" "Median"
}

mat rownames tab1=`cvars1' `ivars1' `cvars2' `ivars2' "_" N "Estimate"

frmttable using sample_characteristics_incl_2015_samp_unweighted, addtable statmat(tab1) ///
 title("Sample Characteristics by Income category") ///
 ctitles("" "`lab1'" "`lab2'" "`lab3'" "`lab4'") ///
 sdec(2) annotate(stars) asymbol(*,*) ///
 varlabels note("Cross-wave NHATS community-dwelling sample, by income group")
restore*/




local cvars1 age 
local ivars1 female
preserve
drop group*
*keep if status==1 & wave==1  & nwstatus<=5
replace wherela=2 if wherela==4
tab wherela, gen(group)
forvalues i=1/3 {
local lab : label wherelandgroup `i'
label var group`i' "`lab'"
}
tab1 group*
local rn : word count 1 `cvars1' `cvars2' `ivars1' `ivars2' `coutcomes' `coutcomes' `ioutcomes' 1 1
di `rn'
mat tab1=J(`rn',6,.)
mat stars=J(`rn',6,0)
local r=1
local c=1
forvalues i=1/3 {
	foreach round in 1 2 {
		foreach x of local cvars`round' {
			qui sum `x' if group`i'==1 & wave==1  & status==1 & wave==1  & nwstatus<=5 [aw=anfin]
			mat tab1[`r',`c']=r(mean)
			if inlist("`i'","2","3","4") {
				svy, subpop(if status==1 & wave==1  & nwstatus<=5 &group`i'==1 | group1==1): reg `x' group`i' 
				test
				mat tab1[`r',`c'+1]=r(p)
				mat stars[`r',`c'+1]=(r(p)<.05)+(r(p)<.01)
}
			local r=`r'+1
}
		foreach x of local ivars`round' {
			qui sum `x' if group`i'==1 & wave==1  & status==1 & wave==1  & nwstatus<=5 [aw=anfin]
			mat tab1[`r',`c']=r(mean)*100
			if inlist("`i'","2","3","4") {
				svy, subpop(if status==1 & wave==1  & nwstatus<=5 &group`i'==1 | group1==1): tab `x' group`i' 
				mat tab1[`r',`c'+1]=e(p_Pear)
				mat stars[`r',`c'+1]=(e(p_Pear)<.05)+(e(p_Pear)<.01)
}
			local r=`r'+1
}
}
	local r=`r'+1

	
	foreach x of local coutcomes {
		qui sum `x' if group`i'==1 & status==1 & wave==1  & nwstatus<=5,d
		mat tab1[`r',`c']=r(mean)
		if inlist("`i'","2","3","4") {
				svy, subpop(if status==1 & wave==1  & nwstatus<=5 &group`i'==1 | group1==1): reg `x' group`i' 
				test
				mat tab1[`r',`c'+1]=r(p)
				mat stars[`r',`c'+1]=(r(p)<.05)+(r(p)<.01)
}
		local r=`r'+1
*		if "`x'"=="tot_paid_by_mc_12m_wi_n0" {
			qui sum `x' if group`i'==1,d
			mat tab1[`r',`c']=r(p50)
			local r=`r'+1
*}
}
	foreach x of local ioutcomes {
		qui sum `x' if group`i'==1 & status==1 & wave==1  & nwstatus<=5
		mat tab1[`r',`c']=r(mean)*100
			if inlist("`i'","2","3") {
				svy, subpop(if status==1 & wave==1  & nwstatus<=5 &group`i'==1 | group1==1): tab `x' group`i' 
				mat tab1[`r',`c'+1]=e(p_Pear)
				mat stars[`r',`c'+1]=(e(p_Pear)<.05)+(e(p_Pear)<.01)
}
			local r=`r'+1
}
	qui sum n if group`i'==1 & wave==1  & status==1 & wave==1  & nwstatus<=5 [aw=anfin]
	
	mat tab1[`r',`c']=r(N)
	*mat tab1[`r'+1,`c']=r(sum)
	local r=1
	local c=`c'+2
}

foreach x in `coutcomes' {
local rnames `rnames' "`x'" "Median"
}

mat rownames tab1=`cvars1' `ivars1' `cvars2' `ivars2' "_" N "Estimate"

frmttable using sample_characteristics_incl_2015_samp_unweighted, addtable statmat(tab1) ///
 title("Sample Characteristics by future homebound status") ///
 ctitles("" "Never Homebound or NH res" "" "Future HB" "P-value" "Future NH" "P-value") ///
 sdec(2) annotate(stars) asymbol(*,*) ///
 varlabels note("Wave 1/5 community-dwelling sample, by ultimate homebound status" ///
 "Excludes those Lost to Follow up or dead prior to wave 2" ///
 "Future status evaluated at HB or NH, or final wave prior to dropout/wave 6")

restore
replace wherela=2 if wherela==4
preserve
tab wherela, gen(whereland)
forvalues i=1/3 {
local lab : label wherelandgroup `i'
label var whereland`i' "`lab'"
}
*keep if status==1 & wave==1 

local ivars2 inccat1 inccat2 inccat3 inccat4 creditdebt medpaynotcash govtasst ///
 whereland1 whereland2 whereland3 proxy  ///
medicaid medigap srh_fp adl_eat_help adl_bath_help adl_toil_help adl_dres_help ///
adl_ins_help adl_bed_help adl_impair iadl_impair ///
sr_cond_cat1 sr_cond_cat2 sr_cond_cat3 sr_ami_ever sr_stroke_ever sr_cancer_ever sr_hip_ever sr_heart_dis_ever ///
sr_htn_ever sr_ra_ever sr_osteoprs_ever sr_diabetes_ever sr_lung_dis_ever ///
prob_dementia dem_2_cat adl_diff_ind adl_independent inchbnextwave incnhnextwave ///
died_12 lfunextwave everhb evernh metro_ind northeast midwest south ind_replenish

local rn : word count 1 `cvars1' `cvars2' `ivars1' `ivars2' `coutcomes' `coutcomes' `ioutcomes' 1 1
di `rn'
mat tab1=J(`rn',8,.)
mat stars=J(`rn',8,0)
local r=1
local c=1

drop group*
forvalues i=1/4 {
gen group`i'=inccat`i'
local lab`i' : var label inccat`i'
}

forvalues i=1/4 {
	foreach round in 1 2 {
		foreach x of local cvars`round' {
			qui sum `x' if group`i'==1 & wave==1  & status==1 & wave==1  [aw=anfin]
			mat tab1[`r',`c']=r(mean)
			if inlist("`i'","2","3","4") {
				svy, subpop(if status==1 & wave==1   &group`i'==1 | group1==1): reg `x' group`i' 
				test
				mat tab1[`r',`c'+1]=r(p)
				mat stars[`r',`c'+1]=(r(p)<.05)+(r(p)<.01)
}
			local r=`r'+1
}
		foreach x of local ivars`round' {
			qui sum `x' if group`i'==1 & wave==1  & status==1 & wave==1  [aw=anfin]
			mat tab1[`r',`c']=r(mean)*100
			if inlist("`i'","2","3","4") {
				svy, subpop(if status==1 & wave==1  &group`i'==1 | group1==1): tab `x' group`i' 
				mat tab1[`r',`c'+1]=e(p_Pear)
				mat stars[`r',`c'+1]=(e(p_Pear)<.05)+(e(p_Pear)<.01)
}
			local r=`r'+1
}
}
	local r=`r'+1

	
	foreach x of local coutcomes {
		qui sum `x' if group`i'==1 & status==1 & wave==1 ,d
		mat tab1[`r',`c']=r(mean)
		if inlist("`i'","2","3","4") {
				svy, subpop(if status==1 & wave==1  & group`i'==1 | group1==1): reg `x' group`i' 
				test
				mat tab1[`r',`c'+1]=r(p)
				mat stars[`r',`c'+1]=(r(p)<.05)+(r(p)<.01)
}
		local r=`r'+1
*		if "`x'"=="tot_paid_by_mc_12m_wi_n0" {
			qui sum `x' if group`i'==1,d
			mat tab1[`r',`c']=r(p50)
			local r=`r'+1
*}
}
	foreach x of local ioutcomes {
		qui sum `x' if group`i'==1 & status==1 & wave==1 
		mat tab1[`r',`c']=r(mean)*100
			if inlist("`i'","2","3","4") {
				svy, subpop(if status==1 & wave==1  & group`i'==1 | group1==1): tab `x' group`i' 
				mat tab1[`r',`c'+1]=e(p_Pear)
				mat stars[`r',`c'+1]=(e(p_Pear)<.05)+(e(p_Pear)<.01)
}
			local r=`r'+1
}
	qui sum n if group`i'==1 & wave==1  [aw=anfin]
	
	mat tab1[`r',`c']=r(N)
	*mat tab1[`r'+1,`c']=r(sum)
	local r=1
	local c=`c'+2
}

foreach x in `coutcomes' {
local rnames `rnames' "`x'" "Median"
}

mat rownames tab1=`cvars1' `ivars1' `cvars2' `ivars2' "_" N "Estimate"

frmttable using sample_characteristics_incl_2015_samp_unweighted, addtable statmat(tab1) ///
 title("Sample Characteristics by Income category") ///
 ctitles("" "`lab1'" "" "`lab2'" "P-value" "`lab3'" "P-value" "`lab4'" "P-value") ///
 sdec(2) annotate(stars) asymbol(*,*) ///
 varlabels note("Wave 1/5 community-dwelling sample, by income group")
restore
preserve
*keep if status==1 & wave==1  & nwstatus<=5
tab wherela, gen(whereland)
forvalues i=1/3 {
local lab : label wherelandgroup `i'
label var whereland`i' "`lab'"
}


local rn : word count 1 `cvars1' `cvars2' `ivars1' `ivars2' `coutcomes' `coutcomes' `ioutcomes' 1 1
di `rn'
mat tab1=J(`rn',8,.)
mat stars=J(`rn',8,0)
local r=1
local c=1

drop group*
forvalues i=1/4 {
gen group`i'=inccat`i'
local lab`i' : var label inccat`i'
}

forvalues i=1/4 {
	foreach round in 1 2 {
		foreach x of local cvars`round' {
			qui sum `x' if group`i'==1 & wave==1  & status==1 & wave==1  & nwstatus<=5 [aw=anfin]
			mat tab1[`r',`c']=r(mean)
			if inlist("`i'","2","3","4") {
				svy, subpop(if status==1 & wave==1  & nwstatus<=5 &group`i'==1 | group1==1): reg `x' group`i' 
				test
				mat tab1[`r',`c'+1]=r(p)
				mat stars[`r',`c'+1]=(r(p)<.05)+(r(p)<.01)
}
			local r=`r'+1
}
		foreach x of local ivars`round' {
			qui sum `x' if group`i'==1 & wave==1  & status==1 & wave==1  & nwstatus<=5 [aw=anfin]
			mat tab1[`r',`c']=r(mean)*100
			if inlist("`i'","2","3","4") {
				svy, subpop(if status==1 & wave==1  & nwstatus<=5 &group`i'==1 | group1==1): tab `x' group`i' 
				mat tab1[`r',`c'+1]=e(p_Pear)
				mat stars[`r',`c'+1]=(e(p_Pear)<.05)+(e(p_Pear)<.01)
}
			local r=`r'+1
}
}
	local r=`r'+1

	
	foreach x of local coutcomes {
		qui sum `x' if group`i'==1 & status==1 & wave==1  & nwstatus<=5,d
		mat tab1[`r',`c']=r(mean)
		if inlist("`i'","2","3","4") {
				svy, subpop(if status==1 & wave==1  & nwstatus<=5 &group`i'==1 | group1==1): reg `x' group`i' 
				test
				mat tab1[`r',`c'+1]=r(p)
				mat stars[`r',`c'+1]=(r(p)<.05)+(r(p)<.01)
}
		local r=`r'+1
*		if "`x'"=="tot_paid_by_mc_12m_wi_n0" {
			qui sum `x' if group`i'==1,d
			mat tab1[`r',`c']=r(p50)
			local r=`r'+1
*}
}
	foreach x of local ioutcomes {
		qui sum `x' if group`i'==1 & status==1 & wave==1  & nwstatus<=5
		mat tab1[`r',`c']=r(mean)*100
			if inlist("`i'","2","3","4") {
				svy, subpop(if status==1 & wave==1  & nwstatus<=5 &group`i'==1 | group1==1): tab `x' group`i' 
				mat tab1[`r',`c'+1]=e(p_Pear)
				mat stars[`r',`c'+1]=(e(p_Pear)<.05)+(e(p_Pear)<.01)
}
			local r=`r'+1
}
	qui sum n if group`i'==1 & wave==1  [aw=anfin]
	
	mat tab1[`r',`c']=r(N)
	mat tab1[`r'+1,`c']=r(sum)
	local r=1
	local c=`c'+2
}

foreach x in `coutcomes' {
local rnames `rnames' "`x'" "Median"
}

mat rownames tab1=`cvars1' `ivars1' `cvars2' `ivars2' "_" N "Estimate"

frmttable using sample_characteristics_incl_2015_samp_unweighted, addtable statmat(tab1) ///
 title("Sample Characteristics by Income category") ///
 ctitles("" "`lab1'" "" "`lab2'" "P-value" "`lab3'" "P-value" "`lab4'" "P-value") ///
 sdec(2) annotate(stars) asymbol(*,*) ///
 varlabels note("Wave 1/5 community-dwelling sample, by income group" ///
 "Excluding those LFU or dead prior to wave 2")
restore
preserve

sort spid wave
by spid: drop if wave>year+2010 & status[_n-1]!=1
xtset spid wave
drop if l.status!=1 & wave>1

local r=1
local c=2
tokenize A B C D E F G H I J K L M N O P Q R S T U V W X Y Z

putexcel set homebound_over_time.xlsx, replace
levelsof nwstatus, local(levels)
putexcel A`r'="Next-wave status among community-dwelling SPs who have never been homebound or nursing home residents" 


forvalues timethrough=1/2 {
putexcel B`=`r'+2'="Community, not homebound" C`=`r'+2'="Homebound, not incident" D`=`r'+2'="Incident homebound" ///
E`=`r'+2'="NH resident, not incident" F`=`r'+2'="Incident NH" G`=`r'+2'="Died" H`=`r'+2'="LFU" ///
I`=`r'+2'="Total Community dwelling in wave"
local r=`r'+3
forvalues i=1/5 {
	qui sum status if wave==`i' & status==1 & !missing(homebound_cat)
	local denom=r(N)
	qui putexcel A`r'="Wave `i'" A`=`r'+1'="N" A`=`r'+2'="% of non-homebound"
	local r=`r'+1
	foreach l of local levels {
		qui sum nwstatus if nwstatus==`l' & wave==`i' & status==1
		qui putexcel ``c''`r'=(r(N))
		qui putexcel ``c''`=`r'+1'=(r(N)/`denom'*100), nformat(number_d2)
		local c=`c'+1
}
	putexcel ``c''`r'=`denom'
	local r=`r'+3
	local c=2
}
restore
preserve
replace status=1 if status==4
local r=`r'+4
putexcel A`r'="Next-wave status among all community-dwelling SPs" 
}




restore
label var educ_hs_ind "Education: HS+"
preserve
*log using homebound_income_cox_log.txt, text replace
drop if missing(homebound_cat) & !nhres
by spid, sort: egen lastwave=max(wave)
*keep if wave==1 
tab lastwave
*keep if inrange(homebound_cat,2,4)
gen time=lastwave
gen first_hb_or_nh=firsthb
replace first_hb=firstnh if firstnh<firsthb
replace time=first_hb_or_nh if !missing(first_hb_or_nh)

gen ind_helper_any=n_helpers>0
label var ind_helper_any "Any helpers"
gen dies=!missing(death_date)
gen ultimate=everhb==1
replace ultimate=2 if evernh==1 & !ultimate
replace ultimate=2 if firstnh<firsthb
replace ultimate=3 if !missing(death_date) & !ultimate
stset time, failure(everhb)
sts graph, by(income_cat)
graph save km_hb, replace
graph export km_hb.pdf, replace

forvalues i=1/6 {
local lab : label r1d2intvrage `i'
label define agecat `i' "`lab'", modify
}


foreach x in agecat income_cat {
levelsof `x', local(levels)
foreach l of local levels {
	gen `x'`l'=`x'==`l'
	local lab : label `x' `l'
	label var `x'`l' "`lab'"
}
}

forvalues i=2/6 {
	local age `age' agecat`i'
}

forvalues i=1/3 {
	local inc `inc' income_cat`i'
}

local cond sr_cond_cat2 sr_cond_cat3

local vars `age' `inc' female black hisp married ind_noone educ_hs_ind  ///
medicaid prob_dem `cond' adl_diff_ind srh_fp ///
ind_paid_helper metro_ind northeast midwest south ind_replenish

svy, subpop(if wave==1 &  inrange(homebound_cat,2,4)): stcox `vars' //, nohr mgale(mg)
*stcoxkm. by(income_cat)
qui outreg, ctitles("" "Homebound") varlabels stats(e_b p)

stphplot, by(income_cat) adjust(`age'  female black hisp married  ind_noone  educ_hs_ind  ///
medicaid prob_dem `cond' adl_diff_ind srh_fp ind_paid_helper ///
metro_ind northeast midwest south)
stphplot, by(income_cat)

gen timenh=firstnh
replace timenh=lastwave if missing(firstnh)
stset timenh, failure(evernh)
sts graph, by(income_cat)
graph save km_nh, replace
graph export km_nh.pdf, replace


svy, subpop(if wave==1 &  inrange(homebound_cat,2,4)): stcox `vars'

qui outreg, merge ctitles("" "Nursing home") varlabels stats(e_b p)

gen either=everhb==1 | evernh==1
stset time, failure(either)
sts graph, by(income_cat)
graph save km_either, replace
graph export km_either.pdf, replace

local vars `age' `inc' female black hisp married  ind_noone  educ_hs_ind  ///
medicaid prob_dem `cond' adl_diff_ind srh_fp ///
ind_paid_helper metro_ind northeast midwest south ind_replenish

svy, subpop(if wave==1 &  inrange(homebound_cat,2,4)): stcox `vars'

qui outreg using homebound_income_cox_models_incl_2015_samp_unweighted, merge ///
ctitles("" "HB or NH") varlabels  ///
title(Cox proportional hazard models) stats(e_b p) replace ///
note("Among wave 1/5 non-homebound community dwelling SPs")

predict p 
sum `vars' if missing(p)

sort spid wave
by spid: gen hb2=inlist(nwstat,2,3) if nwstat<7
by spid: gen nh2=inlist(nwstat,4,5) if nwstat<7
gen either2=hb2==1 | nh2==1 if !missing(hb2)
svy, subpop(if wave==1 & inrange(homebound_cat,2,4)): logit hb2 `vars'
qui outreg, stats(e_b p) ctitles("" "Homebound") varlabels
svy, subpop(if wave==1 & inrange(homebound_cat,2,4)): logit nh2 `vars'
qui outreg, stats(e_b p) ctitles("" "Nursing Home") varlabels merge
svy, subpop(if wave==1 & inrange(homebound_cat,2,4)): logit either2 `vars'
qui outreg, stats(e_b p) ctitles("" "HB or NH") varlabels merge

outreg using homebound_income_logit_incl_2015_samp_unweighted, replay replace ///
title(Logistic regression on next wave status) ///
note("Among wave 1/5 non-homebound community dwelling SPs")

//competing risk regressions (competing for nh/death for hb, hb/death for nh)
//set death_date=. if dies after one of these others
replace everhb=0 if ultimate!=1
stset time, failure(everhb)
stcrreg `vars' if wave==1 & inrange(homebound_cat,2,4), ///
compete(ultimate==0 2 3)

qui outreg, ctitles("" "Homebound") varlabels stats(e_b p)

replace evernh=0 if ultimate!=2
stset timenh, failure(evernh)
stcrreg `vars' if wave==1 & inrange(homebound_cat,2,4), ///
compete(ultimate==0 1 3)

qui outreg, merge ctitles("" "Nursing home") varlabels stats(e_b p)


stset time, failure(either)
stcrreg `vars' if wave==1 & inrange(homebound_cat,2,4), ///
compete(ultimate==0 3)

qui outreg using homebound_income_competing_risks_regs_incl_2015_samp_unweighted, merge ///
ctitles("" "HB or NH") varlabels  ///
title(Competing risk regressions) stats(e_b p) replace ///
note("Among wave 1/5 non-homebound community dwelling SPs")


H="adding extra categories for income & education"
clear all
set more off
capture log close


cd "E:\nhats\data\projects\Homebound\logs"
use "E:\nhats\data\NHATS cleaned\sp_round_1_6.dta" if lml==0, clear


//reweight so later waves aren't overweighted
gen orig_weight=anfinw
sum anfinw if wave==1
gen n=1
sum n if wave==1 [aw=anfinw]
local w=r(sum)
forvalues i=1/6 {
sum n if wave==`i' [aw=anfinw]
replace anfinw=anfinw*`w'/r(sum) if wave==`i'
}
svyset [pw=n]
drop n
//reset wave to 1/2 from 5/6 to run for 2015 cohort
replace wave=wave-4 if year==2015
gen ind_replenish=year==2015
label var ind_replenish "2015 Replenishment Cohort"

gen ind_noone=n_social==0
label var ind_noone "SR nobody in social network"
sort spid wave
*by spid: keep if prob_dem[1]==1
by spid: egen firstdem=min(cond(prob_dem==1,wave,.))
xtset spid wave
replace homebound_cat=. if nhres==1
gen homebound=homebound==1 if !missing(homebound) & !nhres
gen hbw=wave if homebound==1
gen nhw=wave if nhres==1
by spid, sort: egen firsthb=min(hbw)
by spid, sort: egen firstnh=min(nhw)
replace firsthb=firsthb-1
replace firstnh=firstnh-1
gen everhb=!missing(firsthb)
gen evernh=!missing(firstnh)
label var everhb "Ever HB"
label var evernh "Ever NH"
*drop if firsthb==1 | missing(homebou)
by spid: gen hbnextwave=homebound[_n+1]
by spid: gen nhnextwave=nhres[_n+1]
gen inchbnextwave=firsthb==wave+1 & homebound==0
gen incnhnextwave=firstnh==wave+1 & nhres==0
replace adl_diff_ind=1 if adl_impair==1
label var adl_diff_ind "ADL difficulty or impairment"

gen wherelandgroup=1 if missing(firsthb) & missing(firstnh)
replace wherelandgroup=2 if !missing(firsthb) 
replace wherelandgroup=3 if !missing(firstnh) 
replace wherelandgroup=4 if !missing(firstnh) & firsthb<firstnh
label define wherelandgroup 1 "Never homebound or NH resident" 2 "Future HB" ///
3 "Future NH resident" 4 "Homebound, then NH"
label values wherelandgroup wherelandgroup

sort spid wave
by spid: drop if nhres[_n-1]==1 
by spid: drop if homebound_cat[_n-1]==. & wave!=1


gen nwstatus=.
forvalues i=1/5 {
replace nwstatus=r`=`i'+1'status if wave==`i'
}
replace nwstatus=r`=wave+5'status if year==2015 & wave==1
tab nwstat
tab r2status
replace nwstatus=1 if inlist(nwstatus,60,63) & !missing(hbne)
replace nwstatus=4 if inlist(nwstatus,61)
replace nwstatus=6 if inlist(nwstatus,62,86)
replace nwstatus=7 if nwstatus>7
replace nwstatus=6 if died_12==1 & nwstatus==7
label define nwstatus 1 "Community, not homebound" 2 "Homebound, not incident" ///
3 "Incident homebound" 4 "NH Resident, not incident" ///
5 "Incident NH" 6 "Died" 7 "LFU"
label values nwstatus nwstatus
replace nwstatus=2 if hbne==1
replace nwstatus=3 if inchb==1
replace nwstat=4 if nhne==1
replace nwstat=5 if incnhne==1
label var nwstat "Status next wave"
replace died_12=0 if nwstatus<=5
label var died_12 "Died prior to next wave"

gen northeast=region==1
gen midwest=region==2
gen south=region==3
gen west=region==4
label var northe "Northeast"
label var midw "Midwest"
label var south "South"
label var west "West"
gen sr_cond_cat=1 if sr_numcond<2
replace sr_cond_cat=2 if inrange(sr_numcond,2,4)
replace sr_cond_cat=3 if inrange(sr_numcond,5,15)
label define sr_cond_cat 1 "0-1 SR condition" 2 "2-4 SR conditions" 3 "5+ SR conditions"
label values sr_cond_cat sr_cond_cat
tab sr_cond_cat, gen(sr_cond_cat)
forvalues i=1/3 {
local lab: label sr_cond_cat `i'
label var sr_cond_cat`i' "`lab'"
}

gen status=1 if sp_ivw==1 & !missing(homebound)
replace status=2 if homebound==1
replace status=3 if nhres==1
replace status=4 if status==1 & (firsthb<wave | firstnh<wave)
label define status 1 "Community, not HB" 2 "Homebound" 3 "NH resident" 4 ///
"Community, previously HB or NH resident"
label values status status
label var status "Status this wave"

tab wave nwstat if wave<=4, row
tab nwsta status if wave==1 

//2/27/18--add extra income thresholds & education cats

levelsof educa, local(levels)
foreach l of local levels {
gen ed`l'=education==`l' if !missing(education)
local lab : label edulbl `l'
label var ed`l' "`lab'"
}
local ed
forvalues i=1/3 {
local ed `ed' ed`i'
}

/*
sum aveincome
forvalues i=1/4 {
gen inccat`i'=income_cat==`i'-1
local lab : label income_cat `=`i'-1'
label var inccat`i' "Income: `lab'"
}
*/

sum aveincome if wave==1 [aw=anfinw],d
gen inccat=1 if aveincome<=r(p10)
replace inccat=2 if inrange(aveincome,r(p10),r(p25))
replace inccat=3 if inrange(aveincome,r(p25),r(p50))
replace inccat=4 if inrange(aveincome,r(p50),r(p75))
replace inccat=5 if inrange(aveincome,r(p75),r(p90))
replace inccat=6 if inrange(aveincome,r(p90),r(max))

label define inccat 1 "Income bottom 10%" 2 "Income 10-25%" 3 "Income 25-50%" ///
4 "Income 50-75%" 5 "Income 75-90%" 6 "Income top 10%"
label values inccat inccat
forvalues i=1/6 {
gen inccat`i'=inccat==`i'
local lab : label inccat `i'
label var inccat`i' "`lab'"
}
local inccat
forvalues i=1/5 {
local inccat `inccat' inccat`i'
}
gen prob_dementia=dem_3==1 if !missing(dem_3)
label var prob_dementia "Probable dementia"

by spid, sort: gen persontime=_N
replace persontime=firsthb if firsthb<persontime
replace persontime=firstnh if firstnh<persontime
label var persontime "Waves contributing information"

local cvars1 age
local cvars2 n_social_network persontime aveincome n_helpers n_paid_helpers tot_hrsmonth_help_i ///
tot_hrsmonth_paid_i 
local ivars1 female white black hisp other_race married livealone educ_hs_ind `ed' proxy ind_noone
local ivars2 ind_any_helpers ind_paid_helper top_quartile_help_helped ///
medicaid medigap srh_fp nhres ///
sr_ami_ever sr_stroke_ever sr_cancer_ever sr_hip_ever sr_heart_dis_ever ///
sr_htn_ever sr_ra_ever sr_osteoprs_ever sr_diabetes_ever sr_lung_dis_ever ///
prob_dementia dem_2_cat adl_diff_ind adl_independent iadl_diff_ind iadl_independent 
local ivars3 adl1 adl2 adl3 iadl1 iadl2 iadl3 adl_eat_help adl_bath_help adl_toil_help ///
adl_dres_help adl_ins_help adl_bed_help iadl_laun_help ///
iadl_shop_help iadl_meal_help iadl_bank_help iadl_meds_help ///
 reg_doc_seen sr_hosp_ind
gen lfunextwave=nwstatus==7
label var lfune "Lost to follow up prior to next wave"
local cvars1 age
local cvars2 persontime  aveincome
local ivars1 female white black hisp other_race married 
label var inchb "Incident Homebound Next Wave"
label var incnh "Incident Nursing Home Next Wave"
local ivars2 `inccat' creditdebt medpaynotcash govtasst proxy  ///
medicaid medigap srh_fp adl_eat_help adl_bath_help adl_toil_help adl_dres_help ///
adl_ins_help adl_bed_help adl_impair iadl_impair ///
sr_cond_cat1 sr_cond_cat2 sr_cond_cat3 sr_ami_ever sr_stroke_ever sr_cancer_ever sr_hip_ever sr_heart_dis_ever ///
sr_htn_ever sr_ra_ever sr_osteoprs_ever sr_diabetes_ever sr_lung_dis_ever ///
prob_dementia dem_2_cat adl_diff_ind adl_independent inchbnextwave incnhnextwave ///
lfunextwave died_12 everhb evernh metro_ind northeast midwest south ind_replenish


gen n=1

forvalues i=1/7 {
gen group`i'=nwstatus==`i'
}



local cvars1 age 
local ivars1 female


replace wherela=2 if wherela==4
label var educ_hs_ind "Education: HS+"
*preserve
*log using homebound_income_cox_log.txt, text replace
drop if missing(homebound_cat) & !nhres
by spid, sort: egen lastwave=max(wave)
*keep if wave==1 
tab lastwave
*keep if inrange(homebound_cat,2,4)
gen time=lastwave-1
gen first_hb_or_nh=firsthb
replace first_hb=firstnh if firstnh<firsthb
replace time=first_hb_or_nh if !missing(first_hb_or_nh)

gen ind_helper_any=n_helpers>0
label var ind_helper_any "Any helpers"
gen dies=!missing(death_date)
gen ultimate=everhb==1
replace ultimate=2 if evernh==1 & !ultimate
replace ultimate=2 if firstnh<firsthb
replace ultimate=3 if !missing(death_date) & !ultimate
stset time, failure(everhb)
sts graph if wave==1, by(income_cat)
graph save km_hb, replace
graph export km_hb.pdf, replace

forvalues i=1/6 {
local lab : label r1d2intvrage `i'
label define agecat `i' "`lab'", modify
}


foreach x in agecat income_cat {
levelsof `x', local(levels)
foreach l of local levels {
	gen `x'`l'=`x'==`l'
	local lab : label `x' `l'
	label var `x'`l' "`lab'"
}
}

forvalues i=2/6 {
	local age `age' agecat`i'
}

forvalues i=1/3 {
	local inc `inc' income_cat`i'
}

local cond sr_cond_cat2 sr_cond_cat3

local vars `age' c.aveincome##c.aveincome female black hisp married ind_noone `ed' ///
medicaid prob_dem `cond' adl_diff_ind srh_fp ///
ind_paid_helper metro_ind northeast midwest south ind_replenish

svy, subpop(if wave==1 /*&  inrange(homebound_cat,2,4)*/): stcox `vars' //, nohr mgale(mg)
*stcoxkm. by(income_cat)
qui outreg, ctitles("" "Homebound") varlabels stats(e_b p)

stphplot if wave==1, by(income_cat) adjust(`age'  female black hisp married  ind_noone  `ed'  ///
medicaid prob_dem `cond' adl_diff_ind srh_fp ind_paid_helper ///
metro_ind northeast midwest south)
stphplot if wave==1, by(income_cat)

gen timenh=firstnh
replace timenh=lastwave-1 if missing(firstnh)
stset timenh, failure(evernh)
sts graph, by(income_cat)
graph save km_nh, replace
graph export km_nh.pdf, replace


svy, subpop(if wave==1 /*&  inrange(homebound_cat,2,4)*/): stcox `vars'

qui outreg, merge ctitles("" "Nursing home") varlabels stats(e_b p)

gen either=everhb==1 | evernh==1
stset time, failure(either)
sts graph, by(income_cat)
graph save km_either, replace
graph export km_either.pdf, replace


svy, subpop(if wave==1 /*&  inrange(homebound_cat,2,4)*/): stcox `vars'

qui outreg using homebound_income_cox_models__xtra_ses_cats, merge ///
ctitles("" "HB or NH") varlabels  ///
title(Cox proportional hazard models) stats(e_b p) replace ///
note("Among wave 1/5 non-homebound community dwelling SPs")



H="tables incl. fin. strain rd.2"
clear all
set more off
capture log close


cd "E:\nhats\data\projects\Homebound\logs"
use "E:\nhats\data\NHATS cleaned\sp_round_1_6.dta" if lml==0, clear

/*
//reweight so later waves aren't overweighted
gen orig_weight=anfinw
sum anfinw if wave==2
gen n=1
sum n if wave==2 [aw=anfinw]
local w=r(sum)
forvalues i=2/6 {
sum n if wave==`i' [aw=anfinw]
replace anfinw=anfinw*`w'/r(sum) if wave==`i'
}
svyset [pw=n]
drop n
*/
//reset wave to 1/2 from 5/6 to run for 2015 cohort
replace wave=wave-3 if year==2015
gen ind_replenish=year==2015
label var ind_replenish "2015 Replenishment Cohort"

gen ind_noone=n_social==0
label var ind_noone "SR nobody in social network"
sort spid wave
*by spid: keep if prob_dem[1]==1
by spid: egen firstdem=min(cond(prob_dem==1,wave,.))
xtset spid wave
replace homebound_cat=. if nhres==1
gen homebound=homebound==1 if !missing(homebound) & !nhres
gen hbw=wave if homebound==1
gen nhw=wave if nhres==1
by spid, sort: egen firsthb=min(hbw)
by spid, sort: egen firstnh=min(nhw)
gen everhb=!missing(firsthb)
gen evernh=!missing(firstnh)
label var everhb "Ever HB"
label var evernh "Ever NH"
*drop if firsthb==1 | missing(homebou)
by spid: gen hbnextwave=homebound[_n+1]
by spid: gen nhnextwave=nhres[_n+1]
gen inchbnextwave=firsthb==wave+1 & homebound==0
gen incnhnextwave=firstnh==wave+1 & nhres==0
replace adl_diff_ind=1 if adl_impair==1
label var adl_diff_ind "ADL difficulty or impairment"

gen wherelandgroup=1 if missing(firsthb) & missing(firstnh)
replace wherelandgroup=2 if !missing(firsthb) 
replace wherelandgroup=3 if !missing(firstnh) 
replace wherelandgroup=4 if !missing(firstnh) & firsthb<firstnh
label define wherelandgroup 1 "Never homebound or NH resident" 2 "Future HB" ///
3 "Future NH resident" 4 "Homebound, then NH"
label values wherelandgroup wherelandgroup

sort spid wave
by spid: drop if nhres[_n-1]==1 
by spid: drop if homebound_cat[_n-1]==. & wave!=1


gen nwstatus=.
forvalues i=2/5 {
replace nwstatus=r`=`i'+1'status if wave==`i'
}
replace nwstatus=r6status if year==2015 & wave==2
tab nwstat
tab r2status
replace nwstatus=1 if inlist(nwstatus,60,63) & !missing(hbne)
replace nwstatus=4 if inlist(nwstatus,61)
replace nwstatus=6 if inlist(nwstatus,62,86)
replace nwstatus=7 if nwstatus>7
replace nwstatus=6 if died_12==1 & nwstatus==7
label define nwstatus 1 "Community, not homebound" 2 "Homebound, not incident" ///
3 "Incident homebound" 4 "NH Resident, not incident" ///
5 "Incident NH" 6 "Died" 7 "LFU"
label values nwstatus nwstatus
replace nwstatus=2 if hbne==1
replace nwstatus=3 if inchb==1
replace nwstat=4 if nhne==1
replace nwstat=5 if incnhne==1
label var nwstat "Status next wave"
replace died_12=0 if nwstatus<=5
label var died_12 "Died prior to next wave"

gen northeast=region==1
gen midwest=region==2
gen south=region==3
gen west=region==4
label var northe "Northeast"
label var midw "Midwest"
label var south "South"
label var west "West"
gen sr_cond_cat=1 if sr_numcond<2
replace sr_cond_cat=2 if inrange(sr_numcond,2,4)
replace sr_cond_cat=3 if inrange(sr_numcond,5,15)
label define sr_cond_cat 1 "0-1 SR condition" 2 "2-4 SR conditions" 3 "5+ SR conditions"
label values sr_cond_cat sr_cond_cat
tab sr_cond_cat, gen(sr_cond_cat)
forvalues i=1/3 {
local lab: label sr_cond_cat `i'
label var sr_cond_cat`i' "`lab'"
}

gen status=1 if sp_ivw==1 & !missing(homebound)
replace status=2 if homebound==1
replace status=3 if nhres==1
replace status=4 if status==1 & (firsthb<wave | firstnh<wave)
label define status 1 "Community, not HB" 2 "Homebound" 3 "NH resident" 4 ///
"Community, previously HB or NH resident"
label values status status
label var status "Status this wave"


foreach x in nopayhous nopayutil nopaymed mealskip  {
replace `x'=. if `x'==2
}
replace mealskipnum=. if mealskipnum==5
gen fin_strain=.
replace fin_strain=0 if nopayhous==0 & nopayutil==0 & nopaymed==0 & mealskip==0 
replace fin_strain=1 if nopayhous==1 | nopayutil==1 | nopaymed==1 | mealskip==1
label var fin_strain "Financial Strain (Any nopay/mealskip)"

gen any_asst= govtasst
replace any_asst=1 if section8==1
label var any_asst "Reci. any Public Assist. (incl. Gov't assist./Section 8"



tab wave nwstat if wave<=4, row
tab nwsta status if wave==2 

sum aveincome
forvalues i=1/4 {
gen inccat`i'=income_cat==`i'-1
local lab : label income_cat `=`i'-1'
label var inccat`i' "Income: `lab'"
}
gen prob_dementia=dem_3==1 if !missing(dem_3)
label var prob_dementia "Probable dementia"

by spid, sort: gen persontime=_N
replace persontime=firsthb if firsthb<persontime
replace persontime=firstnh if firstnh<persontime
label var persontime "Waves contributing information"

local cvars1 age
local cvars2 n_social_network persontime aveincome n_helpers n_paid_helpers tot_hrsmonth_help_i ///
tot_hrsmonth_paid_i 
local ivars1 female white black hisp other_race married livealone educ_hs_ind proxy ind_noone
local ivars2 ind_any_helpers ind_paid_helper top_quartile_help_helped ///
medicaid medigap srh_fp nhres ///
sr_ami_ever sr_stroke_ever sr_cancer_ever sr_hip_ever sr_heart_dis_ever ///
sr_htn_ever sr_ra_ever sr_osteoprs_ever sr_diabetes_ever sr_lung_dis_ever ///
prob_dementia dem_2_cat adl_diff_ind adl_independent iadl_diff_ind iadl_independent 
local ivars3 adl1 adl2 adl3 iadl1 iadl2 iadl3 adl_eat_help adl_bath_help adl_toil_help ///
adl_dres_help adl_ins_help adl_bed_help iadl_laun_help ///
iadl_shop_help iadl_meal_help iadl_bank_help iadl_meds_help ///
 reg_doc_seen sr_hosp_ind
gen lfunextwave=nwstatus==7
label var lfune "Lost to follow up prior to next wave"
local cvars1 age
local cvars2 persontime  aveincome
local ivars1 female white black hisp other_race married 
label var inchb "Incident Homebound Next Wave"
label var incnh "Incident Nursing Home Next Wave"
local ivars2 inccat1 inccat2 inccat3 inccat4 creditdebt medpaynotcash govtasst proxy  ///
medicaid medigap srh_fp adl_eat_help adl_bath_help adl_toil_help adl_dres_help ///
adl_ins_help adl_bed_help adl_impair iadl_impair ///
sr_cond_cat1 sr_cond_cat2 sr_cond_cat3 sr_ami_ever sr_stroke_ever sr_cancer_ever sr_hip_ever sr_heart_dis_ever ///
sr_htn_ever sr_ra_ever sr_osteoprs_ever sr_diabetes_ever sr_lung_dis_ever ///
prob_dementia dem_2_cat adl_diff_ind adl_independent inchbnextwave incnhnextwave ///
lfunextwave died_12 everhb evernh metro_ind northeast midwest south ind_replenish ///
fin_strain creditdebt medcreditdebt medpaynotcash finhlpfam meals_wheels mealskip nopayhous nopayutil nopaymed any_asst
label var meals_wheels "Meals on Wheels"

gen n=1

forvalues i=1/7 {
gen group`i'=nwstatus==`i'
}


preserve
drop group*
forvalues i=1/3 {
gen group`i'=status==`i'
}
tab nwstatus,gen(nw)
levelsof nwstatus, local(levels)

foreach l of local levels {
local lab : label nwstatus `l'
label var nw`l' "`lab'"
local nw `nw' nw`l'
}


*keep if wave==2 
gen group_all=1
local rn : word count 1 `cvars1' `cvars2' `ivars1' `ivars2' `coutcomes' `coutcomes' `ioutcomes' 1 1
di `rn'
mat tab1=J(`rn',8,.)
mat stars=J(`rn',8,0)
local r=1
local c=1
foreach i in _all 1 2 3 {
	foreach round in 1 2 {
		foreach x of local cvars`round' {
			qui sum `x' if group`i'==1  & wave==2 & year==2011  [aw=anfin]
			mat tab1[`r',`c']=r(mean)
			if inlist("`i'","2","4") {
				svy, subpop(if wave==2 & year==2011 &group`i'==1 | group1==1): reg `x' group`i' 
				test
				mat tab1[`r',`c'+1]=r(p)
				mat stars[`r',`c'+1]=(r(p)<.05)+(r(p)<.01)
}
			local r=`r'+1
}
		foreach x of local ivars`round' {
			qui sum `x' if group`i'==1 & wave==2 & year==2011  [aw=anfin]
			mat tab1[`r',`c']=r(mean)*100
			if inlist("`i'","2","4") {
				svy, subpop(if wave==2 & year==2011  &group`i'==1 | group1==1): tab `x' group`i' 
				mat tab1[`r',`c'+1]=e(p_Pear)
				mat stars[`r',`c'+1]=(e(p_Pear)<.05)+(e(p_Pear)<.01)
}
			local r=`r'+1
}
}
	local r=`r'+1

	
	foreach x of local coutcomes {
		qui sum `x' if group`i'==1 & wave==2 & year==2011  [aw=anfin],d
		mat tab1[`r',`c']=r(mean)
		if inlist("`i'","2","4") {
				svy, subpop(if wave==2 & year==2011  &group`i'==1 | group1==1): reg `x' group`i' 
				test
				mat tab1[`r',`c'+1]=r(p)
				mat stars[`r',`c'+1]=(r(p)<.05)+(r(p)<.01)
}
		local r=`r'+1
*		if "`x'"=="tot_paid_by_mc_12m_wi_n0" {
			qui sum `x' if group`i'==1 & wave==2 & year==2011  [aw=anfin],d 
			mat tab1[`r',`c']=r(p50)
			local r=`r'+1
*}
}
	foreach x of local ioutcomes {
		qui sum `x' if group`i'==1 & wave==2 & year==2011  [aw=anfin]
		mat tab1[`r',`c']=r(mean)*100
			if inlist("`i'","2","4") {
				svy, subpop(if wave==2 & year==2011  &group`i'==1 | group1==1): tab `x' group`i' 
				mat tab1[`r',`c'+1]=e(p_Pear)
				mat stars[`r',`c'+1]=(e(p_Pear)<.05)+(e(p_Pear)<.01)
}
			local r=`r'+1
}
	qui sum n if group`i'==1 & wave==2 & year==2011  [aw=anfin]
	mat tab1[`r',`c']=r(N)
	*mat tab1[`r'+1,`c']=r(sum)
	local r=1
	local c=`c'+2
}

foreach x in `coutcomes' {
local rnames `rnames' "`x'" "Median"
}

mat rownames tab1=`cvars1' `ivars1' `cvars2' `ivars2' "_" N "Estimate"

frmttable using sample_characteristics_not_incl_2015_samp_weighted, replace statmat(tab1) ///
 title("Sample Characteristics by Status at Wave") ///
 ctitles("" "All" "" "Community" "" "Homebound" "P-value" "Nursing Home" "P-value") ///
 sdec(2) annotate(stars) asymbol(*,*) ///
 varlabels note("Wave 2 NHATS sample" ///
 "64 Nursing Home residents have completed an SP interview" )
 restore
 
 /*
preserve
keep if status==1
local rn : word count 1 `cvars1' `cvars2' `ivars1' `ivars2' `coutcomes' `coutcomes' `ioutcomes' 1 1
di `rn'
mat tab1=J(`rn',7,.)
mat stars=J(`rn',5,0)
local r=1
local c=1
forvalues i=1/7 {
	foreach round in 1 2 {
		foreach x of local cvars`round' {
			qui sum `x' if group`i'==1 & wave==2  [aw=anfin]
			mat tab1[`r',`c']=r(mean)
			if inlist("`i'","2","3","4") {
				qui ttest `x' if group`i'==1 | group1==1, by(group`i')
				mat stars[`r',`c']=(r(p)<.01) + (r(p)<.05)
}
			local r=`r'+1
}
		foreach x of local ivars`round' {
			qui sum `x' if group`i'==1 & wave==2  [aw=anfin]
			mat tab1[`r',`c']=r(mean)*100
			if inlist("`i'","2","3","4") {
				svy, subpop(if status==1 & wave==2  & nwstatus<=5 &group`i'==1 | group1==1): tab `x' group`i' 
				mat stars[`r',`c']=(r(p)<.01) + (r(p)<.05)
}
			local r=`r'+1
}
}
	local r=`r'+1

	
	foreach x of local coutcomes {
		qui sum `x' if group`i'==1,d
		mat tab1[`r',`c']=r(mean)
		if inlist("`i'","2","3","4") {
			qui ttest `x' if group`i'==1 | group1==1, by(group`i')
			mat stars[`r',`c']=(r(p)<.01) + (r(p)<.05)
}
		local r=`r'+1
*		if "`x'"=="tot_paid_by_mc_12m_wi_n0" {
			qui sum `x' if group`i'==1,d
			mat tab1[`r',`c']=r(p50)
			local r=`r'+1
*}
}
	foreach x of local ioutcomes {
		qui sum `x' if group`i'==1
		mat tab1[`r',`c']=r(mean)*100
			if inlist("`i'","2","3","4") {
				svy, subpop(if status==1 & wave==2  & nwstatus<=5 &group`i'==1 | group1==1): tab `x' group`i' 
				mat stars[`r',`c']=(r(p)<.01) + (r(p)<.05)
}
			local r=`r'+1
}
	qui sum n if group`i'==1 & wave==2  [aw=anfin]
	
	mat tab1[`r',`c']=r(N)
	mat tab1[`r'+1,`c']=r(sum)
	local r=1
	local c=`c'+1
}

foreach x in `coutcomes' {
local rnames `rnames' "`x'" "Median"
}

mat rownames tab1=`cvars1' `ivars1' `cvars2' `ivars2' "_" N "Estimate"

frmttable using sample_characteristics_incl_2015_samp_unweighted, addtable statmat(tab1) ///
 title("Sample Characteristics by next wave status") ///
 ctitles("" "Community" "HB, Not Incident" "Incident HB" "NH, Not Incident" "Incident NH" ///
 "Died" "LFU") ///
 sdec(2) annotate(stars) asymbol(*,*) ///
 varlabels note("Cross-wave NHATS community-dwelling sample, by next-wave status")

restore
preserve
keep if status==1
local rn : word count 1 `cvars1' `cvars2' `ivars1' `ivars2' `coutcomes' `coutcomes' `ioutcomes' 1 1
di `rn'
mat tab1=J(`rn',4,.)
mat stars=J(`rn',4,0)
local r=1
local c=1

drop group*
forvalues i=1/4 {
gen group`i'=inccat`i'
local lab`i' : var label inccat`i'
}

forvalues i=1/4 {
	foreach round in 1 2 {
		foreach x of local cvars`round' {
			qui sum `x' if group`i'==1 & wave==2  [aw=anfin]
			mat tab1[`r',`c']=r(mean)
			if inlist("`i'","2","3","4") {
				qui ttest `x' if group`i'==1 | group1==1, by(group`i')
				mat stars[`r',`c']=(r(p)<.01) + (r(p)<.05)
}
			local r=`r'+1
}
		foreach x of local ivars`round' {
			qui sum `x' if group`i'==1 & wave==2  [aw=anfin]
			mat tab1[`r',`c']=r(mean)*100
			if inlist("`i'","2","3","4") {
				svy, subpop(if status==1 & wave==2  & nwstatus<=5 &group`i'==1 | group1==1): tab `x' group`i' 
				mat stars[`r',`c']=(r(p)<.01) + (r(p)<.05)
}
			local r=`r'+1
}
}
	local r=`r'+1

	
	foreach x of local coutcomes {
		qui sum `x' if group`i'==1,d
		mat tab1[`r',`c']=r(mean)
		if inlist("`i'","2","3","4") {
			qui ttest `x' if group`i'==1 | group1==1, by(group`i')
			mat stars[`r',`c']=(r(p)<.01) + (r(p)<.05)
}
		local r=`r'+1
*		if "`x'"=="tot_paid_by_mc_12m_wi_n0" {
			qui sum `x' if group`i'==1,d
			mat tab1[`r',`c']=r(p50)
			local r=`r'+1
*}
}
	foreach x of local ioutcomes {
		qui sum `x' if group`i'==1
		mat tab1[`r',`c']=r(mean)*100
			if inlist("`i'","2","3","4") {
				svy, subpop(if status==1 & wave==2  & nwstatus<=5 &group`i'==1 | group1==1): tab `x' group`i' 
				mat stars[`r',`c']=(r(p)<.01) + (r(p)<.05)
}
			local r=`r'+1
}
	qui sum n if group`i'==1 & wave==2  [aw=anfin]
	
	mat tab1[`r',`c']=r(N)
	mat tab1[`r'+1,`c']=r(sum)
	local r=1
	local c=`c'+1
}

foreach x in `coutcomes' {
local rnames `rnames' "`x'" "Median"
}

mat rownames tab1=`cvars1' `ivars1' `cvars2' `ivars2' "_" N "Estimate"

frmttable using sample_characteristics_incl_2015_samp_unweighted, addtable statmat(tab1) ///
 title("Sample Characteristics by Income category") ///
 ctitles("" "`lab1'" "`lab2'" "`lab3'" "`lab4'") ///
 sdec(2) annotate(stars) asymbol(*,*) ///
 varlabels note("Cross-wave NHATS community-dwelling sample, by income group")
restore*/




local cvars1 age 
local ivars1 female
preserve
drop group*
*keep if status==1 & wave==2  & nwstatus<=5
replace wherela=2 if wherela==4
tab wherela, gen(group)
forvalues i=1/3 {
local lab : label wherelandgroup `i'
label var group`i' "`lab'"
}
tab1 group*
local rn : word count 1 `cvars1' `cvars2' `ivars1' `ivars2' `coutcomes' `coutcomes' `ioutcomes' 1 1
di `rn'
mat tab1=J(`rn',6,.)
mat stars=J(`rn',6,0)
local r=1
local c=1
forvalues i=1/3 {
	foreach round in 1 2 {
		foreach x of local cvars`round' {
			qui sum `x' if group`i'==1 & wave==2  & status==1 & year==2011  & nwstatus<=5 [aw=anfin]
			mat tab1[`r',`c']=r(mean)
			if inlist("`i'","2","3","4") {
				svy, subpop(if status==1 & wave==2 & year==2011 & nwstatus<=5 &group`i'==1 | group1==1): reg `x' group`i' 
				test
				mat tab1[`r',`c'+1]=r(p)
				mat stars[`r',`c'+1]=(r(p)<.05)+(r(p)<.01)
}
			local r=`r'+1
}
		foreach x of local ivars`round' {
			qui sum `x' if group`i'==1 & year==2011  & status==1 & wave==2  & nwstatus<=5 [aw=anfin]
			mat tab1[`r',`c']=r(mean)*100
			if inlist("`i'","2","3","4") {
				svy, subpop(if status==1 & wave==2 & year==2011 & nwstatus<=5 &group`i'==1 | group1==1): tab `x' group`i' 
				mat tab1[`r',`c'+1]=e(p_Pear)
				mat stars[`r',`c'+1]=(e(p_Pear)<.05)+(e(p_Pear)<.01)
}
			local r=`r'+1
}
}
	local r=`r'+1

	
	foreach x of local coutcomes {
		qui sum `x' if group`i'==1 & status==1 & wave==2 & year==2011 & nwstatus<=5,d
		mat tab1[`r',`c']=r(mean)
		if inlist("`i'","2","3","4") {
				svy, subpop(if status==1 & wave==2 & year==2011 & nwstatus<=5 &group`i'==1 | group1==1): reg `x' group`i' 
				test
				mat tab1[`r',`c'+1]=r(p)
				mat stars[`r',`c'+1]=(r(p)<.05)+(r(p)<.01)
}
		local r=`r'+1
*		if "`x'"=="tot_paid_by_mc_12m_wi_n0" {
			qui sum `x' if group`i'==1 & year==2011 & wave==2 ,d
			mat tab1[`r',`c']=r(p50)
			local r=`r'+1
*}
}
	foreach x of local ioutcomes {
		qui sum `x' if group`i'==1 & status==1 & wave==2  & nwstatus<=5 & year==2011
		mat tab1[`r',`c']=r(mean)*100
			if inlist("`i'","2","3") {
				svy, subpop(if status==1 & wave==2 & year==2011 & nwstatus<=5 &group`i'==1 | group1==1): tab `x' group`i' 
				mat tab1[`r',`c'+1]=e(p_Pear)
				mat stars[`r',`c'+1]=(e(p_Pear)<.05)+(e(p_Pear)<.01)
}
			local r=`r'+1
}
	qui sum n if group`i'==1 & year==2011  & status==1 & wave==2  & nwstatus<=5 [aw=anfin]
	
	mat tab1[`r',`c']=r(N)
	*mat tab1[`r'+1,`c']=r(sum)
	local r=1
	local c=`c'+2
}

foreach x in `coutcomes' {
local rnames `rnames' "`x'" "Median"
}

mat rownames tab1=`cvars1' `ivars1' `cvars2' `ivars2' "_" N "Estimate"

frmttable using sample_characteristics_not_incl_2015_samp_weighted, addtable statmat(tab1) ///
 title("Sample Characteristics by future homebound status") ///
 ctitles("" "Never Homebound or NH res" "" "Future HB" "P-value" "Future NH" "P-value") ///
 sdec(2) annotate(stars) asymbol(*,*) ///
 varlabels note("Wave 2 community-dwelling sample, by ultimate homebound status" ///
 "Excludes those Lost to Follow up or dead prior to wave 2" ///
 "Future status evaluated at HB or NH, or final wave prior to dropout/wave 6")

restore
replace wherela=2 if wherela==4
preserve
tab wherela, gen(whereland)
forvalues i=1/3 {
local lab : label wherelandgroup `i'
label var whereland`i' "`lab'"
}
*keep if status==1 & wave==2 

local ivars2 inccat1 inccat2 inccat3 inccat4 creditdebt medpaynotcash govtasst ///
 whereland1 whereland2 whereland3 proxy  ///
medicaid medigap srh_fp adl_eat_help adl_bath_help adl_toil_help adl_dres_help ///
adl_ins_help adl_bed_help adl_impair iadl_impair ///
sr_cond_cat1 sr_cond_cat2 sr_cond_cat3 sr_ami_ever sr_stroke_ever sr_cancer_ever sr_hip_ever sr_heart_dis_ever ///
sr_htn_ever sr_ra_ever sr_osteoprs_ever sr_diabetes_ever sr_lung_dis_ever ///
prob_dementia dem_2_cat adl_diff_ind adl_independent inchbnextwave incnhnextwave ///
died_12 lfunextwave everhb evernh metro_ind northeast midwest south ind_replenish ///
fin_strain creditdebt medcreditdebt medpaynotcash finhlpfam meals_wheels mealskip nopayhous nopayutil nopaymed any_asst


local rn : word count 1 `cvars1' `cvars2' `ivars1' `ivars2' `coutcomes' `coutcomes' `ioutcomes' 1 1
di `rn'
mat tab1=J(`rn',8,.)
mat stars=J(`rn',8,0)
local r=1
local c=1

drop group*
forvalues i=1/4 {
gen group`i'=inccat`i'
local lab`i' : var label inccat`i'
}

forvalues i=1/4 {
	foreach round in 1 2 {
		foreach x of local cvars`round' {
			qui sum `x' if group`i'==1 & wave==2 & year==2011 & status==1  [aw=anfin]
			mat tab1[`r',`c']=r(mean)
			if inlist("`i'","2","3","4") {
				svy, subpop(if status==1 & wave==2 & year==2011 & group`i'==1 | group1==1): reg `x' group`i' 
				test
				mat tab1[`r',`c'+1]=r(p)
				mat stars[`r',`c'+1]=(r(p)<.05)+(r(p)<.01)
}
			local r=`r'+1
}
		foreach x of local ivars`round' {
			qui sum `x' if group`i'==1 & wave==2 & year==2011 & status==1 & wave==2  [aw=anfin]
			mat tab1[`r',`c']=r(mean)*100
			if inlist("`i'","2","3","4") {
				svy, subpop(if status==1 & wave==2 & year==2011 &group`i'==1 | group1==1): tab `x' group`i' 
				mat tab1[`r',`c'+1]=e(p_Pear)
				mat stars[`r',`c'+1]=(e(p_Pear)<.05)+(e(p_Pear)<.01)
}
			local r=`r'+1
}
}
	local r=`r'+1

	
	foreach x of local coutcomes {
		qui sum `x' if group`i'==1 & status==1 & year==2011 & wave==2 ,d
		mat tab1[`r',`c']=r(mean)
		if inlist("`i'","2","3","4") {
				svy, subpop(if status==1 & wave==2 & year==2011 & group`i'==1 | group1==1): reg `x' group`i' 
				test
				mat tab1[`r',`c'+1]=r(p)
				mat stars[`r',`c'+1]=(r(p)<.05)+(r(p)<.01)
}
		local r=`r'+1
*		if "`x'"=="tot_paid_by_mc_12m_wi_n0" {
			qui sum `x' if group`i'==1 & year==2011 & wave==2 ,d
			mat tab1[`r',`c']=r(p50)
			local r=`r'+1
*}
}
	foreach x of local ioutcomes {
		qui sum `x' if group`i'==1 & status==1 & wave==2 & year==2011
		mat tab1[`r',`c']=r(mean)*100
			if inlist("`i'","2","3","4") {
				svy, subpop(if status==1 & wave==2 & year==2011 & group`i'==1 | group1==1): tab `x' group`i' 
				mat tab1[`r',`c'+1]=e(p_Pear)
				mat stars[`r',`c'+1]=(e(p_Pear)<.05)+(e(p_Pear)<.01)
}
			local r=`r'+1
}
	qui sum n if group`i'==1 & wave==2 & year==2011 [aw=anfin]
	
	mat tab1[`r',`c']=r(N)
	*mat tab1[`r'+1,`c']=r(sum)
	local r=1
	local c=`c'+2
}

foreach x in `coutcomes' {
local rnames `rnames' "`x'" "Median"
}

mat rownames tab1=`cvars1' `ivars1' `cvars2' `ivars2' "_" N "Estimate"

frmttable using sample_characteristics_not_incl_2015_samp_weighted, addtable statmat(tab1) ///
 title("Sample Characteristics by Income category") ///
 ctitles("" "`lab1'" "" "`lab2'" "P-value" "`lab3'" "P-value" "`lab4'" "P-value") ///
 sdec(2) annotate(stars) asymbol(*,*) ///
 varlabels note("Wave 2 community-dwelling sample, by income group")
restore
preserve
*keep if status==1 & wave==2  & nwstatus<=5
tab wherela, gen(whereland)
forvalues i=1/3 {
local lab : label wherelandgroup `i'
label var whereland`i' "`lab'"
}


local rn : word count 1 `cvars1' `cvars2' `ivars1' `ivars2' `coutcomes' `coutcomes' `ioutcomes' 1 1
di `rn'
mat tab1=J(`rn',8,.)
mat stars=J(`rn',8,0)
local r=1
local c=1

drop group*
forvalues i=1/4 {
gen group`i'=inccat`i'
local lab`i' : var label inccat`i'
}

forvalues i=1/4 {
	foreach round in 1 2 {
		foreach x of local cvars`round' {
			qui sum `x' if group`i'==1 & year==2011  & status==1 & wave==2  & nwstatus<=5 [aw=anfin]
			mat tab1[`r',`c']=r(mean)
			if inlist("`i'","2","3","4") {
				svy, subpop(if status==1 & wave==2 & year==2011 & nwstatus<=5 &group`i'==1 | group1==1): reg `x' group`i' 
				test
				mat tab1[`r',`c'+1]=r(p)
				mat stars[`r',`c'+1]=(r(p)<.05)+(r(p)<.01)
}
			local r=`r'+1
}
		foreach x of local ivars`round' {
			qui sum `x' if group`i'==1 & year==2011  & status==1 & wave==2  & nwstatus<=5 [aw=anfin]
			mat tab1[`r',`c']=r(mean)*100
			if inlist("`i'","2","3","4") {
				svy, subpop(if status==1 & wave==2 & year==2011 & nwstatus<=5 &group`i'==1 | group1==1): tab `x' group`i' 
				mat tab1[`r',`c'+1]=e(p_Pear)
				mat stars[`r',`c'+1]=(e(p_Pear)<.05)+(e(p_Pear)<.01)
}
			local r=`r'+1
}
}
	local r=`r'+1

	
	foreach x of local coutcomes {
		qui sum `x' if group`i'==1 & status==1 & wave==2 & year==2011 & nwstatus<=5,d
		mat tab1[`r',`c']=r(mean)
		if inlist("`i'","2","3","4") {
				svy, subpop(if status==1 & wave==2 & year==2011 & nwstatus<=5 &group`i'==1 | group1==1): reg `x' group`i' 
				test
				mat tab1[`r',`c'+1]=r(p)
				mat stars[`r',`c'+1]=(r(p)<.05)+(r(p)<.01)
}
		local r=`r'+1
*		if "`x'"=="tot_paid_by_mc_12m_wi_n0" {
			qui sum `x' if group`i'==1 & wave==2 & year==2011,d
			mat tab1[`r',`c']=r(p50)
			local r=`r'+1
*}
}
	foreach x of local ioutcomes {
		qui sum `x' if group`i'==1 & status==1 & wave==2 & year==2011 & nwstatus<=5
		mat tab1[`r',`c']=r(mean)*100
			if inlist("`i'","2","3","4") {
				svy, subpop(if status==1 & wave==2 & year==2011 & nwstatus<=5 &group`i'==1 | group1==1): tab `x' group`i' 
				mat tab1[`r',`c'+1]=e(p_Pear)
				mat stars[`r',`c'+1]=(e(p_Pear)<.05)+(e(p_Pear)<.01)
}
			local r=`r'+1
}
	qui sum n if group`i'==1 & wave==2 & year==2011 [aw=anfin]
	
	mat tab1[`r',`c']=r(N)
	mat tab1[`r'+1,`c']=r(sum)
	local r=1
	local c=`c'+2
}

foreach x in `coutcomes' {
local rnames `rnames' "`x'" "Median"
}

mat rownames tab1=`cvars1' `ivars1' `cvars2' `ivars2' "_" N "Estimate"

frmttable using sample_characteristics_not_incl_2015_samp_weighted, addtable statmat(tab1) ///
 title("Sample Characteristics by Income category") ///
 ctitles("" "`lab1'" "" "`lab2'" "P-value" "`lab3'" "P-value" "`lab4'" "P-value") ///
 sdec(2) annotate(stars) asymbol(*,*) ///
 varlabels note("Wave 2 community-dwelling sample, by income group" ///
 "Excluding those LFU or dead prior to wave 2")
restore
preserve

sort spid wave
by spid: drop if wave>year+2010 & status[_n-1]!=1
xtset spid wave
drop if l.status!=1 & wave>1

local r=1
local c=2
tokenize A B C D E F G H I J K L M N O P Q R S T U V W X Y Z

putexcel set homebound_over_time.xlsx, replace
levelsof nwstatus, local(levels)
putexcel A`r'="Next-wave status among community-dwelling SPs who have never been homebound or nursing home residents" 


forvalues timethrough=1/2 {
putexcel B`=`r'+2'="Community, not homebound" C`=`r'+2'="Homebound, not incident" D`=`r'+2'="Incident homebound" ///
E`=`r'+2'="NH resident, not incident" F`=`r'+2'="Incident NH" G`=`r'+2'="Died" H`=`r'+2'="LFU" ///
I`=`r'+2'="Total Community dwelling in wave"
local r=`r'+3
forvalues i=2/5 {
	qui sum status if wave==`i' & year==2011 & status==1 & !missing(homebound_cat)
	local denom=r(N)
	qui putexcel A`r'="Wave `i'" A`=`r'+1'="N" A`=`r'+2'="% of non-homebound"
	local r=`r'+1
	foreach l of local levels {
		qui sum nwstatus if nwstatus==`l' & wave==`i' & status==1 & year==2011
		qui putexcel ``c''`r'=(r(N))
		qui putexcel ``c''`=`r'+1'=(r(N)/`denom'*100), nformat(number_d2)
		local c=`c'+1
}
	putexcel ``c''`r'=`denom'
	local r=`r'+3
	local c=2
}
restore
preserve
replace status=1 if status==4
local r=`r'+4
putexcel A`r'="Next-wave status among all community-dwelling SPs" 
}




restore
label var educ_hs_ind "Education: HS+"
preserve
*log using homebound_income_cox_log.txt, text replace
drop if missing(homebound_cat) & !nhres
by spid, sort: egen lastwave=max(wave)
*keep if wave==2 
tab lastwave
*keep if inrange(homebound_cat,2,4)
gen time=lastwave
gen first_hb_or_nh=firsthb
replace first_hb=firstnh if firstnh<firsthb
replace time=first_hb_or_nh if !missing(first_hb_or_nh)

gen ind_helper_any=n_helpers>0
label var ind_helper_any "Any helpers"
gen dies=!missing(death_date)
gen ultimate=everhb==1
replace ultimate=2 if evernh==1 & !ultimate
replace ultimate=2 if firstnh<firsthb
replace ultimate=3 if !missing(death_date) & !ultimate
stset time, failure(everhb)
sts graph, by(income_cat)
graph save km_hb, replace
graph export km_hb.pdf, replace

forvalues i=1/6 {
local lab : label r1d2intvrage `i'
label define agecat `i' "`lab'", modify
}


foreach x in agecat income_cat {
levelsof `x', local(levels)
foreach l of local levels {
	gen `x'`l'=`x'==`l'
	local lab : label `x' `l'
	label var `x'`l' "`lab'"
}
}

forvalues i=2/6 {
	local age `age' agecat`i'
}

forvalues i=1/3 {
	local inc `inc' income_cat`i'
}

local cond sr_cond_cat2 sr_cond_cat3

local vars `age' `inc' female black hisp married ind_noone educ_hs_ind  ///
medicaid prob_dem `cond' adl_diff_ind srh_fp ///
ind_paid_helper metro_ind northeast midwest south ind_replenish ///
fin_strain creditdebt medcreditdebt medpaynotcash finhlpfam any_asst

svy, subpop(if wave==2 & year==2011 &  inrange(homebound_cat,2,4)): stcox `vars' //, nohr mgale(mg)
*stcoxkm. by(income_cat)
qui outreg, ctitles("" "Homebound") varlabels stats(e_b p)

stphplot, by(income_cat) adjust(`age'  female black hisp married  ind_noone  educ_hs_ind  ///
medicaid prob_dem `cond' adl_diff_ind srh_fp ind_paid_helper ///
metro_ind northeast midwest south fin_strain any_asst)
stphplot, by(income_cat)

gen timenh=firstnh
replace timenh=lastwave if missing(firstnh)
stset timenh, failure(evernh)
sts graph, by(income_cat)
graph save km_nh, replace
graph export km_nh.pdf, replace


svy, subpop(if wave==2 & year==2011 &  inrange(homebound_cat,2,4)): stcox `vars'

qui outreg, merge ctitles("" "Nursing home") varlabels stats(e_b p)

gen either=everhb==1 | evernh==1
stset time, failure(either)
sts graph, by(income_cat)
graph save km_either, replace
graph export km_either.pdf, replace

local vars `age' `inc' female black hisp married  ind_noone  educ_hs_ind  ///
medicaid prob_dem `cond' adl_diff_ind srh_fp ///
ind_paid_helper metro_ind northeast midwest south ind_replenish ///
fin_strain any_asst

svy, subpop(if wave==2 & year==2011 &  inrange(homebound_cat,2,4)): stcox `vars'

qui outreg using homebound_income_cox_models_not_incl_2015_samp_weighted, merge ///
ctitles("" "HB or NH") varlabels  ///
title(Cox proportional hazard models) stats(e_b p) replace ///
note("Among wave 2 non-homebound community dwelling SPs")
capture drop p hb2 nh2 either2
predict p 
sum `vars' if missing(p)

sort spid wave
by spid: gen hb2=inlist(nwstat,2,3) if nwstat<7
by spid: gen nh2=inlist(nwstat,4,5) if nwstat<7
gen either2=hb2==1 | nh2==1 if !missing(hb2)
svy, subpop(if wave==2 & year==2011 & inrange(homebound_cat,2,4)): logit hb2 `vars'
qui outreg, stats(e_b p) ctitles("" "Homebound") varlabels
svy, subpop(if wave==2 & year==2011 & inrange(homebound_cat,2,4)): logit nh2 `vars'
qui outreg, stats(e_b p) ctitles("" "Nursing Home") varlabels merge
svy, subpop(if wave==2 & year==2011 & inrange(homebound_cat,2,4)): logit either2 `vars'
qui outreg, stats(e_b p) ctitles("" "HB or NH") varlabels merge

outreg using homebound_income_logit_not_incl_2015_samp_unweighted, replay replace ///
title(Logistic regression on next wave status) ///
note("Among wave 2 non-homebound community dwelling SPs")

//competing risk regressions (competing for nh/death for hb, hb/death for nh)
//set death_date=. if dies after one of these others
replace everhb=0 if ultimate!=1
stset time, failure(everhb)
stcrreg `vars' if wave==2 & year==2011 & inrange(homebound_cat,2,4), ///
compete(ultimate==0 2 3)

qui outreg, ctitles("" "Homebound") varlabels stats(e_b p)

replace evernh=0 if ultimate!=2
stset timenh, failure(evernh)
stcrreg `vars' if wave==2 & year==2011 & inrange(homebound_cat,2,4), ///
compete(ultimate==0 1 3)

qui outreg, merge ctitles("" "Nursing home") varlabels stats(e_b p)


stset time, failure(either)
stcrreg `vars' if wave==2 & year==2011 & inrange(homebound_cat,2,4), ///
compete(ultimate==0 3)

qui outreg using homebound_income_competing_risks_regs_not_incl_2015_samp_weighted, merge ///
ctitles("" "HB or NH") varlabels  ///
title(Competing risk regressions) stats(e_b p) replace ///
note("Among wave 2 non-homebound community dwelling SPs")


H="***************************"
//need to adjust income for inflation. 
To do this need to put into 2016 dollar amount. 

gen income_adj==0
replace income_adj= (240.007/224.939)*aveincome if wave==1
replace income_adj= (240.007/229.594)*aveincome if wave==2
replace income_adj= (240.007/232.957)*aveincome if wave==3
replace income_adj= (240.007/236.736)*aveincome if wave==4
replace income_adj= (240.007/237.017)*aveincome if wave==5
//replace income_adj= (240.007/240.007)*aveincome if wave==6

H="sample derivation tables"
clear all
set more off
capture log close


cd "E:\nhats\data\projects\Homebound\logs"
use "E:\nhats\data\NHATS cleaned\sp_round_1_6.dta" if lml==0, clear

//cpi inflation
gen income_adj=0
replace income_adj= (240.007/224.939)*aveincome if wave==1
replace income_adj= (240.007/229.594)*aveincome if wave==2
replace income_adj= (240.007/232.957)*aveincome if wave==3
replace income_adj= (240.007/236.736)*aveincome if wave==4
replace income_adj= (240.007/237.017)*aveincome if wave==5


//reweight, per Maureen's instructions
gen orig_weight=anfinw
replace anfinw=anfinw/2
//reset wave to 1/2 from 5/6 to run for 2015 cohort
replace wave=wave-3 if year==2015
gen ind_replenish=year==2015
label var ind_replenish "2015 Replenishment Cohort"

gen ind_noone=n_social==0
label var ind_noone "SR nobody in social network"
sort spid wave
*by spid: keep if prob_dem[1]==1
by spid: egen firstdem=min(cond(prob_dem==1,wave,.))
xtset spid wave
replace homebound_cat=. if nhres==1
gen homebound=homebound==1 if !missing(homebound) & !nhres
gen hbw=wave if homebound==1
gen nhw=wave if nhres==1
by spid, sort: egen firsthb=min(hbw)
by spid, sort: egen firstnh=min(nhw)
gen everhb=!missing(firsthb)
gen evernh=!missing(firstnh)
label var everhb "Ever HB"
label var evernh "Ever NH"
*drop if firsthb==1 | missing(homebou)
by spid: gen hbnextwave=homebound[_n+1]
by spid: gen nhnextwave=nhres[_n+1]
gen inchbnextwave=firsthb==wave+1 & homebound==0
gen incnhnextwave=firstnh==wave+1 & nhres==0
replace adl_diff_ind=1 if adl_impair==1
label var adl_diff_ind "ADL difficulty or impairment"

gen wherelandgroup=1 if missing(firsthb) & missing(firstnh)
replace wherelandgroup=2 if !missing(firsthb) 
replace wherelandgroup=3 if !missing(firstnh) 
replace wherelandgroup=4 if !missing(firstnh) & firsthb<firstnh
label define wherelandgroup 1 "Never homebound or NH resident" 2 "Future HB" ///
3 "Future NH resident" 4 "Homebound, then NH"
label values wherelandgroup wherelandgroup

sort spid wave
by spid: drop if nhres[_n-1]==1 
by spid: drop if homebound_cat[_n-1]==. & year<201`=wave'


gen nwstatus=.
forvalues i=2/5 {
replace nwstatus=r`=`i'+1'status if wave==`i'
}
replace nwstatus=r6status if year==2015 & wave==2
tab nwstat
tab r2status
replace nwstatus=1 if inlist(nwstatus,60,63) & !missing(hbne)
replace nwstatus=4 if inlist(nwstatus,61)
replace nwstatus=6 if inlist(nwstatus,62,86)
replace nwstatus=7 if nwstatus>7
replace nwstatus=6 if died_12==1 & nwstatus==7
label define nwstatus 1 "Community, not homebound" 2 "Homebound, not incident" ///
3 "Incident homebound" 4 "NH Resident, not incident" ///
5 "Incident NH" 6 "Died" 7 "LFU"
label values nwstatus nwstatus
replace nwstatus=2 if hbne==1
replace nwstatus=3 if inchb==1
replace nwstat=4 if nhne==1
replace nwstat=5 if incnhne==1
label var nwstat "Status next wave"
replace died_12=0 if nwstatus<=5
label var died_12 "Died prior to next wave"

gen northeast=region==1
gen midwest=region==2
gen south=region==3
gen west=region==4
label var northe "Northeast"
label var midw "Midwest"
label var south "South"
label var west "West"
gen sr_cond_cat=1 if sr_numcond<2
replace sr_cond_cat=2 if inrange(sr_numcond,2,4)
replace sr_cond_cat=3 if inrange(sr_numcond,5,15)
label define sr_cond_cat 1 "0-1 SR condition" 2 "2-4 SR conditions" 3 "5+ SR conditions"
label values sr_cond_cat sr_cond_cat
tab sr_cond_cat, gen(sr_cond_cat)
forvalues i=1/3 {
local lab: label sr_cond_cat `i'
label var sr_cond_cat`i' "`lab'"
}

gen status=1 if sp_ivw==1 & !missing(homebound)
replace status=2 if homebound==1
replace status=3 if nhres==1
replace status=4 if status==1 & (firsthb<wave | firstnh<wave)
label define status 1 "Community, not HB" 2 "Homebound" 3 "NH resident" 4 ///
"Community, previously HB or NH resident"
label values status status
label var status "Status this wave"


foreach x in nopayhous nopayutil nopaymed mealskip  {
replace `x'=. if `x'==2
}
replace mealskipnum=. if mealskipnum==5
gen fin_strain=.
replace fin_strain=0 if nopayhous==0 & nopayutil==0 & nopaymed==0 & mealskip==0 
replace fin_strain=1 if nopayhous==1 | nopayutil==1 | nopaymed==1 | mealskip==1
label var fin_strain "Financial Strain (Any nopay/mealskip)"

gen any_asst= govtasst
replace any_asst=1 if section8==1
label var any_asst "Reci. any Public Assist. (incl. Gov't assist./Section 8"



tab wave nwstat if wave<=4, row
tab nwsta status if wave==2 

sum aveincome
forvalues i=1/4 {
gen inccat`i'=income_cat==`i'-1
local lab : label income_cat `=`i'-1'
label var inccat`i' "Income: `lab'"
}
gen prob_dementia=dem_3==1 if !missing(dem_3)
label var prob_dementia "Probable dementia"

by spid, sort: gen persontime=_N
replace persontime=firsthb if firsthb<persontime
replace persontime=firstnh if firstnh<persontime
label var persontime "Waves contributing information"
gen anydebt=creditdebt==1 | medpayno==1 if !missing(creditdebt) | !missing(medpayn)
label var anydebt "Credit card or medical debt"


local cvars1 age
local cvars2 n_social_network persontime aveincome n_helpers n_paid_helpers tot_hrsmonth_help_i ///
tot_hrsmonth_paid_i 
local ivars1 female white black hisp other_race married livealone educ_hs_ind proxy ind_noone
local ivars2 ind_any_helpers ind_paid_helper top_quartile_help_helped ///
medicaid medigap srh_fp nhres ///
sr_ami_ever sr_stroke_ever sr_cancer_ever sr_hip_ever sr_heart_dis_ever ///
sr_htn_ever sr_ra_ever sr_osteoprs_ever sr_diabetes_ever sr_lung_dis_ever ///
prob_dementia dem_2_cat adl_diff_ind adl_independent iadl_diff_ind iadl_independent 
local ivars3 adl1 adl2 adl3 iadl1 iadl2 iadl3 adl_eat_help adl_bath_help adl_toil_help ///
adl_dres_help adl_ins_help adl_bed_help iadl_laun_help ///
iadl_shop_help iadl_meal_help iadl_bank_help iadl_meds_help ///
 reg_doc_seen sr_hosp_ind
gen lfunextwave=nwstatus==7
label var lfune "Lost to follow up prior to next wave"
local cvars1 age
local cvars2 persontime  aveincome
local ivars1 female white black hisp other_race married 
label var inchb "Incident Homebound Next Wave"
label var incnh "Incident Nursing Home Next Wave"
local ivars2 inccat1 inccat2 inccat3 inccat4 proxy  ///
medicaid medigap srh_fp adl_eat_help adl_bath_help adl_toil_help adl_dres_help ///
adl_ins_help adl_bed_help adl_impair iadl_impair ///
sr_cond_cat1 sr_cond_cat2 sr_cond_cat3 sr_ami_ever sr_stroke_ever sr_cancer_ever sr_hip_ever sr_heart_dis_ever ///
sr_htn_ever sr_ra_ever sr_osteoprs_ever sr_diabetes_ever sr_lung_dis_ever ///
prob_dementia dem_2_cat adl_diff_ind adl_independent inchbnextwave incnhnextwave ///
lfunextwave died_12 everhb evernh metro_ind northeast midwest south ind_replenish ///
fin_strain mealskip nopayhous nopayutil nopaymed anydebt creditdebt medpaynotcash finhlpfam meals_wheels govtasst

label var meals_wheels "Meals on Wheels"

foreach x in fin_strain creditdebt medcreditdebt medpaynotcash finhlpfam meals_wheels mealskip nopayhous nopayutil nopaymed any_asst {
replace `x'=0 if `x'==.
}


gen n=1

forvalues i=1/7 {
gen group`i'=nwstatus==`i'
}

/*
*preserve
drop group*
forvalues i=1/3 {
gen group`i'=status==`i'
}
tab nwstatus,gen(nw)
levelsof nwstatus, local(levels)

foreach l of local levels {
local lab : label nwstatus `l'
label var nw`l' "`lab'"
local nw `nw' nw`l'
}
*/
preserve
drop if wave==1
gen inw2=wave==2
gen inscope=wave==2 & inrange(homebound_cat,2,4)
by spid: egen ind_nh=max(nhres)
gen ind_died=!missing(death_date) & !ind_nh
drop if missing(homebound_cat) | nhres
by spid: replace persontime=_N-1
gen lt4yrs=persontime<4
gen lt1yrs=persontime<1
gen censored=lt4 if year==2011
replace censored=lt1 if year==2015
mat tab=J(7,2,.)
local r=1
foreach x in inw2 inscope lt4yrs lt1yr censored ind_nh ind_died {
	sum n if `x'==1 & year==2011
	mat tab[`r',1]=r(N)
	sum n if `x'==1 & year==2015
	mat tab[`r',2]=r(N)
	keep if inscope==1
	local r=`r'+1
}
mat rownames tab=inw2 inscope lt4yrs lt2yrs censored ind_nh ind_died

frmttable using sample_derivation, replace  statmat(tab) sdec(0)

drop group*
gen group1=!censored
gen group2=censored
keep if status==1 & wave==2
local rn : word count 1 `cvars1' `cvars2' `ivars1' `ivars2' `coutcomes' `coutcomes' `ioutcomes' 1 1
di `rn'
mat tab1=J(`rn',5,.)
mat stars=J(`rn',5,0)
local r=1
local c=1
foreach i in 1 2 {
	foreach round in 1 2 {
		foreach x of local cvars`round' {
			qui sum `x' if group`i'==1 & wave==2  [aw=anfin]
			mat tab1[`r',`c']=r(mean)
			if inlist("`i'","2") {
				svy: reg `x' group`i' if group`i'==1 | group1==1
				test group`i'
				mat stars[`r',`c']=(r(p)<.01) + (r(p)<.05) 
}
			local r=`r'+1
}
		foreach x of local ivars`round' {
			qui sum `x' if group`i'==1 & wave==2  [aw=anfin]
			mat tab1[`r',`c']=r(mean)*100
			if inlist("`i'","2") {
				svy, subpop(if status==1 & wave==2  & group`i'==1 | group1==1): tab `x' group`i' 
				mat stars[`r',`c']=(e(p_Pear)<.01) + (e(p_Pear)<.05)
}
			local r=`r'+1
}
}
	local r=`r'+1

	
	foreach x of local coutcomes {
		qui sum `x' if group`i'==1,d
		mat tab1[`r',`c']=r(mean)
		if inlist("`i'","2") {
				svy: reg `x' group`i' if group`i'==1 | group1==1
				test group`i'
			mat stars[`r',`c']=(r(p)<.01) + (r(p)<.05)
}
		local r=`r'+1
*		if "`x'"=="tot_paid_by_mc_12m_wi_n0" {
			qui sum `x' if group`i'==1,d
			mat tab1[`r',`c']=r(p50)
			local r=`r'+1
*}
}
	foreach x of local ioutcomes {
		qui sum `x' if group`i'==1
		mat tab1[`r',`c']=r(mean)*100
			if inlist("`i'","2") {
				svy, subpop(if status==1 & wave==2  & group`i'==1 | group1==1): tab `x' group`i' 
				mat stars[`r',`c']=(e(p_Pear)<.01) + (e(p_Pear)<.05)
}
			local r=`r'+1
}
	qui sum n if group`i'==1 & wave==2  [aw=anfin]
	
	mat tab1[`r',`c']=r(N)
	mat tab1[`r'+1,`c']=r(sum)
	local r=1
	local c=`c'+1
}

foreach x in `coutcomes' {
local rnames `rnames' "`x'" "Median"
}

mat rownames tab1=`cvars1' `ivars1' `cvars2' `ivars2' "_" N "Estimate"

frmttable using sample_derivation, addtable statmat(tab1) ///
 title("Sample Characteristics by waves contributed") ///
 ctitles("" "Community"  "Missing waves") ///
 sdec(2) annotate(stars) asymbol(*,**) ///
 varlabels note("Waves 2/5 NHATS community-dwelling sample" "Missing waves if died, ever NH or LFU")


H="tables incl. financial strain with waves 2 & 5"
clear all
set more off
capture log close


cd "E:\nhats\data\projects\Homebound\logs"
use "E:\nhats\data\NHATS cleaned\sp_round_1_6.dta" if lml==0, clear

//cpi inflation
gen income_adj=0
replace income_adj= (240.007/224.939)*aveincome if wave==1
replace income_adj= (240.007/229.594)*aveincome if wave==2
replace income_adj= (240.007/232.957)*aveincome if wave==3
replace income_adj= (240.007/236.736)*aveincome if wave==4
replace income_adj= (240.007/237.017)*aveincome if wave==5

//reweight, per Maureen's instructions
gen orig_weight=anfinw
replace anfinw=anfinw/2
//reset wave to 1/2 from 5/6 to run for 2015 cohort
replace wave=wave-3 if year==2015
gen ind_replenish=year==2015
label var ind_replenish "2015 Replenishment Cohort"

gen ind_noone=n_social==0
label var ind_noone "SR nobody in social network"
sort spid wave
*by spid: keep if prob_dem[1]==1
by spid: egen firstdem=min(cond(prob_dem==1,wave,.))
xtset spid wave
replace homebound_cat=. if nhres==1
gen homebound=homebound==1 if !missing(homebound) & !nhres
gen hbw=wave if homebound==1
gen nhw=wave if nhres==1
by spid, sort: egen firsthb=min(hbw)
by spid, sort: egen firstnh=min(nhw)
gen everhb=!missing(firsthb)
gen evernh=!missing(firstnh)
label var everhb "Ever HB"
label var evernh "Ever NH"
*drop if firsthb==1 | missing(homebou)
by spid: gen hbnextwave=homebound[_n+1]
by spid: gen nhnextwave=nhres[_n+1]
gen inchbnextwave=firsthb==wave+1 & homebound==0
gen incnhnextwave=firstnh==wave+1 & nhres==0
replace adl_diff_ind=1 if adl_impair==1
label var adl_diff_ind "ADL difficulty or impairment"

gen wherelandgroup=1 if missing(firsthb) & missing(firstnh)
replace wherelandgroup=2 if !missing(firsthb) 
replace wherelandgroup=3 if !missing(firstnh) 
replace wherelandgroup=4 if !missing(firstnh) & firsthb<firstnh
label define wherelandgroup 1 "Never homebound or NH resident" 2 "Future HB" ///
3 "Future NH resident" 4 "Homebound, then NH"
label values wherelandgroup wherelandgroup

sort spid wave
by spid: drop if nhres[_n-1]==1 
by spid: drop if homebound_cat[_n-1]==. & year<201`=wave'


gen nwstatus=.
forvalues i=2/5 {
replace nwstatus=r`=`i'+1'status if wave==`i'
}
replace nwstatus=r6status if year==2015 & wave==2
tab nwstat
tab r2status
replace nwstatus=1 if inlist(nwstatus,60,63) & !missing(hbne)
replace nwstatus=4 if inlist(nwstatus,61)
replace nwstatus=6 if inlist(nwstatus,62,86)
replace nwstatus=7 if nwstatus>7
replace nwstatus=6 if died_12==1 & nwstatus==7
label define nwstatus 1 "Community, not homebound" 2 "Homebound, not incident" ///
3 "Incident homebound" 4 "NH Resident, not incident" ///
5 "Incident NH" 6 "Died" 7 "LFU"
label values nwstatus nwstatus
replace nwstatus=2 if hbne==1
replace nwstatus=3 if inchb==1
replace nwstat=4 if nhne==1
replace nwstat=5 if incnhne==1
label var nwstat "Status next wave"
replace died_12=0 if nwstatus<=5
label var died_12 "Died prior to next wave"

gen northeast=region==1
gen midwest=region==2
gen south=region==3
gen west=region==4
label var northe "Northeast"
label var midw "Midwest"
label var south "South"
label var west "West"
gen sr_cond_cat=1 if sr_numcond<2
replace sr_cond_cat=2 if inrange(sr_numcond,2,4)
replace sr_cond_cat=3 if inrange(sr_numcond,5,15)
label define sr_cond_cat 1 "0-1 SR condition" 2 "2-4 SR conditions" 3 "5+ SR conditions"
label values sr_cond_cat sr_cond_cat
tab sr_cond_cat, gen(sr_cond_cat)
forvalues i=1/3 {
local lab: label sr_cond_cat `i'
label var sr_cond_cat`i' "`lab'"
}

gen status=1 if sp_ivw==1 & !missing(homebound)
replace status=2 if homebound==1
replace status=3 if nhres==1
replace status=4 if status==1 & (firsthb<wave | firstnh<wave)
label define status 1 "Community, not HB" 2 "Homebound" 3 "NH resident" 4 ///
"Community, previously HB or NH resident"
label values status status
label var status "Status this wave"


foreach x in nopayhous nopayutil nopaymed mealskip  {
replace `x'=. if `x'==2
}
replace mealskipnum=. if mealskipnum==5
gen fin_strain=.
replace fin_strain=0 if nopayhous==0 & nopayutil==0 & nopaymed==0 & mealskip==0 
replace fin_strain=1 if nopayhous==1 | nopayutil==1 | nopaymed==1 | mealskip==1
label var fin_strain "Financial Strain (Any nopay/mealskip)"

gen any_asst= govtasst
replace any_asst=1 if section8==1
label var any_asst "Reci. any Public Assist. (incl. Gov't assist./Section 8"



tab wave nwstat if wave<=4, row
tab nwsta status if wave==2 

sum aveincome
forvalues i=1/4 {
gen inccat`i'=income_cat==`i'-1
local lab : label income_cat `=`i'-1'
label var inccat`i' "Income: `lab'"
}
gen prob_dementia=dem_3==1 if !missing(dem_3)
label var prob_dementia "Probable dementia"

by spid, sort: gen persontime=_N
replace persontime=firsthb if firsthb<persontime
replace persontime=firstnh if firstnh<persontime
label var persontime "Waves contributing information"
gen anydebt=creditdebt==1 | medpayno==1 if !missing(creditdebt) | !missing(medpayn)
label var anydebt "Credit card or medical debt"

local cvars1 age
local cvars2 n_social_network persontime aveincome n_helpers n_paid_helpers tot_hrsmonth_help_i ///
tot_hrsmonth_paid_i 
local ivars1 female white black hisp other_race married livealone educ_hs_ind proxy ind_noone
local ivars2 ind_any_helpers ind_paid_helper top_quartile_help_helped ///
medicaid medigap srh_fp nhres ///
sr_ami_ever sr_stroke_ever sr_cancer_ever sr_hip_ever sr_heart_dis_ever ///
sr_htn_ever sr_ra_ever sr_osteoprs_ever sr_diabetes_ever sr_lung_dis_ever ///
prob_dementia dem_2_cat adl_diff_ind adl_independent iadl_diff_ind iadl_independent 
local ivars3 adl1 adl2 adl3 iadl1 iadl2 iadl3 adl_eat_help adl_bath_help adl_toil_help ///
adl_dres_help adl_ins_help adl_bed_help iadl_laun_help ///
iadl_shop_help iadl_meal_help iadl_bank_help iadl_meds_help ///
 reg_doc_seen sr_hosp_ind
gen lfunextwave=nwstatus==7
label var lfune "Lost to follow up prior to next wave"
local cvars1 age
local cvars2 persontime  aveincome
local ivars1 female white black hisp other_race married 
label var inchb "Incident Homebound Next Wave"
label var incnh "Incident Nursing Home Next Wave"
local ivars2 inccat1 inccat2 inccat3 inccat4 proxy  ///
medicaid medigap srh_fp adl_eat_help adl_bath_help adl_toil_help adl_dres_help ///
adl_ins_help adl_bed_help adl_impair iadl_impair ///
sr_cond_cat1 sr_cond_cat2 sr_cond_cat3 sr_ami_ever sr_stroke_ever sr_cancer_ever sr_hip_ever sr_heart_dis_ever ///
sr_htn_ever sr_ra_ever sr_osteoprs_ever sr_diabetes_ever sr_lung_dis_ever ///
prob_dementia dem_2_cat adl_diff_ind adl_independent inchbnextwave incnhnextwave ///
lfunextwave died_12 everhb evernh metro_ind northeast midwest south ind_replenish ///
fin_strain mealskip nopayhous nopayutil nopaymed anydebt creditdebt medpaynotcash finhlpfam meals_wheels govtasst

label var meals_wheels "Meals on Wheels"

foreach x in fin_strain creditdebt medcreditdebt medpaynotcash finhlpfam meals_wheels mealskip nopayhous nopayutil nopaymed any_asst {
replace `x'=0 if `x'==.
}


gen n=1

forvalues i=1/7 {
gen group`i'=nwstatus==`i'
}

/*
*preserve
drop group*
forvalues i=1/3 {
gen group`i'=status==`i'
}
tab nwstatus,gen(nw)
levelsof nwstatus, local(levels)

foreach l of local levels {
local lab : label nwstatus `l'
label var nw`l' "`lab'"
local nw `nw' nw`l'
}
*/

 
preserve
keep if status==1 & wave==2
local rn : word count 1 `cvars1' `cvars2' `ivars1' `ivars2' `coutcomes' `coutcomes' `ioutcomes' 1 1
di `rn'
mat tab1=J(`rn',5,.)
mat stars=J(`rn',5,0)
local r=1
local c=1
foreach i in 1 3 5 6 7 {
	foreach round in 1 2 {
		foreach x of local cvars`round' {
			qui sum `x' if group`i'==1 & wave==2  [aw=anfin]
			mat tab1[`r',`c']=r(mean)
			if inlist("`i'","3","5","6","7") {
				svy: reg `x' group`i' if group`i'==1 | group1==1
				test group`i'
				mat stars[`r',`c']=(r(p)<.01) + (r(p)<.05) 
}
			local r=`r'+1
}
		foreach x of local ivars`round' {
			qui sum `x' if group`i'==1 & wave==2  [aw=anfin]
			mat tab1[`r',`c']=r(mean)*100
			if inlist("`i'","3","5","6","7") {
				svy, subpop(if status==1 & wave==2  & group`i'==1 | group1==1): tab `x' group`i' 
				mat stars[`r',`c']=(e(p_Pear)<.01) + (e(p_Pear)<.05)
}
			local r=`r'+1
}
}
	local r=`r'+1

	
	foreach x of local coutcomes {
		qui sum `x' if group`i'==1,d
		mat tab1[`r',`c']=r(mean)
		if inlist("`i'","3","5","6","7") {
				svy: reg `x' group`i' if group`i'==1 | group1==1
				test group`i'
			mat stars[`r',`c']=(r(p)<.01) + (r(p)<.05)
}
		local r=`r'+1
*		if "`x'"=="tot_paid_by_mc_12m_wi_n0" {
			qui sum `x' if group`i'==1,d
			mat tab1[`r',`c']=r(p50)
			local r=`r'+1
*}
}
	foreach x of local ioutcomes {
		qui sum `x' if group`i'==1
		mat tab1[`r',`c']=r(mean)*100
			if inlist("`i'","3","5","6","7") {
				svy, subpop(if status==1 & wave==2  & group`i'==1 | group1==1): tab `x' group`i' 
				mat stars[`r',`c']=(e(p_Pear)<.01) + (e(p_Pear)<.05)
}
			local r=`r'+1
}
	qui sum n if group`i'==1 & wave==2  [aw=anfin]
	
	mat tab1[`r',`c']=r(N)
	mat tab1[`r'+1,`c']=r(sum)
	local r=1
	local c=`c'+1
}

foreach x in `coutcomes' {
local rnames `rnames' "`x'" "Median"
}

mat rownames tab1=`cvars1' `ivars1' `cvars2' `ivars2' "_" N "Estimate"

frmttable using sample_characteristics_incl_2015_samp_weighted1, replace statmat(tab1) ///
 title("Sample Characteristics by next wave status") ///
 ctitles("" "Community"  "Incident HB"  "Incident NH" ///
 "Died" "LFU") ///
 sdec(2) annotate(stars) asymbol(*,**) ///
 varlabels note("Waves 2/5 NHATS community-dwelling sample, by next-wave status")

restore
/*
preserve
keep if status==1
local rn : word count 1 `cvars1' `cvars2' `ivars1' `ivars2' `coutcomes' `coutcomes' `ioutcomes' 1 1
di `rn'
mat tab1=J(`rn',4,.)
mat stars=J(`rn',4,0)
local r=1
local c=1

drop group*
forvalues i=1/4 {
gen group`i'=inccat`i'
local lab`i' : var label inccat`i'
}

forvalues i=1/4 {
	foreach round in 1 2 {
		foreach x of local cvars`round' {
			qui sum `x' if group`i'==1 & wave==2  [aw=anfin]
			mat tab1[`r',`c']=r(mean)
			if inlist("`i'","2","3","4") {
				qui ttest `x' if group`i'==1 | group1==1, by(group`i')
				mat stars[`r',`c']=(r(p)<.01) + (r(p)<.05)
}
			local r=`r'+1
}
		foreach x of local ivars`round' {
			qui sum `x' if group`i'==1 & wave==2  [aw=anfin]
			mat tab1[`r',`c']=r(mean)*100
			if inlist("`i'","2","3","4") {
				svy, subpop(if status==1 & wave==2  & nwstatus<=5 &group`i'==1 | group1==1): tab `x' group`i' 
				mat stars[`r',`c']=(r(p)<.01) + (r(p)<.05)
}
			local r=`r'+1
}
}
	local r=`r'+1

	
	foreach x of local coutcomes {
		qui sum `x' if group`i'==1,d
		mat tab1[`r',`c']=r(mean)
		if inlist("`i'","2","3","4") {
			qui ttest `x' if group`i'==1 | group1==1, by(group`i')
			mat stars[`r',`c']=(r(p)<.01) + (r(p)<.05)
}
		local r=`r'+1
*		if "`x'"=="tot_paid_by_mc_12m_wi_n0" {
			qui sum `x' if group`i'==1,d
			mat tab1[`r',`c']=r(p50)
			local r=`r'+1
*}
}
	foreach x of local ioutcomes {
		qui sum `x' if group`i'==1
		mat tab1[`r',`c']=r(mean)*100
			if inlist("`i'","2","3","4") {
				svy, subpop(if status==1 & wave==2  & nwstatus<=5 &group`i'==1 | group1==1): tab `x' group`i' 
				mat stars[`r',`c']=(r(p)<.01) + (r(p)<.05)
}
			local r=`r'+1
}
	qui sum n if group`i'==1 & wave==2  [aw=anfin]
	
	mat tab1[`r',`c']=r(N)
	mat tab1[`r'+1,`c']=r(sum)
	local r=1
	local c=`c'+1
}

foreach x in `coutcomes' {
local rnames `rnames' "`x'" "Median"
}

mat rownames tab1=`cvars1' `ivars1' `cvars2' `ivars2' "_" N "Estimate"

frmttable using sample_characteristics_incl_2015_samp_weighted, addtable statmat(tab1) ///
 title("Sample Characteristics by Income category") ///
 ctitles("" "`lab1'" "`lab2'" "`lab3'" "`lab4'") ///
 sdec(2) annotate(stars) asymbol(*,*) ///
 varlabels note("Cross-wave NHATS community-dwelling sample, by income group")
restore*/




local cvars1 age 
local ivars1 female
preserve
drop if year==2015
drop group*
*keep if status==1 & wave==2  & nwstatus<=5
replace wherela=2 if wherela==4
tab wherela, gen(group)
forvalues i=1/3 {
local lab : label wherelandgroup `i'
label var group`i' "`lab'"
}
tab1 group*
local rn : word count 1 `cvars1' `cvars2' `ivars1' `ivars2' `coutcomes' `coutcomes' `ioutcomes' 1 1
di `rn'
mat tab1=J(`rn',6,.)
mat stars=J(`rn',6,0)
local r=1
local c=1
forvalues i=1/3 {
	foreach round in 1 2 {
		foreach x of local cvars`round' {
			qui sum `x' if group`i'==1 & wave==2  & status==1   & nwstatus<=5 [aw=anfin]
			mat tab1[`r',`c']=r(mean)
			if inlist("`i'","2","3","4") {
				svy, subpop(if status==1 & wave==2  & nwstatus<=5 &group`i'==1 | group1==1): reg `x' group`i' 
				test
				mat tab1[`r',`c'+1]=r(p)
				mat stars[`r',`c'+1]=(r(p)<.05)+(r(p)<.01)
}
			local r=`r'+1
}
		foreach x of local ivars`round' {
			qui sum `x' if group`i'==1   & status==1 & wave==2  & nwstatus<=5 [aw=anfin]
			mat tab1[`r',`c']=r(mean)*100
			if inlist("`i'","2","3","4") {
				svy, subpop(if status==1 & wave==2  & nwstatus<=5 &group`i'==1 | group1==1): tab `x' group`i' 
				mat tab1[`r',`c'+1]=e(p_Pear)
				mat stars[`r',`c'+1]=(e(p_Pear)<.05)+(e(p_Pear)<.01)
}
			local r=`r'+1
}
}
	local r=`r'+1

	
	foreach x of local coutcomes {
		qui sum `x' if group`i'==1 & status==1 & wave==2  & nwstatus<=5,d
		mat tab1[`r',`c']=r(mean)
		if inlist("`i'","2","3","4") {
				svy, subpop(if status==1 & wave==2  & nwstatus<=5 &group`i'==1 | group1==1): reg `x' group`i' 
				test
				mat tab1[`r',`c'+1]=r(p)
				mat stars[`r',`c'+1]=(r(p)<.05)+(r(p)<.01)
}
		local r=`r'+1
*		if "`x'"=="tot_paid_by_mc_12m_wi_n0" {
			qui sum `x' if group`i'==1  & wave==2 ,d
			mat tab1[`r',`c']=r(p50)
			local r=`r'+1
*}
}
	foreach x of local ioutcomes {
		qui sum `x' if group`i'==1 & status==1 & wave==2  & nwstatus<=5 
		mat tab1[`r',`c']=r(mean)*100
			if inlist("`i'","2","3") {
				svy, subpop(if status==1 & wave==2  & nwstatus<=5 &group`i'==1 | group1==1): tab `x' group`i' 
				mat tab1[`r',`c'+1]=e(p_Pear)
				mat stars[`r',`c'+1]=(e(p_Pear)<.05)+(e(p_Pear)<.01)
}
			local r=`r'+1
}
	qui sum n if group`i'==1   & status==1 & wave==2  & nwstatus<=5 [aw=anfin]
	
	mat tab1[`r',`c']=r(N)
	*mat tab1[`r'+1,`c']=r(sum)
	local r=1
	local c=`c'+2
}

foreach x in `coutcomes' {
local rnames `rnames' "`x'" "Median"
}

mat rownames tab1=`cvars1' `ivars1' `cvars2' `ivars2' "_" N "Estimate"

frmttable using sample_characteristics_incl_2015_samp_weighted1, addtable statmat(tab1) ///
 title("Sample Characteristics by future homebound status") ///
 ctitles("" "Never Homebound or NH res" "" "Future HB" "P-value" "Future NH" "P-value") ///
 sdec(2) annotate(stars) asymbol(*,*) ///
 varlabels note("Wave 2 community-dwelling sample, by ultimate homebound status" ///
 "Excludes those Lost to Follow up or dead prior to wave 2" ///
 "Future status evaluated at HB or NH, or final wave prior to dropout/wave 6")

restore
replace wherela=2 if wherela==4
preserve
tab wherela, gen(whereland)
forvalues i=1/3 {
local lab : label wherelandgroup `i'
label var whereland`i' "`lab'"
}
*keep if status==1 & wave==2 

local ivars2 inccat1 inccat2 inccat3 inccat4  ///
 whereland1 whereland2 whereland3 proxy  ///
medicaid medigap srh_fp adl_eat_help adl_bath_help adl_toil_help adl_dres_help ///
adl_ins_help adl_bed_help adl_impair iadl_impair ///
sr_cond_cat1 sr_cond_cat2 sr_cond_cat3 sr_ami_ever sr_stroke_ever sr_cancer_ever sr_hip_ever sr_heart_dis_ever ///
sr_htn_ever sr_ra_ever sr_osteoprs_ever sr_diabetes_ever sr_lung_dis_ever ///
prob_dementia dem_2_cat adl_diff_ind adl_independent inchbnextwave incnhnextwave ///
died_12 lfunextwave everhb evernh metro_ind northeast midwest south ind_replenish ///
fin_strain mealskip nopayhous nopayutil nopaymed anydebt creditdebt medpaynotcash finhlpfam meals_wheels govtasst


local rn : word count 1 `cvars1' `cvars2' `ivars1' `ivars2' `coutcomes' `coutcomes' `ioutcomes' 1 1
di `rn'
mat tab1=J(`rn',8,.)
mat stars=J(`rn',8,0)
local r=1
local c=1
/*
tab wherela, gen(whereland)
forvalues i=1/3 {
local lab : label wherelandgroup `i'
label var whereland`i' "`lab'"
}
*/

local rn : word count 1 `cvars1' `cvars2' `ivars1' `ivars2' `coutcomes' `coutcomes' `ioutcomes' 1 1
di `rn'
mat tab1=J(`rn',8,.)
mat stars=J(`rn',8,0)
local r=1
local c=1

drop group*
forvalues i=1/4 {
gen group`i'=inccat`i'
local lab`i' : var label inccat`i'
}

forvalues i=1/4 {
	foreach round in 1 2 {
		foreach x of local cvars`round' {
			qui sum `x' if group`i'==1   & status==1 & wave==2  & nwstatus<=5 [aw=anfin]
			mat tab1[`r',`c']=r(mean)
			if inlist("`i'","2","3","4") {
				svy, subpop(if status==1 & wave==2  & nwstatus<=5 &group`i'==1 | group1==1): reg `x' group`i' 
				test
				mat tab1[`r',`c'+1]=r(p)
				mat stars[`r',`c'+1]=(r(p)<.05)+(r(p)<.01)
}
			local r=`r'+1
}
		foreach x of local ivars`round' {
			qui sum `x' if group`i'==1   & status==1 & wave==2  & nwstatus<=5 [aw=anfin]
			mat tab1[`r',`c']=r(mean)*100
			if inlist("`i'","2","3","4") {
				svy, subpop(if status==1 & wave==2  & nwstatus<=5 &group`i'==1 | group1==1): tab `x' group`i' 
				mat tab1[`r',`c'+1]=e(p_Pear)
				mat stars[`r',`c'+1]=(e(p_Pear)<.05)+(e(p_Pear)<.01)
}
			local r=`r'+1
}
}
	local r=`r'+1

	
	foreach x of local coutcomes {
		qui sum `x' if group`i'==1 & status==1 & wave==2  & nwstatus<=5,d
		mat tab1[`r',`c']=r(mean)
		if inlist("`i'","2","3","4") {
				svy, subpop(if status==1 & wave==2  & nwstatus<=5 &group`i'==1 | group1==1): reg `x' group`i' 
				test
				mat tab1[`r',`c'+1]=r(p)
				mat stars[`r',`c'+1]=(r(p)<.05)+(r(p)<.01)
}
		local r=`r'+1
*		if "`x'"=="tot_paid_by_mc_12m_wi_n0" {
			qui sum `x' if group`i'==1 & wave==2 ,d
			mat tab1[`r',`c']=r(p50)
			local r=`r'+1
*}
}
	foreach x of local ioutcomes {
		qui sum `x' if group`i'==1 & status==1 & wave==2  & nwstatus<=5
		mat tab1[`r',`c']=r(mean)*100
			if inlist("`i'","2","3","4") {
				svy, subpop(if status==1 & wave==2  & nwstatus<=5 &group`i'==1 | group1==1): tab `x' group`i' 
				mat tab1[`r',`c'+1]=e(p_Pear)
				mat stars[`r',`c'+1]=(e(p_Pear)<.05)+(e(p_Pear)<.01)
}
			local r=`r'+1
}
	qui sum n if group`i'==1 & wave==2  [aw=anfin]
	
	mat tab1[`r',`c']=r(N)
	mat tab1[`r'+1,`c']=r(sum)
	local r=1
	local c=`c'+2
}

foreach x in `coutcomes' {
local rnames `rnames' "`x'" "Median"
}

mat rownames tab1=`cvars1' `ivars1' `cvars2' `ivars2' "_" N "Estimate"

frmttable using sample_characteristics_incl_2015_samp_weighted1, addtable statmat(tab1) ///
 title("Sample Characteristics by Income category") ///
 ctitles("" "`lab1'" "" "`lab2'" "P-value" "`lab3'" "P-value" "`lab4'" "P-value") ///
 sdec(2) annotate(stars) asymbol(*,*) ///
 varlabels note("Wave 2/5 community-dwelling sample, by income group" ///
 "Excluding those LFU or dead prior to wave 2")
restore




H="Cox Regressions "
clear all
set more off
capture log close


cd "E:\nhats\data\projects\Homebound\logs"
use "E:\nhats\data\NHATS cleaned\sp_round_1_6.dta" if lml==0, clear

//cpi inflation
gen income_adj=0
replace income_adj= (240.007/224.939)*aveincome if wave==1
replace income_adj= (240.007/229.594)*aveincome if wave==2
replace income_adj= (240.007/232.957)*aveincome if wave==3
replace income_adj= (240.007/236.736)*aveincome if wave==4
replace income_adj= (240.007/237.017)*aveincome if wave==5
replace income_adj=aveincome if wave==6

//reweight, per Maureen's instructions
gen orig_weight=anfinw
replace anfinw=anfinw/2
//reset wave to 1/2 from 5/6 to run for 2015 cohort
replace wave=wave-3 if year==2015
gen ind_replenish=year==2015
label var ind_replenish "2015 Replenishment Cohort"

gen ind_noone=n_social==0
label var ind_noone "SR nobody in social network"
sort spid wave
*by spid: keep if prob_dem[1]==1
by spid: egen firstdem=min(cond(prob_dem==1,wave,.))
xtset spid wave
replace homebound_cat=. if nhres==1
gen homebound=homebound==1 if !missing(homebound) & !nhres
gen hbw=wave if homebound==1
gen nhw=wave if nhres==1
by spid, sort: egen firsthb=min(hbw)
by spid, sort: egen firstnh=min(nhw)
gen everhb=!missing(firsthb)
gen evernh=!missing(firstnh)
label var everhb "Ever HB"
label var evernh "Ever NH"
*drop if firsthb==1 | missing(homebou)
by spid: gen hbnextwave=homebound[_n+1]
by spid: gen nhnextwave=nhres[_n+1]
gen inchbnextwave=firsthb==wave+1 & homebound==0
gen incnhnextwave=firstnh==wave+1 & nhres==0
replace adl_diff_ind=1 if adl_impair==1
label var adl_diff_ind "ADL difficulty or impairment"

gen wherelandgroup=1 if missing(firsthb) & missing(firstnh)
replace wherelandgroup=2 if !missing(firsthb) 
replace wherelandgroup=3 if !missing(firstnh) 
replace wherelandgroup=4 if !missing(firstnh) & firsthb<firstnh
label define wherelandgroup 1 "Never homebound or NH resident" 2 "Future HB" ///
3 "Future NH resident" 4 "Homebound, then NH"
label values wherelandgroup wherelandgroup

sort spid wave
by spid: drop if nhres[_n-1]==1 
by spid: drop if homebound_cat[_n-1]==. & year<201`=wave'


gen nwstatus=.
forvalues i=2/5 {
replace nwstatus=r`=`i'+1'status if wave==`i'
}
replace nwstatus=r6status if year==2015 & wave==2
tab nwstat
tab r2status
replace nwstatus=1 if inlist(nwstatus,60,63) & !missing(hbne)
replace nwstatus=4 if inlist(nwstatus,61)
replace nwstatus=6 if inlist(nwstatus,62,86)
replace nwstatus=7 if nwstatus>7
replace nwstatus=6 if died_12==1 & nwstatus==7
label define nwstatus 1 "Community, not homebound" 2 "Homebound, not incident" ///
3 "Incident homebound" 4 "NH Resident, not incident" ///
5 "Incident NH" 6 "Died" 7 "LFU"
label values nwstatus nwstatus
replace nwstatus=2 if hbne==1
replace nwstatus=3 if inchb==1
replace nwstat=4 if nhne==1
replace nwstat=5 if incnhne==1
label var nwstat "Status next wave"
replace died_12=0 if nwstatus<=5
label var died_12 "Died prior to next wave"

gen northeast=region==1
gen midwest=region==2
gen south=region==3
gen west=region==4
label var northe "Northeast"
label var midw "Midwest"
label var south "South"
label var west "West"
gen sr_cond_cat=1 if sr_numcond<2
replace sr_cond_cat=2 if inrange(sr_numcond,2,4)
replace sr_cond_cat=3 if inrange(sr_numcond,5,15)
label define sr_cond_cat 1 "0-1 SR condition" 2 "2-4 SR conditions" 3 "5+ SR conditions"
label values sr_cond_cat sr_cond_cat
tab sr_cond_cat, gen(sr_cond_cat)
forvalues i=1/3 {
local lab: label sr_cond_cat `i'
label var sr_cond_cat`i' "`lab'"
}

gen anydebt=creditdebt==1 | medpayno==1 if !missing(creditdebt) | !missing(medpayn)
label var anydebt "Credit card or medical debt"

gen status=1 if sp_ivw==1 & !missing(homebound)
replace status=2 if homebound==1
replace status=3 if nhres==1
replace status=4 if status==1 & (firsthb<wave | firstnh<wave)
label define status 1 "Community, not HB" 2 "Homebound" 3 "NH resident" 4 ///
"Community, previously HB or NH resident"
label values status status
label var status "Status this wave"


foreach x in nopayhous nopayutil nopaymed mealskip  {
replace `x'=. if `x'==2
}
replace mealskipnum=. if mealskipnum==5
gen fin_strain=.
replace fin_strain=0 if nopayhous==0 & nopayutil==0 & nopaymed==0 & mealskip==0 
replace fin_strain=1 if nopayhous==1 | nopayutil==1 | nopaymed==1 | mealskip==1
label var fin_strain "Financial Strain (Any nopay/mealskip)"

gen any_asst= govtasst
replace any_asst=1 if section8==1
label var any_asst "Reci. any Public Assist. (incl. Gov't assist./Section 8"



tab wave nwstat if wave<=4, row
tab nwsta status if wave==2 

sum aveincome
forvalues i=1/4 {
gen inccat`i'=income_cat==`i'-1
local lab : label income_cat `=`i'-1'
label var inccat`i' "Income: `lab'"
}
gen prob_dementia=dem_3==1 if !missing(dem_3)
label var prob_dementia "Probable dementia"

by spid, sort: gen persontime=_N
replace persontime=firsthb if firsthb<persontime
replace persontime=firstnh if firstnh<persontime
label var persontime "Waves contributing information"

local cvars1 age
local cvars2 n_social_network persontime aveincome n_helpers n_paid_helpers tot_hrsmonth_help_i ///
tot_hrsmonth_paid_i 
local ivars1 female white black hisp other_race married livealone educ_hs_ind proxy ind_noone
local ivars2 ind_any_helpers ind_paid_helper top_quartile_help_helped ///
medicaid medigap srh_fp nhres ///
sr_ami_ever sr_stroke_ever sr_cancer_ever sr_hip_ever sr_heart_dis_ever ///
sr_htn_ever sr_ra_ever sr_osteoprs_ever sr_diabetes_ever sr_lung_dis_ever ///
prob_dementia dem_2_cat adl_diff_ind adl_independent iadl_diff_ind iadl_independent 
local ivars3 adl1 adl2 adl3 iadl1 iadl2 iadl3 adl_eat_help adl_bath_help adl_toil_help ///
adl_dres_help adl_ins_help adl_bed_help iadl_laun_help ///
iadl_shop_help iadl_meal_help iadl_bank_help iadl_meds_help ///
 reg_doc_seen sr_hosp_ind
gen lfunextwave=nwstatus==7
label var lfune "Lost to follow up prior to next wave"
local cvars1 age
local cvars2 persontime  aveincome
local ivars1 female white black hisp other_race married 
label var inchb "Incident Homebound Next Wave"
label var incnh "Incident Nursing Home Next Wave"
local ivars2 inccat1 inccat2 inccat3 inccat4 proxy  ///
medicaid medigap srh_fp adl_eat_help adl_bath_help adl_toil_help adl_dres_help ///
adl_ins_help adl_bed_help adl_impair iadl_impair ///
sr_cond_cat1 sr_cond_cat2 sr_cond_cat3 sr_ami_ever sr_stroke_ever sr_cancer_ever sr_hip_ever sr_heart_dis_ever ///
sr_htn_ever sr_ra_ever sr_osteoprs_ever sr_diabetes_ever sr_lung_dis_ever ///
prob_dementia dem_2_cat adl_diff_ind adl_independent inchbnextwave incnhnextwave ///
lfunextwave died_12 everhb evernh metro_ind northeast midwest south ind_replenish ///
fin_strain creditdebt mealskip nopayhous nopayutil nopaymed medcreditdebt medpaynotcash finhlpfam any_asst ///
govtasst meals_wheels section8 
label var meals_wheels "Meals on Wheels"

foreach x in fin_strain creditdebt medcreditdebt medpaynotcash finhlpfam meals_wheels mealskip nopayhous nopayutil nopaymed any_asst {
replace `x'=0 if `x'==.
}


gen n=1

label var educ_hs_ind "Education: HS+"
//preserve
*log using homebound_income_cox_log.txt, text replace
drop if missing(homebound_cat) & !nhres
by spid, sort: egen lastwave=max(wave)
*keep if wave==2 
tab lastwave
*keep if inrange(homebound_cat,2,4)
gen time=lastwave
gen first_hb_or_nh=firsthb
replace first_hb=firstnh if firstnh<firsthb
replace time=first_hb_or_nh if !missing(first_hb_or_nh)

gen ind_helper_any=n_helpers>0
label var ind_helper_any "Any helpers"
gen dies=!missing(death_date)
gen ultimate=everhb==1
replace ultimate=2 if evernh==1 & !ultimate
replace ultimate=2 if firstnh<firsthb
replace ultimate=3 if !missing(death_date) & !ultimate
stset time, failure(everhb) 
sts graph, by(income_cat)
graph save km_hb, replace
graph export km_hb.pdf, replace

forvalues i=1/6 {
local lab : label r1d2intvrage `i'
label define agecat `i' "`lab'", modify
}


foreach x in agecat income_cat {
levelsof `x', local(levels)
foreach l of local levels {
	gen `x'`l'=`x'==`l'
	local lab : label `x' `l'
	label var `x'`l' "`lab'"
}
}

forvalues i=2/6 {
	local age `age' agecat`i'
}

forvalues i=1/3 {
	local inc `inc' income_cat`i'
}

local cond sr_cond_cat2 sr_cond_cat3

local vars `age' `inc' fin_strain anydebt govtasst finhlpfam meals_wheels ///
female black hisp married ind_noone educ_hs_ind  ///
medicaid prob_dem `cond' adl_diff_ind srh_fp ///
ind_paid_helper metro_ind northeast midwest south ind_replenish 

svy, subpop(if wave==2 &  inrange(homebound_cat,2,4)): stcox `vars' //, nohr mgale(mg)
*stcoxkm. by(income_cat)
qui outreg, ctitles("" "Homebound") varlabels stats(e_b p)

stphplot, by(income_cat) adjust(`age'  female black hisp married  ind_noone  educ_hs_ind  ///
medicaid prob_dem `cond' adl_diff_ind srh_fp ind_paid_helper ///
metro_ind northeast midwest south fin_strain any_asst)
stphplot, by(income_cat)

gen timenh=firstnh
replace timenh=lastwave if missing(firstnh)
stset timenh, failure(evernh)
sts graph, by(income_cat)
graph save km_nh, replace
graph export km_nh.pdf, replace


svy, subpop(if wave==2 &  inrange(homebound_cat,2,4)): stcox `vars'

qui outreg, merge ctitles("" "Nursing home") varlabels stats(e_b p)

gen either=everhb==1 | evernh==1
stset time, failure(either)
sts graph, by(income_cat)
graph save km_either, replace
graph export km_either.pdf, replace

local vars `age' `inc' fin_strain anydebt govtasst finhlpfam meals_wheels ///
female black hisp married ind_noone educ_hs_ind  ///
medicaid prob_dem `cond' adl_diff_ind srh_fp ///
ind_paid_helper metro_ind northeast midwest south ind_replenish 

svy, subpop(if wave==2 &  inrange(homebound_cat,2,4)): stcox `vars'

qui outreg using homebound_income_cox_models_incl_2015_samp_weighted, merge ///
ctitles("" "HB or NH") varlabels  ///
title(Cox proportional hazard models) stats(e_b p) replace ///
note("Among wave 2 non-homebound community dwelling SPs")
capture drop p hb2 nh2 either2
predict p 
sum `vars' if missing(p)

sort spid wave
by spid: gen hb2=inlist(nwstat,2,3) if nwstat<7
by spid: gen nh2=inlist(nwstat,4,5) if nwstat<7
gen either2=hb2==1 | nh2==1 if !missing(hb2)
svy, subpop(if wave==2 & inrange(homebound_cat,2,4)): logit hb2 `vars'
qui outreg, stats(e_b p) ctitles("" "Homebound") varlabels
svy, subpop(if wave==2 & inrange(homebound_cat,2,4)): logit nh2 `vars'
qui outreg, stats(e_b p) ctitles("" "Nursing Home") varlabels merge
svy, subpop(if wave==2 & inrange(homebound_cat,2,4)): logit either2 `vars'
qui outreg, stats(e_b p) ctitles("" "HB or NH") varlabels merge

outreg using homebound_income_logit_incl_2015_samp_weighted, replay replace ///
title(Logistic regression on next wave status) ///
note("Among wave 2/5 non-homebound community dwelling SPs")




H="Cox with TVC"
clear all
set more off
capture log close


cd "E:\nhats\data\projects\Homebound\logs"
use "E:\nhats\data\NHATS cleaned\sp_round_1_6.dta" if lml==0, clear

//cpi inflation
gen income_adj=0
replace income_adj= (240.007/224.939)*aveincome if wave==1
replace income_adj= (240.007/229.594)*aveincome if wave==2
replace income_adj= (240.007/232.957)*aveincome if wave==3
replace income_adj= (240.007/236.736)*aveincome if wave==4
replace income_adj= (240.007/237.017)*aveincome if wave==5
replace income_adj=aveincome if wave==6

//reweight, per Maureen's instructions
gen orig_weight=anfinw
replace anfinw=anfinw/2
//reset wave to 1/2 from 5/6 to run for 2015 cohort
replace wave=wave-3 if year==2015
gen ind_replenish=year==2015
label var ind_replenish "2015 Replenishment Cohort"
replace anfinw=. if wave!=2
sort spid wave
by spid: carryforward anfinw, replace
drop if missing(anfinw)
gen ind_noone=n_social==0
label var ind_noone "SR nobody in social network"
sort spid wave
*by spid: keep if prob_dem[1]==1
by spid: egen firstdem=min(cond(prob_dem==1,wave,.))
xtset spid wave
replace homebound_cat=. if nhres==1
gen homebound=homebound==1 if !missing(homebound) & !nhres
gen hbw=wave if homebound==1
gen nhw=wave if nhres==1
by spid, sort: egen firsthb=min(hbw)
by spid, sort: egen firstnh=min(nhw)
gen everhb=!missing(firsthb)
gen evernh=!missing(firstnh)
label var everhb "Ever HB"
label var evernh "Ever NH"
*drop if firsthb==1 | missing(homebou)
by spid: gen hbnextwave=homebound[_n+1]
by spid: gen nhnextwave=nhres[_n+1]
gen inchbnextwave=firsthb==wave+1 & homebound==0
gen incnhnextwave=firstnh==wave+1 & nhres==0
replace adl_diff_ind=1 if adl_impair==1
label var adl_diff_ind "ADL difficulty or impairment"

gen wherelandgroup=1 if missing(firsthb) & missing(firstnh)
replace wherelandgroup=2 if !missing(firsthb) 
replace wherelandgroup=3 if !missing(firstnh) 
replace wherelandgroup=4 if !missing(firstnh) & firsthb<firstnh
label define wherelandgroup 1 "Never homebound or NH resident" 2 "Future HB" ///
3 "Future NH resident" 4 "Homebound, then NH"
label values wherelandgroup wherelandgroup

sort spid wave
by spid: drop if firstnh<wave
by spid: drop if firsthb<wave


gen nwstatus=.
forvalues i=2/5 {
replace nwstatus=r`=`i'+1'status if wave==`i'
}
replace nwstatus=r6status if year==2015 & wave==2
tab nwstat
tab r2status
replace nwstatus=1 if inlist(nwstatus,60,63) & !missing(hbne)
replace nwstatus=4 if inlist(nwstatus,61)
replace nwstatus=6 if inlist(nwstatus,62,86)
replace nwstatus=7 if nwstatus>7
replace nwstatus=6 if died_12==1 & nwstatus==7
label define nwstatus 1 "Community, not homebound" 2 "Homebound, not incident" ///
3 "Incident homebound" 4 "NH Resident, not incident" ///
5 "Incident NH" 6 "Died" 7 "LFU"
label values nwstatus nwstatus
replace nwstatus=2 if hbne==1
replace nwstatus=3 if inchb==1
replace nwstat=4 if nhne==1
replace nwstat=5 if incnhne==1
label var nwstat "Status next wave"
replace died_12=0 if nwstatus<=5
label var died_12 "Died prior to next wave"

gen northeast=region==1
gen midwest=region==2
gen south=region==3
gen west=region==4
label var northe "Northeast"
label var midw "Midwest"
label var south "South"
label var west "West"
gen sr_cond_cat=1 if sr_numcond<2
replace sr_cond_cat=2 if inrange(sr_numcond,2,4)
replace sr_cond_cat=3 if inrange(sr_numcond,5,15)
label define sr_cond_cat 1 "0-1 SR condition" 2 "2-4 SR conditions" 3 "5+ SR conditions"
label values sr_cond_cat sr_cond_cat
tab sr_cond_cat, gen(sr_cond_cat)
forvalues i=1/3 {
local lab: label sr_cond_cat `i'
label var sr_cond_cat`i' "`lab'"
}

gen anydebt=creditdebt==1 | medpayno==1 if !missing(creditdebt) | !missing(medpayn)
label var anydebt "Credit card or medical debt"

gen status=1 if sp_ivw==1 & !missing(homebound)
replace status=2 if homebound==1
replace status=3 if nhres==1
replace status=4 if status==1 & (firsthb<wave | firstnh<wave)
label define status 1 "Community, not HB" 2 "Homebound" 3 "NH resident" 4 ///
"Community, previously HB or NH resident"
label values status status
label var status "Status this wave"


foreach x in nopayhous nopayutil nopaymed mealskip  {
replace `x'=. if `x'==2
}
replace mealskipnum=. if mealskipnum==5
gen fin_strain=.
replace fin_strain=0 if nopayhous==0 & nopayutil==0 & nopaymed==0 & mealskip==0 
replace fin_strain=1 if nopayhous==1 | nopayutil==1 | nopaymed==1 | mealskip==1
label var fin_strain "Financial Strain (Any nopay/mealskip)"

gen any_asst= govtasst
replace any_asst=1 if section8==1
label var any_asst "Reci. any Public Assist. (incl. Gov't assist./Section 8"



tab wave nwstat if wave<=4, row
tab nwsta status if wave==2 

sum aveincome
forvalues i=1/4 {
gen inccat`i'=income_cat==`i'-1
local lab : label income_cat `=`i'-1'
label var inccat`i' "Income: `lab'"
}
gen prob_dementia=dem_3==1 if !missing(dem_3)
label var prob_dementia "Probable dementia"

by spid, sort: gen persontime=_N
replace persontime=firsthb if firsthb<persontime
replace persontime=firstnh if firstnh<persontime
label var persontime "Waves contributing information"

local cvars1 age
local cvars2 n_social_network persontime aveincome n_helpers n_paid_helpers tot_hrsmonth_help_i ///
tot_hrsmonth_paid_i 
local ivars1 female white black hisp other_race married livealone educ_hs_ind proxy ind_noone
local ivars2 ind_any_helpers ind_paid_helper top_quartile_help_helped ///
medicaid medigap srh_fp nhres ///
sr_ami_ever sr_stroke_ever sr_cancer_ever sr_hip_ever sr_heart_dis_ever ///
sr_htn_ever sr_ra_ever sr_osteoprs_ever sr_diabetes_ever sr_lung_dis_ever ///
prob_dementia dem_2_cat adl_diff_ind adl_independent iadl_diff_ind iadl_independent 
local ivars3 adl1 adl2 adl3 iadl1 iadl2 iadl3 adl_eat_help adl_bath_help adl_toil_help ///
adl_dres_help adl_ins_help adl_bed_help iadl_laun_help ///
iadl_shop_help iadl_meal_help iadl_bank_help iadl_meds_help ///
 reg_doc_seen sr_hosp_ind
gen lfunextwave=nwstatus==7
label var lfune "Lost to follow up prior to next wave"
local cvars1 age
local cvars2 persontime  aveincome
local ivars1 female white black hisp other_race married 
label var inchb "Incident Homebound Next Wave"
label var incnh "Incident Nursing Home Next Wave"
local ivars2 inccat1 inccat2 inccat3 inccat4 proxy  ///
medicaid medigap srh_fp adl_eat_help adl_bath_help adl_toil_help adl_dres_help ///
adl_ins_help adl_bed_help adl_impair iadl_impair ///
sr_cond_cat1 sr_cond_cat2 sr_cond_cat3 sr_ami_ever sr_stroke_ever sr_cancer_ever sr_hip_ever sr_heart_dis_ever ///
sr_htn_ever sr_ra_ever sr_osteoprs_ever sr_diabetes_ever sr_lung_dis_ever ///
prob_dementia dem_2_cat adl_diff_ind adl_independent inchbnextwave incnhnextwave ///
lfunextwave died_12 everhb evernh metro_ind northeast midwest south ind_replenish ///
fin_strain creditdebt mealskip nopayhous nopayutil nopaymed medcreditdebt medpaynotcash finhlpfam any_asst ///
govtasst meals_wheels section8 
label var meals_wheels "Meals on Wheels"

foreach x in fin_strain creditdebt medcreditdebt medpaynotcash finhlpfam meals_wheels mealskip nopayhous nopayutil nopaymed any_asst {
replace `x'=0 if `x'==.
}


gen n=1

label var educ_hs_ind "Education: HS+"
preserve
*log using homebound_income_cox_log.txt, text replace
drop if missing(homebound_cat) & !nhres
by spid, sort: egen lastwave=max(wave)
*keep if wave==2 
tab lastwave
*keep if inrange(homebound_cat,2,4)
gen time=lastwave
gen first_hb_or_nh=firsthb
replace first_hb=firstnh if firstnh<firsthb
replace time=first_hb_or_nh if !missing(first_hb_or_nh)

gen ind_helper_any=n_helpers>0
label var ind_helper_any "Any helpers"
gen dies=!missing(death_date)
gen ultimate=everhb==1
replace ultimate=2 if evernh==1 & !ultimate
replace ultimate=2 if firstnh<firsthb
replace ultimate=3 if !missing(death_date) & !ultimate
stset wave, failure(homebound_==1) id(spid) origin(wave==2)

forvalues i=1/6 {
local lab : label r1d2intvrage `i'
label define agecat `i' "`lab'", modify
}


foreach x in agecat income_cat {
levelsof `x', local(levels)
foreach l of local levels {
	gen `x'`l'=`x'==`l'
	local lab : label `x' `l'
	label var `x'`l' "`lab'"
}
}

forvalues i=2/6 {
	local age `age' agecat`i'
}

forvalues i=0/2 {
	local inc `inc' income_cat`i'
}

local cond sr_cond_cat2 sr_cond_cat3

local vars `age' `inc' fin_strain anydebt govtasst finhlpfam meals_wheels ///
female black hisp married ind_noone educ_hs_ind  ///
medicaid prob_dem `cond' adl_impair srh_fp ///
ind_paid_helper metro_ind northeast midwest south ind_replenish 

local tvc `inc'

svy: stcox `vars' //, nohr mgale(mg)
*stcoxkm. by(income_cat)
qui outreg, ctitles("" "Homebound") varlabels stats(e_b p)

stphplot, by(income_cat) adjust(`vars')
stphplot, by(income_cat)

gen timenh=firstnh
replace timenh=lastwave if missing(firstnh)
stset wave, failure(nhres==1) id(spid) origin(wave==2)


svy: stcox `vars'

qui outreg, merge ctitles("" "Nursing home") varlabels stats(e_b p)

gen either=nhres==1 | homebound_==1
stset wave, failure(either==1) id(spid) origin(wave==2)

svy: stcox `vars'

qui outreg using homebound_income_cox_models_tvc, merge ///
ctitles("" "HB or NH") varlabels  ///
title(Cox proportional hazard models) stats(e_b p) replace ///
note("Among wave 2 non-homebound community dwelling SPs")
capture drop p hb2 nh2 either2
predict p 
sum `vars' if missing(p)

sort spid wave
by spid: gen hb2=inlist(nwstat,2,3) if nwstat<7
by spid: gen nh2=inlist(nwstat,4,5) if nwstat<7
gen either2=hb2==1 | nh2==1 if !missing(hb2)
svy, subpop(if inrange(homebound_cat,2,4)): logit hb2 `vars'
qui outreg, stats(e_b p) ctitles("" "Homebound") varlabels
svy, subpop(if inrange(homebound_cat,2,4)): logit nh2 `vars'
qui outreg, stats(e_b p) ctitles("" "Nursing Home") varlabels merge
svy, subpop(if inrange(homebound_cat,2,4)): logit either2 `vars'
qui outreg, stats(e_b p) ctitles("" "HB or NH") varlabels merge

outreg using homebound_income_logit_incl_2015_samp_weighted_mult_wave, replay replace ///
title(Logistic regression on next wave status) ///
note("Multi-wave logistic regressions non-homebound community dwelling SPs")




H="graph next wave hb over income distribution "
clear all
set more off
capture log close


cd "E:\nhats\data\projects\Homebound\logs"
use "E:\nhats\data\NHATS cleaned\sp_round_1_6.dta" if lml==0 , clear

//cpi inflation
gen income_adj=0
replace income_adj= (240.007/224.939)*aveincome if wave==1
replace income_adj= (240.007/229.594)*aveincome if wave==2
replace income_adj= (240.007/232.957)*aveincome if wave==3
replace income_adj= (240.007/236.736)*aveincome if wave==4
replace income_adj= (240.007/237.017)*aveincome if wave==5
replace income_adj=aveincome if wave==6

//reweight so later waves aren't overweighted
gen orig_weight=anfinw
sum anfinw if wave==1
gen n=1
sum n if wave==1 [aw=anfinw]
local w=r(sum)
forvalues i=1/6 {
sum n if wave==`i' [aw=anfinw]
replace anfinw=anfinw*`w'/r(sum) if wave==`i'
}
*svyset [pw=n]
drop n
//reset wave to 1/2 from 5/6 to run for 2015 cohort
replace wave=wave-4 if year==2015
gen ind_replenish=year==2015
label var ind_replenish "2015 Replenishment Cohort"

gen ind_noone=n_social==0
label var ind_noone "SR nobody in social network"
sort spid wave
*by spid: keep if prob_dem[1]==1
by spid: egen firstdem=min(cond(prob_dem==1,wave,.))
xtset spid wave
replace homebound_cat=. if nhres==1
gen homebound=homebound==1 if !missing(homebound) & !nhres
gen hbw=wave if homebound==1
gen nhw=wave if nhres==1
by spid, sort: egen firsthb=min(hbw)
by spid, sort: egen firstnh=min(nhw)
replace firsthb=firsthb-1
replace firstnh=firstnh-1
gen everhb=!missing(firsthb)
gen evernh=!missing(firstnh)
label var everhb "Ever HB"
label var evernh "Ever NH"
*drop if firsthb==1 | missing(homebou)
by spid: gen hbnextwave=homebound[_n+1]
by spid: gen nhnextwave=nhres[_n+1]
gen inchbnextwave=firsthb==wave+1 & homebound==0
gen incnhnextwave=firstnh==wave+1 & nhres==0
replace adl_diff_ind=1 if adl_impair==1
label var adl_diff_ind "ADL difficulty or impairment"

gen wherelandgroup=1 if missing(firsthb) & missing(firstnh)
replace wherelandgroup=2 if !missing(firsthb) 
replace wherelandgroup=3 if !missing(firstnh) 
replace wherelandgroup=4 if !missing(firstnh) & firsthb<firstnh
label define wherelandgroup 1 "Never homebound or NH resident" 2 "Future HB" ///
3 "Future NH resident" 4 "Homebound, then NH"
label values wherelandgroup wherelandgroup

sort spid wave
by spid: drop if nhres[_n-1]==1 
by spid: drop if homebound_cat[_n-1]==. & wave!=1


gen nwstatus=.
forvalues i=1/5 {
replace nwstatus=r`=`i'+1'status if wave==`i'
}
replace nwstatus=r`=wave+5'status if year==2015 & wave==1
tab nwstat
tab r2status
replace nwstatus=1 if inlist(nwstatus,60,63) & !missing(hbne)
replace nwstatus=4 if inlist(nwstatus,61)
replace nwstatus=6 if inlist(nwstatus,62,86)
replace nwstatus=7 if nwstatus>7
replace nwstatus=6 if died_12==1 & nwstatus==7
label define nwstatus 1 "Community, not homebound" 2 "Homebound, not incident" ///
3 "Incident homebound" 4 "NH Resident, not incident" ///
5 "Incident NH" 6 "Died" 7 "LFU"
label values nwstatus nwstatus
replace nwstatus=2 if hbne==1
replace nwstatus=3 if inchb==1
replace nwstat=4 if nhne==1
replace nwstat=5 if incnhne==1
label var nwstat "Status next wave"
replace died_12=0 if nwstatus<=5
label var died_12 "Died prior to next wave"

gen northeast=region==1
gen midwest=region==2
gen south=region==3
gen west=region==4
label var northe "Northeast"
label var midw "Midwest"
label var south "South"
label var west "West"
gen sr_cond_cat=1 if sr_numcond<2
replace sr_cond_cat=2 if inrange(sr_numcond,2,4)
replace sr_cond_cat=3 if inrange(sr_numcond,5,15)
label define sr_cond_cat 1 "0-1 SR condition" 2 "2-4 SR conditions" 3 "5+ SR conditions"
label values sr_cond_cat sr_cond_cat
tab sr_cond_cat, gen(sr_cond_cat)
forvalues i=1/3 {
local lab: label sr_cond_cat `i'
label var sr_cond_cat`i' "`lab'"
}

gen status=1 if sp_ivw==1 & !missing(homebound)
replace status=2 if homebound==1
replace status=3 if nhres==1
replace status=4 if status==1 & (firsthb<wave | firstnh<wave)
label define status 1 "Community, not HB" 2 "Homebound" 3 "NH resident" 4 ///
"Community, previously HB or NH resident"
label values status status
label var status "Status this wave"

tab wave nwstat if wave<=4, row
tab nwsta status if wave==1 
keep if inrange(homebound_,2,4)
//2/27/18--add extra income thresholds & education cats

levelsof educa, local(levels)
foreach l of local levels {
gen ed`l'=education==`l' if !missing(education)
local lab : label edulbl `l'
label var ed`l' "`lab'"
}
local ed
forvalues i=1/3 {
local ed `ed' ed`i'
}



sum aveincome if wave==1 [aw=anfinw],d
gen inccat=1 if aveincome<=r(p10)
replace inccat=2 if inrange(aveincome,r(p10),r(p25))
replace inccat=3 if inrange(aveincome,r(p25),r(p50))
replace inccat=4 if inrange(aveincome,r(p50),r(p75))
replace inccat=5 if inrange(aveincome,r(p75),r(p90))
replace inccat=6 if inrange(aveincome,r(p90),r(max))

label define inccat 1 "Income bottom 10%" 2 "Income 10-25%" 3 "Income 25-50%" ///
4 "Income 50-75%" 5 "Income 75-90%" 6 "Income top 10%"
label values inccat inccat
forvalues i=1/6 {
gen inccat`i'=inccat==`i'
local lab : label inccat `i'
label var inccat`i' "`lab'"
}
local inccat
forvalues i=1/5 {
local inccat `inccat' inccat`i'
}
gen prob_dementia=dem_3==1 if !missing(dem_3)
label var prob_dementia "Probable dementia"

by spid, sort: gen persontime=_N
replace persontime=firsthb if firsthb<persontime
replace persontime=firstnh if firstnh<persontime
label var persontime "Waves contributing information"

local cvars1 age
local cvars2 n_social_network persontime aveincome n_helpers n_paid_helpers tot_hrsmonth_help_i ///
tot_hrsmonth_paid_i 
local ivars1 female white black hisp other_race married livealone educ_hs_ind `ed' proxy ind_noone
local ivars2 ind_any_helpers ind_paid_helper top_quintile_help_helped ///
medicaid medigap srh_fp nhres ///
sr_ami_ever sr_stroke_ever sr_cancer_ever sr_hip_ever sr_heart_dis_ever ///
sr_htn_ever sr_ra_ever sr_osteoprs_ever sr_diabetes_ever sr_lung_dis_ever ///
prob_dementia dem_2_cat adl_diff_ind adl_independent iadl_diff_ind iadl_independent 
local ivars3 adl1 adl2 adl3 iadl1 iadl2 iadl3 adl_eat_help adl_bath_help adl_toil_help ///
adl_dres_help adl_ins_help adl_bed_help iadl_laun_help ///
iadl_shop_help iadl_meal_help iadl_bank_help iadl_meds_help ///
 reg_doc_seen sr_hosp_ind
gen lfunextwave=nwstatus==7
label var lfune "Lost to follow up prior to next wave"
local cvars1 age
local cvars2 persontime  aveincome
local ivars1 female white black hisp other_race married 
label var inchb "Incident Homebound Next Wave"
label var incnh "Incident Nursing Home Next Wave"
local ivars2 `inccat' creditdebt medpaynotcash govtasst proxy  ///
medicaid medigap srh_fp adl_eat_help adl_bath_help adl_toil_help adl_dres_help ///
adl_ins_help adl_bed_help adl_impair iadl_impair ///
sr_cond_cat1 sr_cond_cat2 sr_cond_cat3 sr_ami_ever sr_stroke_ever sr_cancer_ever sr_hip_ever sr_heart_dis_ever ///
sr_htn_ever sr_ra_ever sr_osteoprs_ever sr_diabetes_ever sr_lung_dis_ever ///
prob_dementia dem_2_cat adl_diff_ind adl_independent inchbnextwave incnhnextwave ///
lfunextwave died_12 everhb evernh metro_ind northeast midwest south ind_replenish


gen n=1

forvalues i=1/7 {
gen group`i'=nwstatus==`i'
}



local cvars1 age 
local ivars1 female



xtile pct=aveinc [aw=anfinw], nq(100)
xtile dec=aveinc [aw=anfinw], nq(10)
xtile half=aveinc [aw=anfinw], nq(2)
xtile quant=aveinc [aw=anfinw], nq(40)
xtile quart=aveinc [aw=anfinw], nq(4)
xtile quint=aveinc [aw=anfinw], nq(5)
xtile vigintile=aveinc [aw=anfinw], nq(20)
/*
preserve

collapse hbn, by(quant quint quint)

twoway (bar hbn quant) (lfit hbn quant if quint==1, color(red)) (lfit hbn quant if quint==2, color(red)) ///
(lfit hbn quant if quint==3, color(red)) (lfit hbn quant if quint==4, color(red)) (lfit hbn quant if quint==5, color(red)), ///
name(g1)
twoway (bar hbn quant) (lfit hbn quant if quint<3) (lfit hbn quant if quint>2), name(g2)
graph combine g1 g2
twoway (bar hbn quant) (lfit hbn quant if quint==1, color(red)) (lfit hbn quant if quint==2, color(red)) ///
(lfit hbn quant if quint==3, color(red)) (lfit hbn quant if quint==4, color(red)) (lfit hbn quant if quint==5, color(red)) ///
(lfit hbn quant if quint<3, color(orange)) (lfit hbn quant if quint>2, color(orange))

restore 
preserve
collapse hbn, by(pct income_cat)
replace income_cat=income_cat+1
twoway (bar hbn pct) (lfit hbn pct if income_cat==1, color(red)) (lfit hbn pct if income_cat==2, color(red)) ///
(lfit hbn pct if income_cat==3, color(red)) (lfit hbn pct if income_cat==0, color(red)) ///
(lfit hbn pct if income_cat<3, color(orange)) (lfit hbn pct if income_cat>2, color(orange))

/*
restore
preserve
collapse hbn, by(quant quart)
twoway (bar hbn quant) (lfit hbn quant if quart==1, color(red)) (lfit hbn quant if quart==2, color(red)) ///
(lfit hbn quant if quart==3, color(red)) (lfit hbn quant if quart==4, color(red)) ///
(lfit hbn quant if quart<3, color(orange)) (lfit hbn quant if quart>2, color(orange))

/*
preserve
collapse hbn, by(vigin quart)
twoway (bar hbn vigint) (lfit hbn vigint if quart==1, color(red)) (lfit hbn vigint if quart==2, color(red)) ///
(lfit hbn vigint if quart==3, color(red)) (lfit hbn vigint if quart==4, color(red))  ///
(lfit hbn vigint if quart<3, color(orange)) (lfit hbn vigint if quart>2, color(orange)), legend(off)

*/
*/
*/
preserve
keep if wave==1 & year==2011
collapse hbn, by(quant income_cat)
twoway (bar hbn quant) (lfit hbn quant if income_cat==1, color(red)) (lfit hbn quant if income_cat==0, ///
color(red)) (lfit hbn quant if inrange(income_cat,2,3), color(red)), name(wave1) legend(off) title("Wave 1")
graph save homebound_over_income_w1, replace
graph export homebound_over_income_w1.pdf, replace

restore

 preserve
keep if wave==2
collapse hbn, by(quant income_cat)
twoway (bar hbn quant) (lfit hbn quant if income_cat==1, color(red)) (lfit hbn quant if income_cat==2, color(red)) ///
(lfit hbn quant if income_cat==3, color(red)) (lfit hbn quant if income_cat==0, color(red)), ///
name(wave2) legend(off) title("Wave 2")
graph save homebound_over_income_w2, replace
graph export homebound_over_income_w2.pdf, replace

restore
preserve
keep if year==2015 & wave==1
collapse hbn, by(vigin /*quart*/ quant income_cat)
twoway (bar hbn quant) (lfit hbn quant if income_cat==1, color(red)) (lfit hbn quant if income_cat==2, color(red)) ///
(lfit hbn quant if income_cat==3, color(red)) (lfit hbn quant if income_cat==0, ///
color(red)), name(wave5) legend(off) title("Wave 5, 2015 cohort")
graph save homebound_over_income_2015cohort, replace
graph export homebound_over_income_2015cohort.pdf, replace

graph combine wave1 wave2 wave5
graph save combined, replace
graph export hb_income_combined.pdf, //replace
restore
twoway (bar hbn quant)  (lfit hbn quant if quart<3, color(orange)) (lfit hbn quant if quart>2, color(orange)), name(g2)

graph combine g1 g2


H="*************************************"


H="sample derivation tables income adj"
clear all
set more off
capture log close


cd "E:\nhats\data\projects\Homebound\logs"
use "E:\nhats\data\NHATS cleaned\sp_round_1_6.dta" if lml==0, clear

//cpi inflation
gen income_adj=0
replace income_adj= (240.007/224.939)*aveincome if wave==1
replace income_adj= (240.007/229.594)*aveincome if wave==2
replace income_adj= (240.007/232.957)*aveincome if wave==3
replace income_adj= (240.007/236.736)*aveincome if wave==4
replace income_adj= (240.007/237.017)*aveincome if wave==5
replace income_adj=aveincome if wave==6

//reweight, per Maureen's instructions
gen orig_weight=anfinw
replace anfinw=anfinw/2
//reset wave to 1/2 from 5/6 to run for 2015 cohort
replace wave=wave-3 if year==2015
gen ind_replenish=year==2015
label var ind_replenish "2015 Replenishment Cohort"

gen ind_noone=n_social==0
label var ind_noone "SR nobody in social network"
sort spid wave
*by spid: keep if prob_dem[1]==1
by spid: egen firstdem=min(cond(prob_dem==1,wave,.))
xtset spid wave
replace homebound_cat=. if nhres==1
gen homebound=homebound==1 if !missing(homebound) & !nhres
gen hbw=wave if homebound==1
gen nhw=wave if nhres==1
by spid, sort: egen firsthb=min(hbw)
by spid, sort: egen firstnh=min(nhw)
gen everhb=!missing(firsthb)
gen evernh=!missing(firstnh)
label var everhb "Ever HB"
label var evernh "Ever NH"
*drop if firsthb==1 | missing(homebou)
by spid: gen hbnextwave=homebound[_n+1]
by spid: gen nhnextwave=nhres[_n+1]
gen inchbnextwave=firsthb==wave+1 & homebound==0
gen incnhnextwave=firstnh==wave+1 & nhres==0
replace adl_diff_ind=1 if adl_impair==1
label var adl_diff_ind "ADL difficulty or impairment"

gen wherelandgroup=1 if missing(firsthb) & missing(firstnh)
replace wherelandgroup=2 if !missing(firsthb) 
replace wherelandgroup=3 if !missing(firstnh) 
replace wherelandgroup=4 if !missing(firstnh) & firsthb<firstnh
label define wherelandgroup 1 "Never homebound or NH resident" 2 "Future HB" ///
3 "Future NH resident" 4 "Homebound, then NH"
label values wherelandgroup wherelandgroup

sort spid wave
by spid: drop if nhres[_n-1]==1 
by spid: drop if homebound_cat[_n-1]==. & year<201`=wave'


gen nwstatus=.
forvalues i=2/5 {
replace nwstatus=r`=`i'+1'status if wave==`i'
}
replace nwstatus=r6status if year==2015 & wave==2
tab nwstat
tab r2status
replace nwstatus=1 if inlist(nwstatus,60,63) & !missing(hbne)
replace nwstatus=4 if inlist(nwstatus,61)
replace nwstatus=6 if inlist(nwstatus,62,86)
replace nwstatus=7 if nwstatus>7
replace nwstatus=6 if died_12==1 & nwstatus==7
label define nwstatus 1 "Community, not homebound" 2 "Homebound, not incident" ///
3 "Incident homebound" 4 "NH Resident, not incident" ///
5 "Incident NH" 6 "Died" 7 "LFU"
label values nwstatus nwstatus
replace nwstatus=2 if hbne==1
replace nwstatus=3 if inchb==1
replace nwstat=4 if nhne==1
replace nwstat=5 if incnhne==1
label var nwstat "Status next wave"
replace died_12=0 if nwstatus<=5
label var died_12 "Died prior to next wave"

gen northeast=region==1
gen midwest=region==2
gen south=region==3
gen west=region==4
label var northe "Northeast"
label var midw "Midwest"
label var south "South"
label var west "West"
gen sr_cond_cat=1 if sr_numcond<2
replace sr_cond_cat=2 if inrange(sr_numcond,2,4)
replace sr_cond_cat=3 if inrange(sr_numcond,5,15)
label define sr_cond_cat 1 "0-1 SR condition" 2 "2-4 SR conditions" 3 "5+ SR conditions"
label values sr_cond_cat sr_cond_cat
tab sr_cond_cat, gen(sr_cond_cat)
forvalues i=1/3 {
local lab: label sr_cond_cat `i'
label var sr_cond_cat`i' "`lab'"
}

gen status=1 if sp_ivw==1 & !missing(homebound)
replace status=2 if homebound==1
replace status=3 if nhres==1
replace status=4 if status==1 & (firsthb<wave | firstnh<wave)
label define status 1 "Community, not HB" 2 "Homebound" 3 "NH resident" 4 ///
"Community, previously HB or NH resident"
label values status status
label var status "Status this wave"


foreach x in nopayhous nopayutil nopaymed mealskip  {
replace `x'=. if `x'==2
}
replace mealskipnum=. if mealskipnum==5
gen fin_strain=.
replace fin_strain=0 if nopayhous==0 & nopayutil==0 & nopaymed==0 & mealskip==0 
replace fin_strain=1 if nopayhous==1 | nopayutil==1 | nopaymed==1 | mealskip==1
label var fin_strain "Financial Strain (Any nopay/mealskip)"

gen any_asst= govtasst
replace any_asst=1 if section8==1
label var any_asst "Reci. any Public Assist. (incl. Gov't assist./Section 8"



tab wave nwstat if wave<=4, row
tab nwsta status if wave==2 

sum income_adj
forvalues i=1/4 {
gen inccat`i'=income_quart==`i'
local lab : label income_quart `=`i''
label var inccat`i' "Income: `lab'"
}
gen prob_dementia=dem_3==1 if !missing(dem_3)
label var prob_dementia "Probable dementia"

by spid, sort: gen persontime=_N
replace persontime=firsthb if firsthb<persontime
replace persontime=firstnh if firstnh<persontime
label var persontime "Waves contributing information"
gen anydebt=creditdebt==1 | medpayno==1 if !missing(creditdebt) | !missing(medpayn)
label var anydebt "Credit card or medical debt"


local cvars1 age
local cvars2 n_social_network persontime income_adj n_helpers n_paid_helpers tot_hrsmonth_help_i ///
tot_hrsmonth_paid_i 
local ivars1 female white black hisp other_race married livealone educ_hs_ind proxy ind_noone
local ivars2 ind_any_helpers ind_paid_helper top_quartile_help_helped ///
medicaid medigap srh_fp nhres ///
sr_ami_ever sr_stroke_ever sr_cancer_ever sr_hip_ever sr_heart_dis_ever ///
sr_htn_ever sr_ra_ever sr_osteoprs_ever sr_diabetes_ever sr_lung_dis_ever ///
prob_dementia dem_2_cat adl_diff_ind adl_independent iadl_diff_ind iadl_independent 
local ivars3 adl1 adl2 adl3 iadl1 iadl2 iadl3 adl_eat_help adl_bath_help adl_toil_help ///
adl_dres_help adl_ins_help adl_bed_help iadl_laun_help ///
iadl_shop_help iadl_meal_help iadl_bank_help iadl_meds_help ///
 reg_doc_seen sr_hosp_ind
gen lfunextwave=nwstatus==7
label var lfune "Lost to follow up prior to next wave"
local cvars1 age
local cvars2 persontime  income_adj
local ivars1 female white black hisp other_race married 
label var inchb "Incident Homebound Next Wave"
label var incnh "Incident Nursing Home Next Wave"
local ivars2 inccat1 inccat2 inccat3 inccat4 proxy  ///
medicaid medigap srh_fp adl_eat_help adl_bath_help adl_toil_help adl_dres_help ///
adl_ins_help adl_bed_help adl_impair iadl_impair ///
sr_cond_cat1 sr_cond_cat2 sr_cond_cat3 sr_ami_ever sr_stroke_ever sr_cancer_ever sr_hip_ever sr_heart_dis_ever ///
sr_htn_ever sr_ra_ever sr_osteoprs_ever sr_diabetes_ever sr_lung_dis_ever ///
prob_dementia dem_2_cat adl_diff_ind adl_independent inchbnextwave incnhnextwave ///
lfunextwave died_12 everhb evernh metro_ind northeast midwest south ind_replenish ///
fin_strain mealskip nopayhous nopayutil nopaymed anydebt creditdebt medpaynotcash finhlpfam meals_wheels govtasst

label var meals_wheels "Meals on Wheels"

foreach x in fin_strain creditdebt medcreditdebt medpaynotcash finhlpfam meals_wheels mealskip nopayhous nopayutil nopaymed any_asst {
replace `x'=0 if `x'==.
}


gen n=1

forvalues i=1/7 {
gen group`i'=nwstatus==`i'
}

/*
*preserve
drop group*
forvalues i=1/3 {
gen group`i'=status==`i'
}
tab nwstatus,gen(nw)
levelsof nwstatus, local(levels)

foreach l of local levels {
local lab : label nwstatus `l'
label var nw`l' "`lab'"
local nw `nw' nw`l'
}
*/
preserve
drop if wave==1
gen inw2=wave==2
gen inscope=wave==2 & inrange(homebound_cat,2,4)
by spid: egen ind_nh=max(nhres)
gen ind_died=!missing(death_date) & !ind_nh
drop if missing(homebound_cat) | nhres
by spid: replace persontime=_N-1
gen lt4yrs=persontime<4
gen lt1yrs=persontime<1
gen censored=lt4 if year==2011
replace censored=lt1 if year==2015
label var inw2 "Wave 2/5"
label var inscope "Wave 2 or 5 & Not Homebound (Never/Rarely)"
label var ind_nh "Nursing Home"
label var ind_died "Died"
label var lt4yrs "Less than 4 years"
label var lt1yrs "Less than 1 year"

mat tab=J(7,2,.)
local r=1
foreach x in inw2 inscope lt4yrs lt1yr censored ind_nh ind_died {
	sum n if `x'==1 & year==2011
	mat tab[`r',1]=r(N)
	sum n if `x'==1 & year==2015
	mat tab[`r',2]=r(N)
	keep if inscope==1
	local r=`r'+1
}
mat rownames tab=inw2 inscope lt4yrs lt2yrs censored ind_nh ind_died

frmttable using sample_derivation1, replace  statmat(tab) sdec(0) varlabels

drop group*
gen group1=!censored
gen group2=censored
keep if status==1 & wave==2
local rn : word count 1 `cvars1' `cvars2' `ivars1' `ivars2' `coutcomes' `coutcomes' `ioutcomes' 1 1
di `rn'
mat tab1=J(`rn',5,.)
mat stars=J(`rn',5,0)
local r=1
local c=1
foreach i in 1 2 {
	foreach round in 1 2 {
		foreach x of local cvars`round' {
			qui sum `x' if group`i'==1 & wave==2  [aw=anfin]
			mat tab1[`r',`c']=r(mean)
			if inlist("`i'","2") {
				svy: reg `x' group`i' if group`i'==1 | group1==1
				test group`i'
				mat stars[`r',`c']=(r(p)<.01) + (r(p)<.05) 
}
			local r=`r'+1
}
		foreach x of local ivars`round' {
			qui sum `x' if group`i'==1 & wave==2  [aw=anfin]
			mat tab1[`r',`c']=r(mean)*100
			if inlist("`i'","2") {
				svy, subpop(if status==1 & wave==2  & group`i'==1 | group1==1): tab `x' group`i' 
				mat stars[`r',`c']=(e(p_Pear)<.01) + (e(p_Pear)<.05)
}
			local r=`r'+1
}
}
	local r=`r'+1

	
	foreach x of local coutcomes {
		qui sum `x' if group`i'==1,d
		mat tab1[`r',`c']=r(mean)
		if inlist("`i'","2") {
				svy: reg `x' group`i' if group`i'==1 | group1==1
				test group`i'
			mat stars[`r',`c']=(r(p)<.01) + (r(p)<.05)
}
		local r=`r'+1
*		if "`x'"=="tot_paid_by_mc_12m_wi_n0" {
			qui sum `x' if group`i'==1,d
			mat tab1[`r',`c']=r(p50)
			local r=`r'+1
*}
}
	foreach x of local ioutcomes {
		qui sum `x' if group`i'==1
		mat tab1[`r',`c']=r(mean)*100
			if inlist("`i'","2") {
				svy, subpop(if status==1 & wave==2  & group`i'==1 | group1==1): tab `x' group`i' 
				mat stars[`r',`c']=(e(p_Pear)<.01) + (e(p_Pear)<.05)
}
			local r=`r'+1
}
	qui sum n if group`i'==1 & wave==2  [aw=anfin]
	
	mat tab1[`r',`c']=r(N)
	mat tab1[`r'+1,`c']=r(sum)
	local r=1
	local c=`c'+1
}

foreach x in `coutcomes' {
local rnames `rnames' "`x'" "Median"
}

mat rownames tab1=`cvars1' `ivars1' `cvars2' `ivars2' "_" N "Estimate"

frmttable using sample_derivation1, addtable statmat(tab1) ///
 title("Sample Characteristics by waves contributed") ///
 ctitles("" "Community"  "Missing waves") ///
 sdec(2) annotate(stars) asymbol(*,**) ///
 varlabels note("Waves 2/5 NHATS community-dwelling sample" "Missing waves if died, ever NH or LFU")


H="tables incl. financial strain with waves 2 and 5 income adj"
clear all
set more off
capture log close


cd "E:\nhats\data\projects\Homebound\logs"
use "E:\nhats\data\NHATS cleaned\sp_round_1_6.dta" if lml==0, clear

//cpi inflation
gen income_adj=0
replace income_adj= (240.007/224.939)*aveincome if wave==1
replace income_adj= (240.007/229.594)*aveincome if wave==2
replace income_adj= (240.007/232.957)*aveincome if wave==3
replace income_adj= (240.007/236.736)*aveincome if wave==4
replace income_adj= (240.007/237.017)*aveincome if wave==5
replace income_adj=aveincome if wave==6

//reweight, per Maureen's instructions
gen orig_weight=anfinw
replace anfinw=anfinw/2
//reset wave to 1/2 from 5/6 to run for 2015 cohort
replace wave=wave-3 if year==2015
gen ind_replenish=year==2015
label var ind_replenish "2015 Replenishment Cohort"

gen ind_noone=n_social==0
label var ind_noone "SR nobody in social network"
sort spid wave
*by spid: keep if prob_dem[1]==1
by spid: egen firstdem=min(cond(prob_dem==1,wave,.))
xtset spid wave
replace homebound_cat=. if nhres==1
gen homebound=homebound==1 if !missing(homebound) & !nhres
gen hbw=wave if homebound==1
gen nhw=wave if nhres==1
by spid, sort: egen firsthb=min(hbw)
by spid, sort: egen firstnh=min(nhw)
gen everhb=!missing(firsthb)
gen evernh=!missing(firstnh)
label var everhb "Ever HB"
label var evernh "Ever NH"
*drop if firsthb==1 | missing(homebou)
by spid: gen hbnextwave=homebound[_n+1]
by spid: gen nhnextwave=nhres[_n+1]
gen inchbnextwave=firsthb==wave+1 & homebound==0
gen incnhnextwave=firstnh==wave+1 & nhres==0
replace adl_diff_ind=1 if adl_impair==1
label var adl_diff_ind "ADL difficulty or impairment"

gen wherelandgroup=1 if missing(firsthb) & missing(firstnh)
replace wherelandgroup=2 if !missing(firsthb) 
replace wherelandgroup=3 if !missing(firstnh) 
replace wherelandgroup=4 if !missing(firstnh) & firsthb<firstnh
label define wherelandgroup 1 "Never homebound or NH resident" 2 "Future HB" ///
3 "Future NH resident" 4 "Homebound, then NH"
label values wherelandgroup wherelandgroup

sort spid wave
by spid: drop if nhres[_n-1]==1 
by spid: drop if homebound_cat[_n-1]==. & year<201`=wave'


gen nwstatus=.
forvalues i=2/5 {
replace nwstatus=r`=`i'+1'status if wave==`i'
}
replace nwstatus=r6status if year==2015 & wave==2
tab nwstat
tab r2status
replace nwstatus=1 if inlist(nwstatus,60,63) & !missing(hbne)
replace nwstatus=4 if inlist(nwstatus,61)
replace nwstatus=6 if inlist(nwstatus,62,86)
replace nwstatus=7 if nwstatus>7
replace nwstatus=6 if died_12==1 & nwstatus==7
label define nwstatus 1 "Community, not homebound" 2 "Homebound, not incident" ///
3 "Incident homebound" 4 "NH Resident, not incident" ///
5 "Incident NH" 6 "Died" 7 "LFU"
label values nwstatus nwstatus
replace nwstatus=2 if hbne==1
replace nwstatus=3 if inchb==1
replace nwstat=4 if nhne==1
replace nwstat=5 if incnhne==1
label var nwstat "Status next wave"
replace died_12=0 if nwstatus<=5
label var died_12 "Died prior to next wave"

gen northeast=region==1
gen midwest=region==2
gen south=region==3
gen west=region==4
label var northe "Northeast"
label var midw "Midwest"
label var south "South"
label var west "West"
gen sr_cond_cat=1 if sr_numcond<2
replace sr_cond_cat=2 if inrange(sr_numcond,2,4)
replace sr_cond_cat=3 if inrange(sr_numcond,5,15)
label define sr_cond_cat 1 "0-1 SR condition" 2 "2-4 SR conditions" 3 "5+ SR conditions"
label values sr_cond_cat sr_cond_cat
tab sr_cond_cat, gen(sr_cond_cat)
forvalues i=1/3 {
local lab: label sr_cond_cat `i'
label var sr_cond_cat`i' "`lab'"
}

gen status=1 if sp_ivw==1 & !missing(homebound)
replace status=2 if homebound==1
replace status=3 if nhres==1
replace status=4 if status==1 & (firsthb<wave | firstnh<wave)
label define status 1 "Community, not HB" 2 "Homebound" 3 "NH resident" 4 ///
"Community, previously HB or NH resident"
label values status status
label var status "Status this wave"


foreach x in nopayhous nopayutil nopaymed mealskip  {
replace `x'=. if `x'==2
}
replace mealskipnum=. if mealskipnum==5
gen fin_strain=.
replace fin_strain=0 if nopayhous==0 & nopayutil==0 & nopaymed==0 & mealskip==0 
replace fin_strain=1 if nopayhous==1 | nopayutil==1 | nopaymed==1 | mealskip==1
label var fin_strain "Financial Strain (Any nopay/mealskip)"

gen any_asst= govtasst
replace any_asst=1 if section8==1
label var any_asst "Reci. any Public Assist. (incl. Gov't assist./Section 8"



tab wave nwstat if wave<=4, row
tab nwsta status if wave==2 
/*sum aveincome
forvalues i=1/4 {
gen inccat`i'=income_cat==`i'-1
local lab : label income_cat `=`i'-1'
label var inccat`i' "Income: `lab'"
}*/
sum income_adj
forvalues i=1/4 {
gen inccat`i'=income_quart==`i'
local lab : label income_quart `=`i''
label var inccat`i' "Income: `lab'"
}
gen prob_dementia=dem_3==1 if !missing(dem_3)
label var prob_dementia "Probable dementia"

by spid, sort: gen persontime=_N
replace persontime=firsthb if firsthb<persontime
replace persontime=firstnh if firstnh<persontime
label var persontime "Waves contributing information"
gen anydebt=creditdebt==1 | medpayno==1 if !missing(creditdebt) | !missing(medpayn)
label var anydebt "Credit card or medical debt"

local cvars1 age
local cvars2 n_social_network persontime income_adj n_helpers n_paid_helpers tot_hrsmonth_help_i ///
tot_hrsmonth_paid_i 
local ivars1 female white black hisp other_race married livealone educ_hs_ind proxy ind_noone
local ivars2 ind_any_helpers ind_paid_helper top_quartile_help_helped ///
medicaid medigap srh_fp nhres ///
sr_ami_ever sr_stroke_ever sr_cancer_ever sr_hip_ever sr_heart_dis_ever ///
sr_htn_ever sr_ra_ever sr_osteoprs_ever sr_diabetes_ever sr_lung_dis_ever ///
prob_dementia dem_2_cat adl_diff_ind adl_independent iadl_diff_ind iadl_independent 
local ivars3 adl1 adl2 adl3 iadl1 iadl2 iadl3 adl_eat_help adl_bath_help adl_toil_help ///
adl_dres_help adl_ins_help adl_bed_help iadl_laun_help ///
iadl_shop_help iadl_meal_help iadl_bank_help iadl_meds_help ///
 reg_doc_seen sr_hosp_ind
gen lfunextwave=nwstatus==7
label var lfune "Lost to follow up prior to next wave"
local cvars1 age
local cvars2 persontime  income_adj
local ivars1 female white black hisp other_race married 
label var inchb "Incident Homebound Next Wave"
label var incnh "Incident Nursing Home Next Wave"
local ivars2 inccat1 inccat2 inccat3 inccat4 proxy  ///
medicaid medigap srh_fp adl_eat_help adl_bath_help adl_toil_help adl_dres_help ///
adl_ins_help adl_bed_help adl_impair iadl_impair ///
sr_cond_cat1 sr_cond_cat2 sr_cond_cat3 sr_ami_ever sr_stroke_ever sr_cancer_ever sr_hip_ever sr_heart_dis_ever ///
sr_htn_ever sr_ra_ever sr_osteoprs_ever sr_diabetes_ever sr_lung_dis_ever ///
prob_dementia dem_2_cat adl_diff_ind adl_independent inchbnextwave incnhnextwave ///
lfunextwave died_12 everhb evernh metro_ind northeast midwest south ind_replenish ///
fin_strain mealskip nopayhous nopayutil nopaymed anydebt creditdebt medpaynotcash finhlpfam meals_wheels govtasst

label var meals_wheels "Meals on Wheels"

foreach x in fin_strain creditdebt medcreditdebt medpaynotcash finhlpfam meals_wheels mealskip nopayhous nopayutil nopaymed any_asst {
replace `x'=0 if `x'==.
}


gen n=1

forvalues i=1/7 {
gen group`i'=nwstatus==`i'
}

/*
*preserve
drop group*
forvalues i=1/3 {
gen group`i'=status==`i'
}
tab nwstatus,gen(nw)
levelsof nwstatus, local(levels)

foreach l of local levels {
local lab : label nwstatus `l'
label var nw`l' "`lab'"
local nw `nw' nw`l'
}
*/

 
preserve
keep if status==1 & wave==2
local rn : word count 1 `cvars1' `cvars2' `ivars1' `ivars2' `coutcomes' `coutcomes' `ioutcomes' 1 1
di `rn'
mat tab1=J(`rn',5,.)
mat stars=J(`rn',5,0)
local r=1
local c=1
foreach i in 1 3 5 6 7 {
	foreach round in 1 2 {
		foreach x of local cvars`round' {
			qui sum `x' if group`i'==1 & wave==2  [aw=anfin]
			mat tab1[`r',`c']=r(mean)
			if inlist("`i'","3","5","6","7") {
				svy: reg `x' group`i' if group`i'==1 | group1==1
				test group`i'
				mat stars[`r',`c']=(r(p)<.01) + (r(p)<.05) 
}
			local r=`r'+1
}
		foreach x of local ivars`round' {
			qui sum `x' if group`i'==1 & wave==2  [aw=anfin]
			mat tab1[`r',`c']=r(mean)*100
			if inlist("`i'","3","5","6","7") {
				svy, subpop(if status==1 & wave==2  & group`i'==1 | group1==1): tab `x' group`i' 
				mat stars[`r',`c']=(e(p_Pear)<.01) + (e(p_Pear)<.05)
}
			local r=`r'+1
}
}
	local r=`r'+1

	
	foreach x of local coutcomes {
		qui sum `x' if group`i'==1,d
		mat tab1[`r',`c']=r(mean)
		if inlist("`i'","3","5","6","7") {
				svy: reg `x' group`i' if group`i'==1 | group1==1
				test group`i'
			mat stars[`r',`c']=(r(p)<.01) + (r(p)<.05)
}
		local r=`r'+1
*		if "`x'"=="tot_paid_by_mc_12m_wi_n0" {
			qui sum `x' if group`i'==1,d
			mat tab1[`r',`c']=r(p50)
			local r=`r'+1
*}
}
	foreach x of local ioutcomes {
		qui sum `x' if group`i'==1
		mat tab1[`r',`c']=r(mean)*100
			if inlist("`i'","3","5","6","7") {
				svy, subpop(if status==1 & wave==2  & group`i'==1 | group1==1): tab `x' group`i' 
				mat stars[`r',`c']=(e(p_Pear)<.01) + (e(p_Pear)<.05)
}
			local r=`r'+1
}
	qui sum n if group`i'==1 & wave==2  [aw=anfin]
	
	mat tab1[`r',`c']=r(N)
	mat tab1[`r'+1,`c']=r(sum)
	local r=1
	local c=`c'+1
}

foreach x in `coutcomes' {
local rnames `rnames' "`x'" "Median"
}

mat rownames tab1=`cvars1' `ivars1' `cvars2' `ivars2' "_" N "Estimate"

frmttable using sample_characteristics_incl_2015_samp_weighted1, replace statmat(tab1) ///
 title("Sample Characteristics by next wave status") ///
 ctitles("" "Community"  "Incident HB"  "Incident NH" ///
 "Died" "LFU") ///
 sdec(2) annotate(stars) asymbol(*,**) ///
 varlabels note("Waves 2/5 NHATS community-dwelling sample, by next-wave status")

restore
/*
preserve
keep if status==1
local rn : word count 1 `cvars1' `cvars2' `ivars1' `ivars2' `coutcomes' `coutcomes' `ioutcomes' 1 1
di `rn'
mat tab1=J(`rn',4,.)
mat stars=J(`rn',4,0)
local r=1
local c=1

drop group*
forvalues i=1/4 {
gen group`i'=inccat`i'
local lab`i' : var label inccat`i'
}

forvalues i=1/4 {
	foreach round in 1 2 {
		foreach x of local cvars`round' {
			qui sum `x' if group`i'==1 & wave==2  [aw=anfin]
			mat tab1[`r',`c']=r(mean)
			if inlist("`i'","2","3","4") {
				qui ttest `x' if group`i'==1 | group1==1, by(group`i')
				mat stars[`r',`c']=(r(p)<.01) + (r(p)<.05)
}
			local r=`r'+1
}
		foreach x of local ivars`round' {
			qui sum `x' if group`i'==1 & wave==2  [aw=anfin]
			mat tab1[`r',`c']=r(mean)*100
			if inlist("`i'","2","3","4") {
				svy, subpop(if status==1 & wave==2  & nwstatus<=5 &group`i'==1 | group1==1): tab `x' group`i' 
				mat stars[`r',`c']=(r(p)<.01) + (r(p)<.05)
}
			local r=`r'+1
}
}
	local r=`r'+1

	
	foreach x of local coutcomes {
		qui sum `x' if group`i'==1,d
		mat tab1[`r',`c']=r(mean)
		if inlist("`i'","2","3","4") {
			qui ttest `x' if group`i'==1 | group1==1, by(group`i')
			mat stars[`r',`c']=(r(p)<.01) + (r(p)<.05)
}
		local r=`r'+1
*		if "`x'"=="tot_paid_by_mc_12m_wi_n0" {
			qui sum `x' if group`i'==1,d
			mat tab1[`r',`c']=r(p50)
			local r=`r'+1
*}
}
	foreach x of local ioutcomes {
		qui sum `x' if group`i'==1
		mat tab1[`r',`c']=r(mean)*100
			if inlist("`i'","2","3","4") {
				svy, subpop(if status==1 & wave==2  & nwstatus<=5 &group`i'==1 | group1==1): tab `x' group`i' 
				mat stars[`r',`c']=(r(p)<.01) + (r(p)<.05)
}
			local r=`r'+1
}
	qui sum n if group`i'==1 & wave==2  [aw=anfin]
	
	mat tab1[`r',`c']=r(N)
	mat tab1[`r'+1,`c']=r(sum)
	local r=1
	local c=`c'+1
}

foreach x in `coutcomes' {
local rnames `rnames' "`x'" "Median"
}

mat rownames tab1=`cvars1' `ivars1' `cvars2' `ivars2' "_" N "Estimate"

frmttable using sample_characteristics_incl_2015_samp_weighted, addtable statmat(tab1) ///
 title("Sample Characteristics by Income category") ///
 ctitles("" "`lab1'" "`lab2'" "`lab3'" "`lab4'") ///
 sdec(2) annotate(stars) asymbol(*,*) ///
 varlabels note("Cross-wave NHATS community-dwelling sample, by income group")
restore*/




local cvars1 age 
local ivars1 female
preserve
drop if year==2015
drop group*
*keep if status==1 & wave==2  & nwstatus<=5
replace wherela=2 if wherela==4
tab wherela, gen(group)
forvalues i=1/3 {
local lab : label wherelandgroup `i'
label var group`i' "`lab'"
}
tab1 group*
local rn : word count 1 `cvars1' `cvars2' `ivars1' `ivars2' `coutcomes' `coutcomes' `ioutcomes' 1 1
di `rn'
mat tab1=J(`rn',6,.)
mat stars=J(`rn',6,0)
local r=1
local c=1
forvalues i=1/3 {
	foreach round in 1 2 {
		foreach x of local cvars`round' {
			qui sum `x' if group`i'==1 & wave==2  & status==1   & nwstatus<=5 [aw=anfin]
			mat tab1[`r',`c']=r(mean)
			if inlist("`i'","2","3","4") {
				svy, subpop(if status==1 & wave==2  & nwstatus<=5 &group`i'==1 | group1==1): reg `x' group`i' 
				test
				mat tab1[`r',`c'+1]=r(p)
				mat stars[`r',`c'+1]=(r(p)<.05)+(r(p)<.01)
}
			local r=`r'+1
}
		foreach x of local ivars`round' {
			qui sum `x' if group`i'==1   & status==1 & wave==2  & nwstatus<=5 [aw=anfin]
			mat tab1[`r',`c']=r(mean)*100
			if inlist("`i'","2","3","4") {
				svy, subpop(if status==1 & wave==2  & nwstatus<=5 &group`i'==1 | group1==1): tab `x' group`i' 
				mat tab1[`r',`c'+1]=e(p_Pear)
				mat stars[`r',`c'+1]=(e(p_Pear)<.05)+(e(p_Pear)<.01)
}
			local r=`r'+1
}
}
	local r=`r'+1

	
	foreach x of local coutcomes {
		qui sum `x' if group`i'==1 & status==1 & wave==2  & nwstatus<=5,d
		mat tab1[`r',`c']=r(mean)
		if inlist("`i'","2","3","4") {
				svy, subpop(if status==1 & wave==2  & nwstatus<=5 &group`i'==1 | group1==1): reg `x' group`i' 
				test
				mat tab1[`r',`c'+1]=r(p)
				mat stars[`r',`c'+1]=(r(p)<.05)+(r(p)<.01)
}
		local r=`r'+1
*		if "`x'"=="tot_paid_by_mc_12m_wi_n0" {
			qui sum `x' if group`i'==1  & wave==2 ,d
			mat tab1[`r',`c']=r(p50)
			local r=`r'+1
*}
}
	foreach x of local ioutcomes {
		qui sum `x' if group`i'==1 & status==1 & wave==2  & nwstatus<=5 
		mat tab1[`r',`c']=r(mean)*100
			if inlist("`i'","2","3") {
				svy, subpop(if status==1 & wave==2  & nwstatus<=5 &group`i'==1 | group1==1): tab `x' group`i' 
				mat tab1[`r',`c'+1]=e(p_Pear)
				mat stars[`r',`c'+1]=(e(p_Pear)<.05)+(e(p_Pear)<.01)
}
			local r=`r'+1
}
	qui sum n if group`i'==1   & status==1 & wave==2  & nwstatus<=5 [aw=anfin]
	
	mat tab1[`r',`c']=r(N)
	*mat tab1[`r'+1,`c']=r(sum)
	local r=1
	local c=`c'+2
}

foreach x in `coutcomes' {
local rnames `rnames' "`x'" "Median"
}

mat rownames tab1=`cvars1' `ivars1' `cvars2' `ivars2' "_" N "Estimate"

frmttable using sample_characteristics_incl_2015_samp_weighted1, addtable statmat(tab1) ///
 title("Sample Characteristics by future homebound status") ///
 ctitles("" "Never Homebound or NH res" "" "Future HB" "P-value" "Future NH" "P-value") ///
 sdec(2) annotate(stars) asymbol(*,*) ///
 varlabels note("Wave 2 community-dwelling sample, by ultimate homebound status" ///
 "Excludes those Lost to Follow up or dead prior to wave 2" ///
 "Future status evaluated at HB or NH, or final wave prior to dropout/wave 6")

restore
replace wherela=2 if wherela==4
preserve
tab wherela, gen(whereland)
forvalues i=1/3 {
local lab : label wherelandgroup `i'
label var whereland`i' "`lab'"
}
*keep if status==1 & wave==2 

local ivars2 inccat1 inccat2 inccat3 inccat4  ///
 whereland1 whereland2 whereland3 proxy  ///
medicaid medigap srh_fp adl_eat_help adl_bath_help adl_toil_help adl_dres_help ///
adl_ins_help adl_bed_help adl_impair iadl_impair ///
sr_cond_cat1 sr_cond_cat2 sr_cond_cat3 sr_ami_ever sr_stroke_ever sr_cancer_ever sr_hip_ever sr_heart_dis_ever ///
sr_htn_ever sr_ra_ever sr_osteoprs_ever sr_diabetes_ever sr_lung_dis_ever ///
prob_dementia dem_2_cat adl_diff_ind adl_independent inchbnextwave incnhnextwave ///
died_12 lfunextwave everhb evernh metro_ind northeast midwest south ind_replenish ///
fin_strain mealskip nopayhous nopayutil nopaymed anydebt creditdebt medpaynotcash finhlpfam meals_wheels govtasst


local rn : word count 1 `cvars1' `cvars2' `ivars1' `ivars2' `coutcomes' `coutcomes' `ioutcomes' 1 1
di `rn'
mat tab1=J(`rn',8,.)
mat stars=J(`rn',8,0)
local r=1
local c=1
/*
tab wherela, gen(whereland)
forvalues i=1/3 {
local lab : label wherelandgroup `i'
label var whereland`i' "`lab'"
}
*/

local rn : word count 1 `cvars1' `cvars2' `ivars1' `ivars2' `coutcomes' `coutcomes' `ioutcomes' 1 1
di `rn'
mat tab1=J(`rn',8,.)
mat stars=J(`rn',8,0)
local r=1
local c=1

drop group*
forvalues i=1/4 {
gen group`i'=inccat`i'
local lab`i' : var label inccat`i'
}

forvalues i=1/4 {
	foreach round in 1 2 {
		foreach x of local cvars`round' {
			qui sum `x' if group`i'==1   & status==1 & wave==2  & nwstatus<=5 [aw=anfin]
			mat tab1[`r',`c']=r(mean)
			if inlist("`i'","2","3","4") {
				svy, subpop(if status==1 & wave==2  & nwstatus<=5 &group`i'==1 | group1==1): reg `x' group`i' 
				test
				mat tab1[`r',`c'+1]=r(p)
				mat stars[`r',`c'+1]=(r(p)<.05)+(r(p)<.01)
}
			local r=`r'+1
}
		foreach x of local ivars`round' {
			qui sum `x' if group`i'==1   & status==1 & wave==2  & nwstatus<=5 [aw=anfin]
			mat tab1[`r',`c']=r(mean)*100
			if inlist("`i'","2","3","4") {
				svy, subpop(if status==1 & wave==2  & nwstatus<=5 &group`i'==1 | group1==1): tab `x' group`i' 
				mat tab1[`r',`c'+1]=e(p_Pear)
				mat stars[`r',`c'+1]=(e(p_Pear)<.05)+(e(p_Pear)<.01)
}
			local r=`r'+1
}
}
	local r=`r'+1

	
	foreach x of local coutcomes {
		qui sum `x' if group`i'==1 & status==1 & wave==2  & nwstatus<=5,d
		mat tab1[`r',`c']=r(mean)
		if inlist("`i'","2","3","4") {
				svy, subpop(if status==1 & wave==2  & nwstatus<=5 &group`i'==1 | group1==1): reg `x' group`i' 
				test
				mat tab1[`r',`c'+1]=r(p)
				mat stars[`r',`c'+1]=(r(p)<.05)+(r(p)<.01)
}
		local r=`r'+1
*		if "`x'"=="tot_paid_by_mc_12m_wi_n0" {
			qui sum `x' if group`i'==1 & wave==2 ,d
			mat tab1[`r',`c']=r(p50)
			local r=`r'+1
*}
}
	foreach x of local ioutcomes {
		qui sum `x' if group`i'==1 & status==1 & wave==2  & nwstatus<=5
		mat tab1[`r',`c']=r(mean)*100
			if inlist("`i'","2","3","4") {
				svy, subpop(if status==1 & wave==2  & nwstatus<=5 &group`i'==1 | group1==1): tab `x' group`i' 
				mat tab1[`r',`c'+1]=e(p_Pear)
				mat stars[`r',`c'+1]=(e(p_Pear)<.05)+(e(p_Pear)<.01)
}
			local r=`r'+1
}
	qui sum n if group`i'==1 & wave==2  [aw=anfin]
	
	mat tab1[`r',`c']=r(N)
	mat tab1[`r'+1,`c']=r(sum)
	local r=1
	local c=`c'+2
}

foreach x in `coutcomes' {
local rnames `rnames' "`x'" "Median"
}

mat rownames tab1=`cvars1' `ivars1' `cvars2' `ivars2' "_" N "Estimate"

frmttable using sample_characteristics_incl_2015_samp_weighted1, addtable statmat(tab1) ///
 title("Sample Characteristics by Income category") ///
 ctitles("" "`lab1'" "" "`lab2'" "P-value" "`lab3'" "P-value" "`lab4'" "P-value") ///
 sdec(2) annotate(stars) asymbol(*,*) ///
 varlabels note("Wave 2/5 community-dwelling sample, by income group" ///
 "Excluding those LFU or dead prior to wave 2")
restore



H="Cox regressions income adj"
clear all
set more off
capture log close


cd "E:\nhats\data\projects\Homebound\logs"
use "E:\nhats\data\NHATS cleaned\sp_round_1_6.dta" if lml==0, clear

//cpi inflation
gen income_adj=0
replace income_adj= (240.007/224.939)*aveincome if wave==1
replace income_adj= (240.007/229.594)*aveincome if wave==2
replace income_adj= (240.007/232.957)*aveincome if wave==3
replace income_adj= (240.007/236.736)*aveincome if wave==4
replace income_adj= (240.007/237.017)*aveincome if wave==5

//reweight, per Maureen's instructions
gen orig_weight=anfinw
replace anfinw=anfinw/2
//reset wave to 1/2 from 5/6 to run for 2015 cohort
replace wave=wave-3 if year==2015
gen ind_replenish=year==2015
label var ind_replenish "2015 Replenishment Cohort"

gen ind_noone=n_social==0
label var ind_noone "SR nobody in social network"
sort spid wave
*by spid: keep if prob_dem[1]==1
by spid: egen firstdem=min(cond(prob_dem==1,wave,.))
xtset spid wave
replace homebound_cat=. if nhres==1
gen homebound=homebound==1 if !missing(homebound) & !nhres
gen hbw=wave if homebound==1
gen nhw=wave if nhres==1
by spid, sort: egen firsthb=min(hbw)
by spid, sort: egen firstnh=min(nhw)
gen everhb=!missing(firsthb)
gen evernh=!missing(firstnh)
label var everhb "Ever HB"
label var evernh "Ever NH"
*drop if firsthb==1 | missing(homebou)
by spid: gen hbnextwave=homebound[_n+1]
by spid: gen nhnextwave=nhres[_n+1]
gen inchbnextwave=firsthb==wave+1 & homebound==0
gen incnhnextwave=firstnh==wave+1 & nhres==0
replace adl_diff_ind=1 if adl_impair==1
label var adl_diff_ind "ADL difficulty or impairment"

gen wherelandgroup=1 if missing(firsthb) & missing(firstnh)
replace wherelandgroup=2 if !missing(firsthb) 
replace wherelandgroup=3 if !missing(firstnh) 
replace wherelandgroup=4 if !missing(firstnh) & firsthb<firstnh
label define wherelandgroup 1 "Never homebound or NH resident" 2 "Future HB" ///
3 "Future NH resident" 4 "Homebound, then NH"
label values wherelandgroup wherelandgroup

sort spid wave
by spid: drop if nhres[_n-1]==1 
by spid: drop if homebound_cat[_n-1]==. & year<201`=wave'
di wave

gen nwstatus=.
forvalues i=2/5 {
replace nwstatus=r`=`i'+1'status if wave==`i'
}
replace nwstatus=r6status if year==2015 & wave==2
tab nwstat
tab r2status
replace nwstatus=1 if inlist(nwstatus,60,63) & !missing(hbne)
replace nwstatus=4 if inlist(nwstatus,61)
replace nwstatus=6 if inlist(nwstatus,62,86)
replace nwstatus=7 if nwstatus>7
replace nwstatus=6 if died_12==1 & nwstatus==7
label define nwstatus 1 "Community, not homebound" 2 "Homebound, not incident" ///
3 "Incident homebound" 4 "NH Resident, not incident" ///
5 "Incident NH" 6 "Died" 7 "LFU"
label values nwstatus nwstatus
replace nwstatus=2 if hbne==1
replace nwstatus=3 if inchb==1
replace nwstat=4 if nhne==1
replace nwstat=5 if incnhne==1
label var nwstat "Status next wave"
replace died_12=0 if nwstatus<=5
label var died_12 "Died prior to next wave"

gen northeast=region==1
gen midwest=region==2
gen south=region==3
gen west=region==4
label var northe "Northeast"
label var midw "Midwest"
label var south "South"
label var west "West"
gen sr_cond_cat=1 if sr_numcond<2
replace sr_cond_cat=2 if inrange(sr_numcond,2,4)
replace sr_cond_cat=3 if inrange(sr_numcond,5,15)
label define sr_cond_cat 1 "0-1 SR condition" 2 "2-4 SR conditions" 3 "5+ SR conditions"
label values sr_cond_cat sr_cond_cat
tab sr_cond_cat, gen(sr_cond_cat)
forvalues i=1/3 {
local lab: label sr_cond_cat `i'
label var sr_cond_cat`i' "`lab'"
}

gen anydebt=creditdebt==1 | medpayno==1 if !missing(creditdebt) | !missing(medpayn)
label var anydebt "Credit card or medical debt"

gen status=1 if sp_ivw==1 & !missing(homebound)
replace status=2 if homebound==1
replace status=3 if nhres==1
replace status=4 if status==1 & (firsthb<wave | firstnh<wave)
label define status 1 "Community, not HB" 2 "Homebound" 3 "NH resident" 4 ///
"Community, previously HB or NH resident"
label values status status
label var status "Status this wave"


foreach x in nopayhous nopayutil nopaymed mealskip  {
replace `x'=. if `x'==2
}
replace mealskipnum=. if mealskipnum==5
gen fin_strain=.
replace fin_strain=0 if nopayhous==0 & nopayutil==0 & nopaymed==0 & mealskip==0 
replace fin_strain=1 if nopayhous==1 | nopayutil==1 | nopaymed==1 | mealskip==1
label var fin_strain "Financial Strain (Any nopay/mealskip)"

gen any_asst= govtasst
replace any_asst=1 if section8==1
label var any_asst "Reci. any Public Assist. (incl. Gov't assist./Section 8"



tab wave nwstat if wave<=4, row
tab nwsta status if wave==2 

/*
sum aveincome
forvalues i=1/4 {
gen inccat`i'=income_cat==`i'-1
local lab : label income_cat `=`i'-1'
label var inccat`i' "Income: `lab'"
}*/

sum income_adj
forvalues i=1/4 {
gen inccat`i'=income_quart==`i'
local lab : label income_quart `=`i''
label var inccat`i' "Income: `lab'"
}

gen prob_dementia=dem_3==1 if !missing(dem_3)
label var prob_dementia "Probable dementia"

by spid, sort: gen persontime=_N
replace persontime=firsthb if firsthb<persontime
replace persontime=firstnh if firstnh<persontime
label var persontime "Waves contributing information"

local cvars1 age
local cvars2 n_social_network persontime income_adj n_helpers n_paid_helpers tot_hrsmonth_help_i ///
tot_hrsmonth_paid_i 
local ivars1 female white black hisp other_race married livealone educ_hs_ind proxy ind_noone
local ivars2 ind_any_helpers ind_paid_helper top_quartile_help_helped ///
medicaid medigap srh_fp nhres ///
sr_ami_ever sr_stroke_ever sr_cancer_ever sr_hip_ever sr_heart_dis_ever ///
sr_htn_ever sr_ra_ever sr_osteoprs_ever sr_diabetes_ever sr_lung_dis_ever ///
prob_dementia dem_2_cat adl_diff_ind adl_independent iadl_diff_ind iadl_independent 
local ivars3 adl1 adl2 adl3 iadl1 iadl2 iadl3 adl_eat_help adl_bath_help adl_toil_help ///
adl_dres_help adl_ins_help adl_bed_help iadl_laun_help ///
iadl_shop_help iadl_meal_help iadl_bank_help iadl_meds_help ///
 reg_doc_seen sr_hosp_ind
gen lfunextwave=nwstatus==7
label var lfune "Lost to follow up prior to next wave"
local cvars1 age
local cvars2 persontime  income_adj
local ivars1 female white black hisp other_race married 
label var inchb "Incident Homebound Next Wave"
label var incnh "Incident Nursing Home Next Wave"
local ivars2 inccat1 inccat2 inccat3 inccat4 proxy  ///
medicaid medigap srh_fp adl_eat_help adl_bath_help adl_toil_help adl_dres_help ///
adl_ins_help adl_bed_help adl_impair iadl_impair ///
sr_cond_cat1 sr_cond_cat2 sr_cond_cat3 sr_ami_ever sr_stroke_ever sr_cancer_ever sr_hip_ever sr_heart_dis_ever ///
sr_htn_ever sr_ra_ever sr_osteoprs_ever sr_diabetes_ever sr_lung_dis_ever ///
prob_dementia dem_2_cat adl_diff_ind adl_independent inchbnextwave incnhnextwave ///
lfunextwave died_12 everhb evernh metro_ind northeast midwest south ind_replenish ///
fin_strain creditdebt mealskip nopayhous nopayutil nopaymed medcreditdebt medpaynotcash finhlpfam any_asst ///
govtasst meals_wheels section8 
label var meals_wheels "Meals on Wheels"

foreach x in fin_strain creditdebt medcreditdebt medpaynotcash finhlpfam meals_wheels mealskip nopayhous nopayutil nopaymed any_asst {
replace `x'=0 if `x'==.
}


gen n=1

label var educ_hs_ind "Education: HS+"
preserve
*log using homebound_income_cox_log.txt, text replace
drop if missing(homebound_cat) & !nhres
by spid, sort: egen lastwave=max(wave)
*keep if wave==2 
tab lastwave
*keep if inrange(homebound_cat,2,4)
gen time=lastwave
gen first_hb_or_nh=firsthb
replace first_hb=firstnh if firstnh<firsthb
replace time=first_hb_or_nh if !missing(first_hb_or_nh)

gen ind_helper_any=n_helpers>0
label var ind_helper_any "Any helpers"
gen dies=!missing(death_date)
gen ultimate=everhb==1
replace ultimate=2 if evernh==1 & !ultimate
replace ultimate=2 if firstnh<firsthb
replace ultimate=3 if !missing(death_date) & !ultimate
stset time, failure(everhb) 
sts graph, by(income_quart)
graph save km_hb, replace
graph export km_hb.pdf, replace

forvalues i=1/6 {
local lab : label r1d2intvrage `i'
label define agecat `i' "`lab'", modify
}


foreach x in agecat income_quart {
levelsof `x', local(levels)
foreach l of local levels {
	gen `x'`l'=`x'==`l'
	local lab : label `x' `l'
	label var `x'`l' "`lab'"
}
}

forvalues i=2/6 {
	local age `age' agecat`i'
}

forvalues i=1/3 {
	local inc `inc' income_quart`i'
}

label var income_quart1 "Income Quartile 1"
label var income_quart2 "Income Quartile 2"
label var income_quart3 "Income Quartile 3"


local cond sr_cond_cat2 sr_cond_cat3

local vars `age' `inc' fin_strain anydebt govtasst finhlpfam meals_wheels ///
female black hisp married ind_noone educ_hs_ind  ///
medicaid prob_dem `cond' adl_diff_ind srh_fp ///
ind_paid_helper metro_ind northeast midwest south ind_replenish 

svy, subpop(if wave==2 &  inrange(homebound_cat,2,4)): stcox `vars' //, nohr mgale(mg)
//stcoxkm, by(income_quart)
qui outreg, ctitles("" "Homebound") varlabels stats(e_b p)
stcox `vars' if wave==2 &  inrange(homebound_cat,2,4)
//sthplot, by(

stphplot, by(income_quart) adjust(`age'  female black hisp married  ind_noone  educ_hs_ind  ///
medicaid prob_dem `cond' adl_diff_ind srh_fp ind_paid_helper ///
metro_ind northeast midwest south fin_strain any_asst)
stphplot, by(income_quart)

gen timenh=firstnh
replace timenh=lastwave if missing(firstnh)
stset timenh, failure(evernh)
sts graph, by(income_quart)
graph save km_nh, replace
graph export km_nh.pdf, replace


svy, subpop(if wave==2 &  inrange(homebound_cat,2,4)): stcox `vars'

qui outreg, merge ctitles("" "Nursing home") varlabels stats(e_b p)

gen either=everhb==1 | evernh==1
stset time, failure(either)
sts graph, by(income_quart)
graph save km_either, replace
graph export km_either.pdf, replace

local vars `age' `inc' fin_strain anydebt govtasst finhlpfam meals_wheels ///
female black hisp married ind_noone educ_hs_ind  ///
medicaid prob_dem `cond' adl_diff_ind srh_fp ///
ind_paid_helper metro_ind northeast midwest south ind_replenish 

svy, subpop(if wave==2 &  inrange(homebound_cat,2,4)): stcox `vars'

qui outreg using homebound_income_cox_models_incl_2015_samp_weighted1, merge ///
ctitles("" "HB or NH") varlabels  ///
title(Cox proportional hazard models) stats(e_b p) replace ///
note("Among wave 2 non-homebound community dwelling SPs")
capture drop p hb2 nh2 either2
predict p 
sum `vars' if missing(p)

sort spid wave
by spid: gen hb2=inlist(nwstat,2,3) if nwstat<7
by spid: gen nh2=inlist(nwstat,4,5) if nwstat<7
gen either2=hb2==1 | nh2==1 if !missing(hb2)
svy, subpop(if wave==2 & inrange(homebound_cat,2,4)): logit hb2 `vars'
qui outreg, stats(e_b p) ctitles("" "Homebound") varlabels
svy, subpop(if wave==2 & inrange(homebound_cat,2,4)): logit nh2 `vars'
qui outreg, stats(e_b p) ctitles("" "Nursing Home") varlabels merge
svy, subpop(if wave==2 & inrange(homebound_cat,2,4)): logit either2 `vars'
qui outreg, stats(e_b p) ctitles("" "HB or NH") varlabels merge

outreg using homebound_income_logit_incl_2015_samp_weighted1, replay replace ///
title(Logistic regression on next wave status) ///
note("Among wave 2/5 non-homebound community dwelling SPs")

//mdesc `vars'
mkcorr `vars' if wave==2 &  inrange(homebound_cat,2,4), log(corr_wave2.xls) replace 


H="cox with TVC  income adj"
clear all
set more off
capture log close


cd "E:\nhats\data\projects\Homebound\logs"
use "E:\nhats\data\NHATS cleaned\sp_round_1_6.dta" if lml==0, clear

//cpi inflation
gen income_adj=0
replace income_adj= (240.007/224.939)*aveincome if wave==1
replace income_adj= (240.007/229.594)*aveincome if wave==2
replace income_adj= (240.007/232.957)*aveincome if wave==3
replace income_adj= (240.007/236.736)*aveincome if wave==4
replace income_adj= (240.007/237.017)*aveincome if wave==5
replace income_adj=aveincome if wave==6

//reweight, per Maureen's instructions
gen orig_weight=anfinw
replace anfinw=anfinw/2
//reset wave to 1/2 from 5/6 to run for 2015 cohort
replace wave=wave-3 if year==2015
gen ind_replenish=year==2015
label var ind_replenish "2015 Replenishment Cohort"
replace anfinw=. if wave!=2
sort spid wave
by spid: carryforward anfinw, replace
drop if missing(anfinw)
gen ind_noone=n_social==0
label var ind_noone "SR nobody in social network"
sort spid wave
*by spid: keep if prob_dem[1]==1
by spid: egen firstdem=min(cond(prob_dem==1,wave,.))
xtset spid wave
replace homebound_cat=. if nhres==1
gen homebound=homebound==1 if !missing(homebound) & !nhres
gen hbw=wave if homebound==1
gen nhw=wave if nhres==1
by spid, sort: egen firsthb=min(hbw)
by spid, sort: egen firstnh=min(nhw)
gen everhb=!missing(firsthb)
gen evernh=!missing(firstnh)
label var everhb "Ever HB"
label var evernh "Ever NH"
*drop if firsthb==1 | missing(homebou)
by spid: gen hbnextwave=homebound[_n+1]
by spid: gen nhnextwave=nhres[_n+1]
gen inchbnextwave=firsthb==wave+1 & homebound==0
gen incnhnextwave=firstnh==wave+1 & nhres==0
replace adl_diff_ind=1 if adl_impair==1
label var adl_diff_ind "ADL difficulty or impairment"

gen wherelandgroup=1 if missing(firsthb) & missing(firstnh)
replace wherelandgroup=2 if !missing(firsthb) 
replace wherelandgroup=3 if !missing(firstnh) 
replace wherelandgroup=4 if !missing(firstnh) & firsthb<firstnh
label define wherelandgroup 1 "Never homebound or NH resident" 2 "Future HB" ///
3 "Future NH resident" 4 "Homebound, then NH"
label values wherelandgroup wherelandgroup

sort spid wave
by spid: drop if firstnh<wave
by spid: drop if firsthb<wave


gen nwstatus=.
forvalues i=2/5 {
replace nwstatus=r`=`i'+1'status if wave==`i'
}
replace nwstatus=r6status if year==2015 & wave==2
tab nwstat
tab r2status
replace nwstatus=1 if inlist(nwstatus,60,63) & !missing(hbne)
replace nwstatus=4 if inlist(nwstatus,61)
replace nwstatus=6 if inlist(nwstatus,62,86)
replace nwstatus=7 if nwstatus>7
replace nwstatus=6 if died_12==1 & nwstatus==7
label define nwstatus 1 "Community, not homebound" 2 "Homebound, not incident" ///
3 "Incident homebound" 4 "NH Resident, not incident" ///
5 "Incident NH" 6 "Died" 7 "LFU"
label values nwstatus nwstatus
replace nwstatus=2 if hbne==1
replace nwstatus=3 if inchb==1
replace nwstat=4 if nhne==1
replace nwstat=5 if incnhne==1
label var nwstat "Status next wave"
replace died_12=0 if nwstatus<=5
label var died_12 "Died prior to next wave"


gen northeast=region==1
gen midwest=region==2
gen south=region==3
gen west=region==4
label var northe "Northeast"
label var midw "Midwest"
label var south "South"
label var west "West"
gen sr_cond_cat=1 if sr_numcond<2
replace sr_cond_cat=2 if inrange(sr_numcond,2,4)
replace sr_cond_cat=3 if inrange(sr_numcond,5,15)
label define sr_cond_cat 1 "0-1 SR condition" 2 "2-4 SR conditions" 3 "5+ SR conditions"
label values sr_cond_cat sr_cond_cat
tab sr_cond_cat, gen(sr_cond_cat)
forvalues i=1/3 {
local lab: label sr_cond_cat `i'
label var sr_cond_cat`i' "`lab'"
}

gen anydebt=creditdebt==1 | medpayno==1 if !missing(creditdebt) | !missing(medpayn)
label var anydebt "Credit card or medical debt"

gen status=1 if sp_ivw==1 & !missing(homebound)
replace status=2 if homebound==1
replace status=3 if nhres==1
replace status=4 if status==1 & (firsthb<wave | firstnh<wave)
label define status 1 "Community, not HB" 2 "Homebound" 3 "NH resident" 4 ///
"Community, previously HB or NH resident"
label values status status
label var status "Status this wave"


foreach x in nopayhous nopayutil nopaymed mealskip  {
replace `x'=. if `x'==2
}
replace mealskipnum=. if mealskipnum==5
gen fin_strain=.
replace fin_strain=0 if nopayhous==0 & nopayutil==0 & nopaymed==0 & mealskip==0 
replace fin_strain=1 if nopayhous==1 | nopayutil==1 | nopaymed==1 | mealskip==1
label var fin_strain "Financial Strain (Any nopay/mealskip)"

gen any_asst= govtasst
replace any_asst=1 if section8==1
label var any_asst "Reci. any Public Assist. (incl. Gov't assist./Section 8)"



tab wave nwstat if wave<=4, row
tab nwsta status if wave==2 

sum income_adj
forvalues i=1/4 {
gen inccat`i'=income_quart==`i'
local lab : label income_quart `=`i''
label var inccat`i' "Income: `lab'"
}
gen prob_dementia=dem_3==1 if !missing(dem_3)
label var prob_dementia "Probable dementia"

by spid, sort: gen persontime=_N
replace persontime=firsthb if firsthb<persontime
replace persontime=firstnh if firstnh<persontime
label var persontime "Waves contributing information"

local cvars1 age
local cvars2 n_social_network persontime income_adj n_helpers n_paid_helpers tot_hrsmonth_help_i ///
tot_hrsmonth_paid_i 
local ivars1 female white black hisp other_race married livealone educ_hs_ind proxy ind_noone
local ivars2 ind_any_helpers ind_paid_helper top_quartile_help_helped ///
medicaid medigap srh_fp nhres ///
sr_ami_ever sr_stroke_ever sr_cancer_ever sr_hip_ever sr_heart_dis_ever ///
sr_htn_ever sr_ra_ever sr_osteoprs_ever sr_diabetes_ever sr_lung_dis_ever ///
prob_dementia dem_2_cat adl_diff_ind adl_independent iadl_diff_ind iadl_independent 
local ivars3 adl1 adl2 adl3 iadl1 iadl2 iadl3 adl_eat_help adl_bath_help adl_toil_help ///
adl_dres_help adl_ins_help adl_bed_help iadl_laun_help ///
iadl_shop_help iadl_meal_help iadl_bank_help iadl_meds_help ///
 reg_doc_seen sr_hosp_ind
gen lfunextwave=nwstatus==7
label var lfune "Lost to follow up prior to next wave"
local cvars1 age
local cvars2 persontime  income_adj
local ivars1 female white black hisp other_race married 
label var inchb "Incident Homebound Next Wave"
label var incnh "Incident Nursing Home Next Wave"
local ivars2 inccat1 inccat2 inccat3 inccat4 proxy  ///
medicaid medigap srh_fp adl_eat_help adl_bath_help adl_toil_help adl_dres_help ///
adl_ins_help adl_bed_help adl_impair iadl_impair ///
sr_cond_cat1 sr_cond_cat2 sr_cond_cat3 sr_ami_ever sr_stroke_ever sr_cancer_ever sr_hip_ever sr_heart_dis_ever ///
sr_htn_ever sr_ra_ever sr_osteoprs_ever sr_diabetes_ever sr_lung_dis_ever ///
prob_dementia dem_2_cat adl_diff_ind adl_independent inchbnextwave incnhnextwave ///
lfunextwave died_12 everhb evernh metro_ind northeast midwest south ind_replenish ///
fin_strain creditdebt mealskip nopayhous nopayutil nopaymed medcreditdebt medpaynotcash finhlpfam any_asst ///
govtasst meals_wheels section8 
label var meals_wheels "Meals on Wheels"

foreach x in fin_strain creditdebt medcreditdebt medpaynotcash finhlpfam meals_wheels mealskip nopayhous nopayutil nopaymed any_asst {
replace `x'=0 if `x'==.
}


gen n=1

label var educ_hs_ind "Education: HS+"
preserve
*log using homebound_income_cox_log.txt, text replace
drop if missing(homebound_cat) & !nhres
by spid, sort: egen lastwave=max(wave)
*keep if wave==2 
tab lastwave
*keep if inrange(homebound_cat,2,4)
gen time=lastwave
gen first_hb_or_nh=firsthb
replace first_hb=firstnh if firstnh<firsthb
replace time=first_hb_or_nh if !missing(first_hb_or_nh)

gen ind_helper_any=n_helpers>0
label var ind_helper_any "Any helpers"
gen dies=!missing(death_date)
gen ultimate=everhb==1
replace ultimate=2 if evernh==1 & !ultimate
replace ultimate=2 if firstnh<firsthb
replace ultimate=3 if !missing(death_date) & !ultimate
stset wave, failure(homebound_==1) id(spid) origin(wave==2)

forvalues i=1/6 {
local lab : label r1d2intvrage `i'
label define agecat `i' "`lab'", modify
}


foreach x in agecat income_quart {
levelsof `x', local(levels)
foreach l of local levels {
	gen `x'`l'=`x'==`l'
	local lab : label `x' `l'
	label var `x'`l' "`lab'"
}
}

forvalues i=2/6 {
	local age `age' agecat`i'
}

forvalues i=1/3 {
	local inc `inc' income_quart`i'
}
label var income_quart1 "Income Quartile 1"
label var income_quart2 "Income Quartile 2"
label var income_quart3 "Income Quartile 3"
label var agecat2 "Age 70-74"
label var agecat3 "Age 75-79"
label var agecat4 "Age 80-84"
label var agecat5 "Age 85-89"
label var agecat6 "Age 90+"

local cond sr_cond_cat2 sr_cond_cat3

local vars `age' `inc' fin_strain anydebt govtasst finhlpfam meals_wheels ///
female black hisp married ind_noone educ_hs_ind  ///
medicaid prob_dem `cond' adl_impair srh_fp ///
ind_paid_helper metro_ind northeast midwest south ind_replenish 

local tvc `inc'

 stcox `vars' //, nohr mgale(mg)
*stcoxkm. by(income_cat)
qui outreg, ctitles("" "Homebound") varlabels stats(e_b p)

stphplot, by(income_quart) adjust(`vars')
stphplot, by(income_quart)

gen timenh=firstnh
replace timenh=lastwave if missing(firstnh)
stset wave, failure(nhres==1) id(spid) origin(wave==2)


 stcox `vars'

qui outreg, merge ctitles("" "Nursing home") varlabels stats(e_b p)

gen either=nhres==1 | homebound_==1
stset wave, failure(either==1) id(spid) origin(wave==2)

 stcox `vars' 

qui outreg using homebound_income_cox_models_tvc1, merge ///
ctitles("" "HB or NH") varlabels  ///
title(Cox proportional hazard models) stats(e_b p) replace ///
note("Among wave 2 non-homebound community dwelling SPs")
capture drop p hb2 nh2 either2
predict p 
sum `vars' if missing(p)

sort spid wave
by spid: gen hb2=inlist(nwstat,2,3) if nwstat<7
by spid: gen nh2=inlist(nwstat,4,5) if nwstat<7
gen either2=hb2==1 | nh2==1 if !missing(hb2)
svy, subpop(if inrange(homebound_cat,2,4)): logit hb2 `vars'
qui outreg, stats(e_b p) ctitles("" "Homebound") varlabels
svy, subpop(if inrange(homebound_cat,2,4)): logit nh2 `vars'
qui outreg, stats(e_b p) ctitles("" "Nursing Home") varlabels merge
svy, subpop(if inrange(homebound_cat,2,4)): logit either2 `vars'
qui outreg, stats(e_b p) ctitles("" "HB or NH") varlabels merge

outreg using homebound_income_logit_incl_2015_samp_weighted_mult_wave1, replay replace ///
title(Logistic regression on next wave status) ///
note("Multi-wave logistic regressions non-homebound community dwelling SPs")

mkcorr `vars' if inrange(homebound_cat,2,4), log(corr_all.xls) replace 


H="graph next wave hb over income distribution  income adj"
clear all
set more off
capture log close


cd "E:\nhats\data\projects\Homebound\logs"
use "E:\nhats\data\NHATS cleaned\sp_round_1_6.dta" if lml==0 , clear

//cpi inflation
gen income_adj=0
replace income_adj= (240.007/224.939)*aveincome if wave==1
replace income_adj= (240.007/229.594)*aveincome if wave==2
replace income_adj= (240.007/232.957)*aveincome if wave==3
replace income_adj= (240.007/236.736)*aveincome if wave==4
replace income_adj= (240.007/237.017)*aveincome if wave==5
replace income_adj=aveincome if wave==6

//reweight so later waves aren't overweighted
gen orig_weight=anfinw
sum anfinw if wave==1
gen n=1
sum n if wave==1 [aw=anfinw]
local w=r(sum)
forvalues i=1/6 {
sum n if wave==`i' [aw=anfinw]
replace anfinw=anfinw*`w'/r(sum) if wave==`i'
}
*svyset [pw=n]
drop n
//reset wave to 1/2 from 5/6 to run for 2015 cohort
replace wave=wave-4 if year==2015
gen ind_replenish=year==2015
label var ind_replenish "2015 Replenishment Cohort"

gen ind_noone=n_social==0
label var ind_noone "SR nobody in social network"
sort spid wave
*by spid: keep if prob_dem[1]==1
by spid: egen firstdem=min(cond(prob_dem==1,wave,.))
xtset spid wave
replace homebound_cat=. if nhres==1
gen homebound=homebound==1 if !missing(homebound) & !nhres
gen hbw=wave if homebound==1
gen nhw=wave if nhres==1
by spid, sort: egen firsthb=min(hbw)
by spid, sort: egen firstnh=min(nhw)
replace firsthb=firsthb-1
replace firstnh=firstnh-1
gen everhb=!missing(firsthb)
gen evernh=!missing(firstnh)
label var everhb "Ever HB"
label var evernh "Ever NH"
*drop if firsthb==1 | missing(homebou)
by spid: gen hbnextwave=homebound[_n+1]
by spid: gen nhnextwave=nhres[_n+1]
gen inchbnextwave=firsthb==wave+1 & homebound==0
gen incnhnextwave=firstnh==wave+1 & nhres==0
replace adl_diff_ind=1 if adl_impair==1
label var adl_diff_ind "ADL difficulty or impairment"

gen wherelandgroup=1 if missing(firsthb) & missing(firstnh)
replace wherelandgroup=2 if !missing(firsthb) 
replace wherelandgroup=3 if !missing(firstnh) 
replace wherelandgroup=4 if !missing(firstnh) & firsthb<firstnh
label define wherelandgroup 1 "Never homebound or NH resident" 2 "Future HB" ///
3 "Future NH resident" 4 "Homebound, then NH"
label values wherelandgroup wherelandgroup

sort spid wave
by spid: drop if nhres[_n-1]==1 
by spid: drop if homebound_cat[_n-1]==. & wave!=1


gen nwstatus=.
forvalues i=1/5 {
replace nwstatus=r`=`i'+1'status if wave==`i'
}
replace nwstatus=r`=wave+5'status if year==2015 & wave==1
tab nwstat
tab r2status
replace nwstatus=1 if inlist(nwstatus,60,63) & !missing(hbne)
replace nwstatus=4 if inlist(nwstatus,61)
replace nwstatus=6 if inlist(nwstatus,62,86)
replace nwstatus=7 if nwstatus>7
replace nwstatus=6 if died_12==1 & nwstatus==7
label define nwstatus 1 "Community, not homebound" 2 "Homebound, not incident" ///
3 "Incident homebound" 4 "NH Resident, not incident" ///
5 "Incident NH" 6 "Died" 7 "LFU"
label values nwstatus nwstatus
replace nwstatus=2 if hbne==1
replace nwstatus=3 if inchb==1
replace nwstat=4 if nhne==1
replace nwstat=5 if incnhne==1
label var nwstat "Status next wave"
replace died_12=0 if nwstatus<=5
label var died_12 "Died prior to next wave"

gen northeast=region==1
gen midwest=region==2
gen south=region==3
gen west=region==4
label var northe "Northeast"
label var midw "Midwest"
label var south "South"
label var west "West"
gen sr_cond_cat=1 if sr_numcond<2
replace sr_cond_cat=2 if inrange(sr_numcond,2,4)
replace sr_cond_cat=3 if inrange(sr_numcond,5,15)
label define sr_cond_cat 1 "0-1 SR condition" 2 "2-4 SR conditions" 3 "5+ SR conditions"
label values sr_cond_cat sr_cond_cat
tab sr_cond_cat, gen(sr_cond_cat)
forvalues i=1/3 {
local lab: label sr_cond_cat `i'
label var sr_cond_cat`i' "`lab'"
}

gen status=1 if sp_ivw==1 & !missing(homebound)
replace status=2 if homebound==1
replace status=3 if nhres==1
replace status=4 if status==1 & (firsthb<wave | firstnh<wave)
label define status 1 "Community, not HB" 2 "Homebound" 3 "NH resident" 4 ///
"Community, previously HB or NH resident"
label values status status
label var status "Status this wave"

tab wave nwstat if wave<=4, row
tab nwsta status if wave==1 
keep if inrange(homebound_,2,4)
//2/27/18--add extra income thresholds & education cats

levelsof educa, local(levels)
foreach l of local levels {
gen ed`l'=education==`l' if !missing(education)
local lab : label edulbl `l'
label var ed`l' "`lab'"
}
local ed
forvalues i=1/3 {
local ed `ed' ed`i'
}




sum income_adj if wave==1 [aw=anfinw],d
gen inccat=1 if income_adj<=r(p10)
replace inccat=2 if inrange(income_adj,r(p10),r(p25))
replace inccat=3 if inrange(income_adj,r(p25),r(p50))
replace inccat=4 if inrange(income_adj,r(p50),r(p75))
replace inccat=5 if inrange(income_adj,r(p75),r(p90))
replace inccat=6 if inrange(income_adj,r(p90),r(max))

label define inccat 1 "Income bottom 10%" 2 "Income 10-25%" 3 "Income 25-50%" ///
4 "Income 50-75%" 5 "Income 75-90%" 6 "Income top 10%"
label values inccat inccat
forvalues i=1/6 {
gen inccat`i'=inccat==`i'
local lab : label inccat `i'
label var inccat`i' "`lab'"
}
local inccat
forvalues i=1/5 {
local inccat `inccat' inccat`i'
}
gen prob_dementia=dem_3==1 if !missing(dem_3)
label var prob_dementia "Probable dementia"

by spid, sort: gen persontime=_N
replace persontime=firsthb if firsthb<persontime
replace persontime=firstnh if firstnh<persontime
label var persontime "Waves contributing information"

local cvars1 age
local cvars2 n_social_network persontime income_adj n_helpers n_paid_helpers tot_hrsmonth_help_i ///
tot_hrsmonth_paid_i 
local ivars1 female white black hisp other_race married livealone educ_hs_ind `ed' proxy ind_noone
local ivars2 ind_any_helpers ind_paid_helper top_quintile_help_helped ///
medicaid medigap srh_fp nhres ///
sr_ami_ever sr_stroke_ever sr_cancer_ever sr_hip_ever sr_heart_dis_ever ///
sr_htn_ever sr_ra_ever sr_osteoprs_ever sr_diabetes_ever sr_lung_dis_ever ///
prob_dementia dem_2_cat adl_diff_ind adl_independent iadl_diff_ind iadl_independent 
local ivars3 adl1 adl2 adl3 iadl1 iadl2 iadl3 adl_eat_help adl_bath_help adl_toil_help ///
adl_dres_help adl_ins_help adl_bed_help iadl_laun_help ///
iadl_shop_help iadl_meal_help iadl_bank_help iadl_meds_help ///
 reg_doc_seen sr_hosp_ind
gen lfunextwave=nwstatus==7
label var lfune "Lost to follow up prior to next wave"
local cvars1 age
local cvars2 persontime  income_adj
local ivars1 female white black hisp other_race married 
label var inchb "Incident Homebound Next Wave"
label var incnh "Incident Nursing Home Next Wave"
local ivars2 `inccat' creditdebt medpaynotcash govtasst proxy  ///
medicaid medigap srh_fp adl_eat_help adl_bath_help adl_toil_help adl_dres_help ///
adl_ins_help adl_bed_help adl_impair iadl_impair ///
sr_cond_cat1 sr_cond_cat2 sr_cond_cat3 sr_ami_ever sr_stroke_ever sr_cancer_ever sr_hip_ever sr_heart_dis_ever ///
sr_htn_ever sr_ra_ever sr_osteoprs_ever sr_diabetes_ever sr_lung_dis_ever ///
prob_dementia dem_2_cat adl_diff_ind adl_independent inchbnextwave incnhnextwave ///
lfunextwave died_12 everhb evernh metro_ind northeast midwest south ind_replenish


gen n=1

forvalues i=1/7 {
gen group`i'=nwstatus==`i'
}



local cvars1 age 
local ivars1 female



xtile pct=income_adj [aw=anfinw], nq(100)
xtile dec=income_adj [aw=anfinw], nq(10)
xtile half=income_adj [aw=anfinw], nq(2)
xtile quant=income_adj [aw=anfinw], nq(40)
xtile quart=income_adj [aw=anfinw], nq(4)
xtile quint=income_adj [aw=anfinw], nq(5)
xtile vigintile=income_adj [aw=anfinw], nq(20)
/*
preserve

collapse hbn, by(quant quint quint)

twoway (bar hbn quant) (lfit hbn quant if quint==1, color(red)) (lfit hbn quant if quint==2, color(red)) ///
(lfit hbn quant if quint==3, color(red)) (lfit hbn quant if quint==4, color(red)) (lfit hbn quant if quint==5, color(red)), ///
name(g1)
twoway (bar hbn quant) (lfit hbn quant if quint<3) (lfit hbn quant if quint>2), name(g2)
graph combine g1 g2
twoway (bar hbn quant) (lfit hbn quant if quint==1, color(red)) (lfit hbn quant if quint==2, color(red)) ///
(lfit hbn quant if quint==3, color(red)) (lfit hbn quant if quint==4, color(red)) (lfit hbn quant if quint==5, color(red)) ///
(lfit hbn quant if quint<3, color(orange)) (lfit hbn quant if quint>2, color(orange))

restore 
preserve
collapse hbn, by(pct income_cat)
replace income_cat=income_cat+1
twoway (bar hbn pct) (lfit hbn pct if income_cat==1, color(red)) (lfit hbn pct if income_cat==2, color(red)) ///
(lfit hbn pct if income_cat==3, color(red)) (lfit hbn pct if income_cat==0, color(red)) ///
(lfit hbn pct if income_cat<3, color(orange)) (lfit hbn pct if income_cat>2, color(orange))

/*
restore
preserve
collapse hbn, by(quant quart)
twoway (bar hbn quant) (lfit hbn quant if quart==1, color(red)) (lfit hbn quant if quart==2, color(red)) ///
(lfit hbn quant if quart==3, color(red)) (lfit hbn quant if quart==4, color(red)) ///
(lfit hbn quant if quart<3, color(orange)) (lfit hbn quant if quart>2, color(orange))

/*
preserve
collapse hbn, by(vigin quart)
twoway (bar hbn vigint) (lfit hbn vigint if quart==1, color(red)) (lfit hbn vigint if quart==2, color(red)) ///
(lfit hbn vigint if quart==3, color(red)) (lfit hbn vigint if quart==4, color(red))  ///
(lfit hbn vigint if quart<3, color(orange)) (lfit hbn vigint if quart>2, color(orange)), legend(off)

*/
*/
*/
preserve
keep if wave==1 & year==2011
collapse hbn, by(quant income_quart)
twoway (bar hbn quant) (lfit hbn quant if income_quart==1, color(red)) (lfit hbn quant if income_quart==0, ///
color(red)) (lfit hbn quant if inrange(income_quart,2,3), color(red)), name(wave1) legend(off) title("Wave 1")
graph save homebound_over_income_w1, replace
graph export homebound_over_income_w1.pdf, replace

restore

 preserve
keep if wave==2
collapse hbn, by(quant income_quart)
twoway (bar hbn quant) (lfit hbn quant if income_quart==1, color(red)) (lfit hbn quant if income_quart==2, color(red)) ///
(lfit hbn quant if income_quart==3, color(red)) (lfit hbn quant if income_quart==0, color(red)), ///
name(wave2) legend(off) title("Wave 2")
graph save homebound_over_income_w2, replace
graph export homebound_over_income_w2.pdf, replace

restore
preserve
keep if year==2015 & wave==1
collapse hbn, by(vigin quant income_quart)
twoway (bar hbn quant) (lfit hbn quant if income_quart==1, color(red)) (lfit hbn quant if income_quart==2, color(red)) ///
(lfit hbn quant if income_quart==3, color(red)) (lfit hbn quant if income_quart==0, ///
color(red)), name(wave5) legend(off) title("Wave 5, 2015 cohort")
graph save homebound_over_income_2015cohort, replace
graph export homebound_over_income_2015cohort.pdf, replace

graph combine wave1 wave2 wave5
graph save combined, replace
graph export hb_income_combined.pdf, replace
restore
twoway (bar hbn quant)  (lfit hbn quant if quart<3, color(orange)) (lfit hbn quant if quart>2, color(orange)), name(g2)

//graph combine g1 g2


H="Tables (persontime)"
// creating tables new one

clear all
set more off
capture log close


cd "E:\nhats\data\projects\Homebound\logs"
use "E:\nhats\data\NHATS cleaned\sp_round_1_6.dta" if lml==0, clear


sort spid wave
by spid: egen lw=max(wave)
by spid: carryforward homebound_cat if lw!=wave, replace

//cpi inflation
gen income_adj=0
replace income_adj= (240.007/224.939)*aveincome if wave==1
replace income_adj= (240.007/229.594)*aveincome if wave==2 
replace income_adj= (240.007/232.957)*aveincome if wave==3
replace income_adj= (240.007/236.736)*aveincome if wave==4
replace income_adj= (240.007/237.017)*aveincome if wave==5
replace income_adj=aveincome if wave==6

//reweight, per Maureen's instructions
gen orig_weight=anfinw
replace anfinw=anfinw/5
//reset wave to 1/2 from 5/6 to run for 2015 cohort
replace wave=wave-3 if year==2015
gen ind_replenish=year==2015
label var ind_replenish "2015 Replenishment Cohort"
/*replace anfinw=. if wave!=2
sort spid wave
by spid: carryforward anfinw, replace
drop if missing(anfinw)
*/
drop if wave==1
gen wave_orig=wave
gen wavea=wave
replace wavea=wave-1 if ind_re==0
replace wavea=wave-4 if ind_re==1

gen ind_noone=n_social==0
label var ind_noone "SR nobody in social network"
sort spid wave

xtset spid wave
replace homebound_cat=. if nhres==1
gen homebound=homebound==1 if !missing(homebound) & !nhres

gen status=1 if sp_ivw==1 & !missing(homebound)
replace status=2 if homebound==1
replace status=3 if nhres==1

sort spid wave

by spid: gen start=1 if wave==2 & status!=.
by spid: carryforward start, replace

by spid: gen mstat=1 if status==.
by spid: carryforward mstat, replace

capture drop misw
//by spid: gen misw=1 if wave[_n-1]!=wave-1 & wave!=1 & ind_rep==0
by spid: gen misw=1 if wave[_n-1]!=wave-1 & wave!=2 
capture drop misw1
gen misw1=misw
by spid: carryforward misw1, replace



drop if mstat==1
drop if misw1==1


*by spid: keep if prob_dem[1]==1
by spid: egen firstdem=min(cond(prob_dem==1,wave,.))

gen hbw=wave if homebound==1
gen nhw=wave if nhres==1
by spid, sort: egen firsthb=min(hbw)
by spid, sort: egen firstnh=min(nhw)
gen everhb=!missing(firsthb)
gen evernh=!missing(firstnh)
label var everhb "Ever HB"
label var evernh "Ever NH"
*drop if firsthb==1 | missing(homebou)
by spid: gen hbnextwave=homebound[_n+1]
by spid: gen nhnextwave=nhres[_n+1]
gen inchbnextwave=firsthb==wave+1 & homebound==0
gen incnhnextwave=firstnh==wave+1 & nhres==0
replace adl_diff_ind=1 if adl_impair==1
label var adl_diff_ind "ADL difficulty or impairment"

gen wherelandgroup=1 if missing(firsthb) & missing(firstnh)
replace wherelandgroup=2 if !missing(firsthb) 
replace wherelandgroup=3 if !missing(firstnh) 
replace wherelandgroup=4 if !missing(firstnh) & firsthb<firstnh
label define wherelandgroup 1 "Never homebound or NH resident" 2 "Future HB" ///
3 "Future NH resident" 4 "Homebound, then NH"
label values wherelandgroup wherelandgroup


sort spid wave
by spid: drop if firstnh<wave
by spid: drop if firsthb<wave


/*
gen rstat=.
forvalues i=1/6{
replace rstat=r`i'status if wave==`i'
}
replace rstat=. if rstat==64

by spid: gen a=1  if rstat==. & rstat[_n-1]==rstat[_n+1] & lw!=wave
by spid: replace rstat=rstat[_n-1]  if a==1 & rstat[_n-1]==rstat[_n+1] & lw!=wave
forvalues i=1/6{
replace r`i'status=rstat if wave==`i' & a==1 & rstat!=.
}*/

gen nwstatus=.
forvalues i=2/5 {
replace nwstatus=r`=`i'+1'status if wave==`i'
}
replace nwstatus=r6status if year==2015 & wave==2
tab nwstat
tab r2status
replace nwstatus=1 if inlist(nwstatus,60,63) & !missing(hbne)
replace nwstatus=4 if inlist(nwstatus,61)
replace nwstatus=6 if inlist(nwstatus,62,86)
replace nwstatus=7 if nwstatus>7
replace nwstatus=6 if died_12==1 & nwstatus==7
label define nwstatus 1 "Community, not homebound" 2 "Homebound, not incident" ///
3 "Incident homebound" 4 "NH Resident, not incident" ///
5 "Incident NH" 6 "Died" 7 "LFU"
label values nwstatus nwstatus
replace nwstatus=2 if hbne==1
replace nwstatus=3 if inchb==1
replace nwstat=4 if nhne==1
replace nwstat=5 if incnhne==1
label var nwstat "Status next wave"
replace died_12=0 if nwstatus<=5
label var died_12 "Died prior to next wave"
replace nwstatus=7 if nwstatus==-1


gen northeast=region==1
gen midwest=region==2
gen south=region==3
gen west=region==4
label var northe "Northeast"
label var midw "Midwest"
label var south "South"
label var west "West"
gen sr_cond_cat=1 if sr_numcond<2
replace sr_cond_cat=2 if inrange(sr_numcond,2,4)
replace sr_cond_cat=3 if inrange(sr_numcond,5,15)
label define sr_cond_cat 1 "0-1 SR condition" 2 "2-4 SR conditions" 3 "5+ SR conditions"
label values sr_cond_cat sr_cond_cat
tab sr_cond_cat, gen(sr_cond_cat)
forvalues i=1/3 {
local lab: label sr_cond_cat `i'
label var sr_cond_cat`i' "`lab'"
}

gen anydebt=creditdebt==1 | medpayno==1 if !missing(creditdebt) | !missing(medpayn)
label var anydebt "Credit card or medical debt"


replace status=4 if status==1 & (firsthb<wave | firstnh<wave)
label define status 1 "Community, not HB" 2 "Homebound" 3 "NH resident" 4 ///
"Community, previously HB or NH resident"
label values status status
label var status "Status this wave"


foreach x in nopayhous nopayutil nopaymed mealskip  {
replace `x'=. if `x'==2
}
replace mealskipnum=. if mealskipnum==5
gen fin_strain=.
replace fin_strain=0 if nopayhous==0 & nopayutil==0 & nopaymed==0 & mealskip==0 
replace fin_strain=1 if nopayhous==1 | nopayutil==1 | nopaymed==1 | mealskip==1
label var fin_strain "Financial Strain (Any nopay/mealskip)"

gen any_asst= govtasst
replace any_asst=1 if section8==1
label var any_asst "Reci. any Public Assist. (incl. Gov't assist./Section 8)"



tab wave nwstat if wave<=4, row
tab nwsta status if wave==2 

sum income_adj
forvalues i=1/4 {
gen inccat`i'=income_quart==`i'
local lab : label income_quart `=`i''
label var inccat`i' "Income: `lab'"
}
gen prob_dementia=dem_3==1 if !missing(dem_3)
label var prob_dementia "Probable dementia"

by spid, sort: gen persontime=_N
replace persontime=firsthb if firsthb<persontime
replace persontime=firstnh if firstnh<persontime
label var persontime "Waves contributing information"

capture drop wave1
gen wave1=wave_orig
replace wave1=wave_orig+3 if ind_re==1

capture drop ihb
gen ihb=0
replace ihb=1 if wave==firsthb

by spid: gen unique=_n==1


svyset varunit [pw=anfinw], strata(varstrat)

/*table 1
svy: tab ihb if wave1==3, ci 
svy: tab ihb if wave1==4, ci 
svy: tab ihb if wave1==5 & ind_re==0, ci
svy: tab ihb if wave1==6 & ind_re==0, ci

svy: tab ihb if wave1==6, ci //includes 2015 cohort

svy: tab everhb if ind_re==0 & wave1==6 

svy: tab everhb if wave1==6 //includes 2015 cohort
*/
///here now what to do with it. 
svy, subpop(if wave1==3): tab ihb, ci 
svy, subpop(if wave1==4): tab ihb, ci 
svy, subpop(if wave1==5 & ind_re==0): tab ihb, ci
svy, subpop(if wave1==6 & ind_re==0): tab ihb, ci

svy, subpop(if wave1==6): tab ihb, ci
//weighted
stset wave1 [pw=anfinwgt], fail(homebound) id(spid)
stptime if ind_re==0
stptime


//table 2 
tab ihb if wave1==3
tab ihb if wave1==4
tab ihb if wave1==5 & ind_re==0
tab ihb if wave1==6 & ind_re==0

tab ihb if wave1==6 //includes 2015 cohort

//unweighted
stset wave1, fail(homebound) id(spid)
stptime if ind_re==0
stptime



//persontime is linked with nhres so won't work if comparedwith only homebound
sum persontime if unique==1 //& ind_re==0
di r(sum)

gen either=1 if nhres==1 |homebound_==1

stset wave, fail(either) id(spid) 
stptime 
if ind_re==0

stptime if ind_re==0


 if ind_re==0
sum persontime if unique==1
di r(sum)








stset wave [pw=anfinwgt], fail(everhb) id(spid) 
stptime if ind_re==0

tab everhb if wave1==6
sum persontime if wave1==6
di r(sum)
di 802/22745

svy: tab everhb if wave1==6 
di 8763012*.0906
sum persontime if wave1==6 [aw=anfinwgt],d
di r(sum)
//di 7939289/28464053


svy: tab everhb if wave1==6 & ind_re==0
di .1191*3922825
sum persontime if wave1==6 & ind_re==0 [aw=anfinwgt],d
di r(sum)
di 467208/18783678

tab firsthb if ind_re==0

svy: tab ihb if wave1==3 & ind_re==0, count ci
svy: tab ihb if wave1==4 & ind_re==0, ci
svy: tab ihb if wave1==5 & ind_re==0, ci
svy: tab ihb if wave1==6 

svy: tab ihb if wave1==6, ci
//di .0298*5669332

svy: tab everhb if wave1==6, ci


by spid: gen unique=_n==1
svy: tab everhb if wave1==6 

gen wave3= wave1
replace wave3= wave1-1 if ind_re==0
tab wave3

gen wave4=wave-1
[pw=anfinwgt]
stset wave4 , fail(everhb) id(spid) 
stptime if wave1==6

H="******removing finc. strain vars.*********"


H="sample derivation income adjusted"
clear all
set more off
capture log s


cd "E:\nhats\data\projects\Homebound\logs"
use "E:\nhats\data\NHATS cleaned\sp_round_1_6.dta" if lml==0, clear

sort spid wave
by spid: egen lw=max(wave)
by spid: carryforward homebound_cat if lw!=wave, replace

//cpi inflation
gen income_adj=0
replace income_adj= (240.007/224.939)*aveincome if wave==1
replace income_adj= (240.007/229.594)*aveincome if wave==2
replace income_adj= (240.007/232.957)*aveincome if wave==3
replace income_adj= (240.007/236.736)*aveincome if wave==4
replace income_adj= (240.007/237.017)*aveincome if wave==5
replace income_adj=aveincome if wave==6

//reweight, per Maureen's instructions
gen orig_weight=anfinw
replace anfinw=anfinw/2 if wave==1 | wave==2 | (year==2015 & wave==5) | (year==2015 & wave==6)
replace anfinw=an2011wgt if (year==2011 & wave==5) | (year==2011 & wave==6)
//reset wave to 1/2 from 5/6 to run for 2015 cohort
replace wave=wave-4 if year==2015
gen ind_replenish=year==2015
label var ind_replenish "2015 Replenishment Cohort"

gen ind_noone=n_social==0
label var ind_noone "SR nobody in social network"
sort spid wave
*by spid: keep if prob_dem[1]==1
by spid: egen firstdem=min(cond(prob_dem==1,wave,.))
xtset spid wave
replace homebound_cat=. if nhres==1
gen homebound=homebound==1 if !missing(homebound) & !nhres
gen status=1 if sp_ivw==1 & !missing(homebound)
replace status=2 if homebound==1
replace status=3 if nhres==1
sort spid wave

by spid: gen start=1 if wave==1 & status!=.
by spid: carryforward start, replace

by spid: gen mstat=1 if status==.
by spid: carryforward mstat, replace

capture drop misw
//by spid: gen misw=1 if wave[_n-1]!=wave-1 & wave!=1 & ind_rep==0
by spid: gen misw=1 if wave[_n-1]!=wave-1 & wave!=1
capture drop misw1
gen misw1=misw
by spid: carryforward misw1, replace



drop if mstat==1
drop if misw1==1

gen hbw=wave if homebound==1
gen nhw=wave if nhres==1
by spid, sort: egen firsthb=min(hbw)
by spid, sort: egen firstnh=min(nhw)
gen everhb=!missing(firsthb)
gen evernh=!missing(firstnh)
label var everhb "Ever HB"
label var evernh "Ever NH"
*drop if firsthb==1 | missing(homebou)
by spid: gen hbnextwave=homebound[_n+1]
by spid: gen nhnextwave=nhres[_n+1]
gen inchbnextwave=firsthb==wave+1 & homebound==0
gen incnhnextwave=firstnh==wave+1 & nhres==0
replace adl_diff_ind=1 if adl_impair==1
label var adl_diff_ind "ADL difficulty or impairment"

gen wherelandgroup=1 if missing(firsthb) & missing(firstnh)
replace wherelandgroup=2 if !missing(firsthb) 
replace wherelandgroup=3 if !missing(firstnh) 
replace wherelandgroup=4 if !missing(firstnh) & firsthb<firstnh
label define wherelandgroup 1 "Never homebound or NH resident" 2 "Future HB" ///
3 "Future NH resident" 4 "Homebound, then NH"
label values wherelandgroup wherelandgroup

//sort spid wave
//by spid: drop if nhres[_n-1]==1 
//by spid: drop if homebound_cat[_n-1]==. & year<201`=wave'
sort spid wave
by spid: drop if firstnh<wave
by spid: drop if firsthb<wave

gen nwstatus=.
forvalues i=1/5 {
replace nwstatus=r`=`i'+1'status if wave==`i'
}
replace nwstatus=r6status if year==2015 & wave==1
tab nwstat
tab r2status
replace nwstatus=1 if inlist(nwstatus,60,63) & !missing(hbne)
replace nwstatus=4 if inlist(nwstatus,61)
replace nwstatus=6 if inlist(nwstatus,62,86)
replace nwstatus=7 if nwstatus>7
replace nwstatus=6 if died_12==1 & nwstatus==7
label define nwstatus 1 "Community, not homebound" 2 "Homebound, not incident" ///
3 "Incident homebound" 4 "NH Resident, not incident" ///
5 "Incident NH" 6 "Died" 7 "LFU"
label values nwstatus nwstatus
replace nwstatus=2 if hbne==1
replace nwstatus=3 if inchb==1
replace nwstat=4 if nhne==1
replace nwstat=5 if incnhne==1
label var nwstat "Status next wave"
replace died_12=0 if nwstatus<=5
label var died_12 "Died prior to next wave"

gen northeast=region==1
gen midwest=region==2
gen south=region==3
gen west=region==4
label var northe "Northeast"
label var midw "Midwest"
label var south "South"
label var west "West"
gen sr_cond_cat=1 if sr_numcond<2
replace sr_cond_cat=2 if inrange(sr_numcond,2,4)
replace sr_cond_cat=3 if inrange(sr_numcond,5,15)
label define sr_cond_cat 1 "0-1 SR condition" 2 "2-4 SR conditions" 3 "5+ SR conditions"
label values sr_cond_cat sr_cond_cat
tab sr_cond_cat, gen(sr_cond_cat)
forvalues i=1/3 {
local lab: label sr_cond_cat `i'
label var sr_cond_cat`i' "`lab'"
}

*gen status=1 if sp_ivw==1 & !missing(homebound)
replace status=2 if homebound==1
replace status=3 if nhres==1
replace status=4 if status==1 & (firsthb<wave | firstnh<wave)
label define status 1 "Community, not HB" 2 "Homebound" 3 "NH resident" 4 ///
"Community, previously HB or NH resident"
label values status status
label var status "Status this wave"


foreach x in nopayhous nopayutil nopaymed mealskip  {
replace `x'=. if `x'==2
}
replace mealskipnum=. if mealskipnum==5
gen fin_strain=.
replace fin_strain=0 if nopayhous==0 & nopayutil==0 & nopaymed==0 & mealskip==0 
replace fin_strain=1 if nopayhous==1 | nopayutil==1 | nopaymed==1 | mealskip==1
label var fin_strain "Financial Strain (Any nopay/mealskip)"

gen any_asst= govtasst
replace any_asst=1 if section8==1
label var any_asst "Reci. any Public Assist. (incl. Gov't assist./Section 8"



tab wave nwstat if wave<=4, row
tab nwsta status if wave==1 

sum income_adj
forvalues i=1/4 {
gen inccat`i'=income_quart==`i'
local lab : label income_quart `=`i''
label var inccat`i' "Income: `lab'"
}
gen prob_dementia=dem_3==1 if !missing(dem_3)
label var prob_dementia "Probable dementia"

by spid, sort: gen persontime=_N
replace persontime=firsthb if firsthb<persontime
replace persontime=firstnh if firstnh<persontime
label var persontime "Waves contributing information"
gen anydebt=creditdebt==1 | medpayno==1 if !missing(creditdebt) | !missing(medpayn)
label var anydebt "Credit card or medical debt"


local cvars1 age
local cvars2 n_social_network persontime income_adj n_helpers n_paid_helpers tot_hrsmonth_help_i ///
tot_hrsmonth_paid_i 
local ivars1 female white black hisp other_race married livealone educ_hs_ind proxy ind_noone
local ivars2 ind_any_helpers ind_paid_helper top_quartile_help_helped ///
medicaid medigap srh_fp nhres ///
sr_ami_ever sr_stroke_ever sr_cancer_ever sr_hip_ever sr_heart_dis_ever ///
sr_htn_ever sr_ra_ever sr_osteoprs_ever sr_diabetes_ever sr_lung_dis_ever ///
prob_dementia dem_2_cat adl_diff_ind adl_independent iadl_diff_ind iadl_independent 
local ivars3 adl1 adl2 adl3 iadl1 iadl2 iadl3 adl_eat_help adl_bath_help adl_toil_help ///
adl_dres_help adl_ins_help adl_bed_help iadl_laun_help ///
iadl_shop_help iadl_meal_help iadl_bank_help iadl_meds_help ///
 reg_doc_seen sr_hosp_ind
gen lfunextwave=nwstatus==7
label var lfune "Lost to follow up prior to next wave"
local cvars1 age
local cvars2 persontime  income_adj
local ivars1 female white black hisp other_race married 
label var inchb "Incident Homebound Next Wave"
label var incnh "Incident Nursing Home Next Wave"
local ivars2 inccat1 inccat2 inccat3 inccat4 proxy  ///
medicaid medigap srh_fp adl_eat_help adl_bath_help adl_toil_help adl_dres_help ///
adl_ins_help adl_bed_help adl_impair iadl_impair ///
sr_cond_cat1 sr_cond_cat2 sr_cond_cat3 sr_ami_ever sr_stroke_ever sr_cancer_ever sr_hip_ever sr_heart_dis_ever ///
sr_htn_ever sr_ra_ever sr_osteoprs_ever sr_diabetes_ever sr_lung_dis_ever ///
prob_dementia dem_2_cat adl_diff_ind adl_independent inchbnextwave incnhnextwave ///
lfunextwave died_12 everhb evernh metro_ind northeast midwest south ind_replenish /*///
fin_strain mealskip nopayhous nopayutil nopaymed anydebt creditdebt medpaynotcash finhlpfam meals_wheels govtasst*/

label var meals_wheels "Meals on Wheels"

foreach x in fin_strain creditdebt medcreditdebt medpaynotcash finhlpfam meals_wheels mealskip nopayhous nopayutil nopaymed any_asst {
replace `x'=0 if `x'==.
}


gen n=1

forvalues i=1/7 {
gen group`i'=nwstatus==`i'
}

/*
*preserve
drop group*
forvalues i=1/3 {
gen group`i'=status==`i'
}
tab nwstatus,gen(nw)
levelsof nwstatus, local(levels)

foreach l of local levels {
local lab : label nwstatus `l'
label var nw`l' "`lab'"
local nw `nw' nw`l'
}
*/
preserve
//drop if wave==1
gen inw1=wave==1
gen inscope=wave==1 & inrange(homebound_cat,2,4)
by spid: egen ind_nh=max(nhres)
gen ind_died=!missing(death_date) & !ind_nh
drop if missing(homebound_cat) | nhres
by spid: replace persontime=_N-1
gen lt4yrs=persontime<4
gen lt1yrs=persontime<1
gen censored=lt4 if year==2011
replace censored=lt1 if year==2015
label var inw1 "Wave 1/5"
label var inscope "Wave 1 or 5 & Not Homebound (Never/Rarely)"
label var ind_nh "Nursing Home"
label var ind_died "Died"
label var lt4yrs "Less than 4 years"
label var lt1yrs "Less than 1 year"

mat tab=J(7,2,.)
local r=1
foreach x in inw1 inscope lt4yrs lt1yr censored ind_nh ind_died {
	sum n if `x'==1 & year==2011
	mat tab[`r',1]=r(N)
	sum n if `x'==1 & year==2015
	mat tab[`r',2]=r(N)
	keep if inscope==1
	local r=`r'+1
}
mat rownames tab=inw1 inscope lt4yrs lt2yrs censored ind_nh ind_died

frmttable using sample_derivation_wave1, replace  statmat(tab) sdec(0) varlabels

drop group*
gen group1=!censored
gen group2=censored
keep if status==1 & wave==1
local rn : word count 1 `cvars1' `cvars2' `ivars1' `ivars2' `coutcomes' `coutcomes' `ioutcomes' 1 1
di `rn'
mat tab1=J(`rn',5,.)
mat stars=J(`rn',5,0)
local r=1
local c=1
foreach i in 1 2 {
	foreach round in 1 2 {
		foreach x of local cvars`round' {
			qui sum `x' if group`i'==1 & wave==1  [aw=anfin]
			mat tab1[`r',`c']=r(mean)
			if inlist("`i'","2") {
				svy: reg `x' group`i' if group`i'==1 | group1==1
				test group`i'
				mat stars[`r',`c']=(r(p)<.01) + (r(p)<.05) 
}
			local r=`r'+1
}
		foreach x of local ivars`round' {
			qui sum `x' if group`i'==1 & wave==1  [aw=anfin]
			mat tab1[`r',`c']=r(mean)*100
			if inlist("`i'","2") {
				svy, subpop(if status==1 & wave==1  & group`i'==1 | group1==1): tab `x' group`i' 
				mat stars[`r',`c']=(e(p_Pear)<.01) + (e(p_Pear)<.05)
}
			local r=`r'+1
}
}
	local r=`r'+1

	
	foreach x of local coutcomes {
		qui sum `x' if group`i'==1,d
		mat tab1[`r',`c']=r(mean)
		if inlist("`i'","2") {
				svy: reg `x' group`i' if group`i'==1 | group1==1
				test group`i'
			mat stars[`r',`c']=(r(p)<.01) + (r(p)<.05)
}
		local r=`r'+1
*		if "`x'"=="tot_paid_by_mc_12m_wi_n0" {
			qui sum `x' if group`i'==1,d
			mat tab1[`r',`c']=r(p50)
			local r=`r'+1
*}
}
	foreach x of local ioutcomes {
		qui sum `x' if group`i'==1
		mat tab1[`r',`c']=r(mean)*100
			if inlist("`i'","2") {
				svy, subpop(if status==1 & wave==1  & group`i'==1 | group1==1): tab `x' group`i' 
				mat stars[`r',`c']=(e(p_Pear)<.01) + (e(p_Pear)<.05)
}
			local r=`r'+1
}
	qui sum n if group`i'==1 & wave==1  [aw=anfin]
	
	mat tab1[`r',`c']=r(N)
	mat tab1[`r'+1,`c']=r(sum)
	local r=1
	local c=`c'+1
}

foreach x in `coutcomes' {
local rnames `rnames' "`x'" "Median"
}

mat rownames tab1=`cvars1' `ivars1' `cvars2' `ivars2' "_" N "Estimate"

frmttable using sample_derivation_wave1, addtable statmat(tab1) ///
 title("Sample Characteristics by waves contributed") ///
 ctitles("" "Community"  "Missing waves") ///
 sdec(2) annotate(stars) asymbol(*,**) ///
 varlabels note("Waves 1/5 NHATS community-dwelling sample" "Missing waves if died, ever NH or LFU")


H="tables with wave 1 and 5"
clear all
set more off
capture log close


cd "E:\nhats\data\projects\Homebound\logs"
use "E:\nhats\data\NHATS cleaned\sp_round_1_6.dta" if lml==0, clear

sort spid wave
by spid: egen lw=max(wave)
by spid: carryforward homebound_cat if lw!=wave, replace

//cpi i
gen income_adj=0
replace income_adj= (240.007/224.939)*aveincome if wave==1
replace income_adj= (240.007/229.594)*aveincome if wave==2
replace income_adj= (240.007/232.957)*aveincome if wave==3
replace income_adj= (240.007/236.736)*aveincome if wave==4
replace income_adj= (240.007/237.017)*aveincome if wave==5
replace income_adj=aveincome if wave==6

//reweight, per Maureen's instructions
gen orig_weight=anfinw
replace anfinw=anfinw/2 if wave==1 | wave==2 | (year==2015 & wave==5) | (year==2015 & wave==6)
replace anfinw=an2011wgt if (year==2011 & wave==5) | (year==2011 & wave==6)
//reset wave to 1/2 from 5/6 to run for 2015 cohort
replace wave=wave-4 if year==2015
gen ind_replenish=year==2015
label var ind_replenish "2015 Replenishment Cohort"

gen ind_noone=n_social==0
label var ind_noone "SR nobody in social network"
sort spid wave
*by spid: keep if prob_dem[1]==1
by spid: egen firstdem=min(cond(prob_dem==1,wave,.))
xtset spid wave
replace homebound_cat=. if nhres==1
gen homebound=homebound==1 if !missing(homebound) & !nhres
gen status=1 if sp_ivw==1 & !missing(homebound)
replace status=2 if homebound==1
replace status=3 if nhres==1

sort spid wave

by spid: gen start=1 if wave==1 & status!=.
by spid: carryforward start, replace

by spid: gen mstat=1 if status==.
by spid: carryforward mstat, replace

capture drop misw
//by spid: gen misw=1 if wave[_n-1]!=wave-1 & wave!=1 & ind_rep==0
by spid: gen misw=1 if wave[_n-1]!=wave-1 & wave!=1
capture drop misw1
gen misw1=misw
by spid: carryforward misw1, replace



drop if mstat==1
drop if misw1==1

gen hbw=wave if homebound==1
gen nhw=wave if nhres==1
by spid, sort: egen firsthb=min(hbw)
by spid, sort: egen firstnh=min(nhw)
gen everhb=!missing(firsthb)
gen evernh=!missing(firstnh)
label var everhb "Ever HB"
label var evernh "Ever NH"
*drop if firsthb==1 | missing(homebou)
by spid: gen hbnextwave=homebound[_n+1]
by spid: gen nhnextwave=nhres[_n+1]
gen inchbnextwave=firsthb==wave+1 & homebound==0
gen incnhnextwave=firstnh==wave+1 & nhres==0
replace adl_diff_ind=1 if adl_impair==1
label var adl_diff_ind "ADL difficulty or impairment"

gen wherelandgroup=1 if missing(firsthb) & missing(firstnh)
replace wherelandgroup=2 if !missing(firsthb) 
replace wherelandgroup=3 if !missing(firstnh) 
replace wherelandgroup=4 if !missing(firstnh) & firsthb<firstnh
label define wherelandgroup 1 "Never homebound or NH resident" 2 "Future HB" ///
3 "Future NH resident" 4 "Homebound, then NH"
label values wherelandgroup wherelandgroup

sort spid wave
by spid: drop if firstnh<wave
by spid: drop if firsthb<wave


gen nwstatus=.
forvalues i=1/5 {
replace nwstatus=r`=`i'+1'status if wave==`i'
}
replace nwstatus=r6status if year==2015 & wave==1
tab nwstat
tab r2status
replace nwstatus=1 if inlist(nwstatus,60,63) & !missing(hbne)
replace nwstatus=4 if inlist(nwstatus,61)
replace nwstatus=6 if inlist(nwstatus,62,86)
replace nwstatus=7 if nwstatus>7
replace nwstatus=6 if died_12==1 & nwstatus==7
label define nwstatus 1 "Community, not homebound" 2 "Homebound, not incident" ///
3 "Incident homebound" 4 "NH Resident, not incident" ///
5 "Incident NH" 6 "Died" 7 "LFU"
label values nwstatus nwstatus
replace nwstatus=2 if hbne==1
replace nwstatus=3 if inchb==1
replace nwstat=4 if nhne==1
replace nwstat=5 if incnhne==1
label var nwstat "Status next wave"
replace died_12=0 if nwstatus<=5
label var died_12 "Died prior to next wave"

gen northeast=region==1
gen midwest=region==2
gen south=region==3
gen west=region==4
label var northe "Northeast"
label var midw "Midwest"
label var south "South"
label var west "West"
gen sr_cond_cat=1 if sr_numcond<2
replace sr_cond_cat=2 if inrange(sr_numcond,2,4)
replace sr_cond_cat=3 if inrange(sr_numcond,5,15)
label define sr_cond_cat 1 "0-1 SR condition" 2 "2-4 SR conditions" 3 "5+ SR conditions"
label values sr_cond_cat sr_cond_cat
tab sr_cond_cat, gen(sr_cond_cat)
forvalues i=1/3 {
local lab: label sr_cond_cat `i'
label var sr_cond_cat`i' "`lab'"
}

//gen status=1 if sp_ivw==1 & !missing(homebound)
//replace status=2 if homebound==1
//replace status=3 if nhres==1
replace status=4 if status==1 & (firsthb<wave | firstnh<wave)
label define status 1 "Community, not HB" 2 "Homebound" 3 "NH resident" 4 ///
"Community, previously HB or NH resident"
label values status status
label var status "Status this wave"


foreach x in nopayhous nopayutil nopaymed mealskip  {
replace `x'=. if `x'==2
}
replace mealskipnum=. if mealskipnum==5
gen fin_strain=.
replace fin_strain=0 if nopayhous==0 & nopayutil==0 & nopaymed==0 & mealskip==0 
replace fin_strain=1 if nopayhous==1 | nopayutil==1 | nopaymed==1 | mealskip==1
label var fin_strain "Financial Strain (Any nopay/mealskip)"

gen any_asst= govtasst
replace any_asst=1 if section8==1
label var any_asst "Reci. any Public Assist. (incl. Gov't assist./Section 8"



tab wave nwstat if wave<=4, row
tab nwsta status if wave==1 
/*sum aveincome
forvalues i=1/4 {
gen inccat`i'=income_cat==`i'-1
local lab : label income_cat `=`i'-1'
label var inccat`i' "Income: `lab'"
}*/
sum income_adj
forvalues i=1/4 {
gen inccat`i'=income_quart==`i'
local lab : label income_quart `=`i''
label var inccat`i' "Income: `lab'"
}
gen prob_dementia=dem_3==1 if !missing(dem_3)
label var prob_dementia "Probable dementia"

by spid, sort: gen persontime=_N
replace persontime=firsthb if firsthb<persontime
replace persontime=firstnh if firstnh<persontime
label var persontime "Waves contributing information"
gen anydebt=creditdebt==1 | medpayno==1 if !missing(creditdebt) | !missing(medpayn)
label var anydebt "Credit card or medical debt"

local cvars1 age
local cvars2 n_social_network persontime income_adj n_helpers n_paid_helpers tot_hrsmonth_help_i ///
tot_hrsmonth_paid_i 
local ivars1 female white black hisp other_race married livealone educ_hs_ind proxy ind_noone
local ivars2 ind_any_helpers ind_paid_helper top_quartile_help_helped ///
medicaid medigap srh_fp nhres ///
sr_ami_ever sr_stroke_ever sr_cancer_ever sr_hip_ever sr_heart_dis_ever ///
sr_htn_ever sr_ra_ever sr_osteoprs_ever sr_diabetes_ever sr_lung_dis_ever ///
prob_dementia dem_2_cat adl_diff_ind adl_independent iadl_diff_ind iadl_independent 
local ivars3 adl1 adl2 adl3 iadl1 iadl2 iadl3 adl_eat_help adl_bath_help adl_toil_help ///
adl_dres_help adl_ins_help adl_bed_help iadl_laun_help ///
iadl_shop_help iadl_meal_help iadl_bank_help iadl_meds_help ///
 reg_doc_seen sr_hosp_ind
gen lfunextwave=nwstatus==7
label var lfune "Lost to follow up prior to next wave"
local cvars1 age
local cvars2 persontime  income_adj
local ivars1 female white black hisp other_race married 
label var inchb "Incident Homebound Next Wave"
label var incnh "Incident Nursing Home Next Wave"
local ivars2 inccat1 inccat2 inccat3 inccat4 proxy  ///
medicaid medigap srh_fp adl_eat_help adl_bath_help adl_toil_help adl_dres_help ///
adl_ins_help adl_bed_help adl_impair iadl_impair ///
sr_cond_cat1 sr_cond_cat2 sr_cond_cat3 sr_ami_ever sr_stroke_ever sr_cancer_ever sr_hip_ever sr_heart_dis_ever ///
sr_htn_ever sr_ra_ever sr_osteoprs_ever sr_diabetes_ever sr_lung_dis_ever ///
prob_dementia dem_2_cat adl_diff_ind adl_independent inchbnextwave incnhnextwave ///
lfunextwave died_12 everhb evernh metro_ind northeast midwest south ind_replenish ///
fin_strain mealskip nopayhous nopayutil nopaymed anydebt creditdebt medpaynotcash finhlpfam meals_wheels govtasst

label var meals_wheels "Meals on Wheels"

foreach x in fin_strain creditdebt medcreditdebt medpaynotcash finhlpfam meals_wheels mealskip nopayhous nopayutil nopaymed any_asst {
replace `x'=0 if `x'==.
}


gen n=1

forvalues i=1/7 {
gen group`i'=nwstatus==`i'
}

/*
*preserve
drop group*
forvalues i=1/3 {
gen group`i'=status==`i'
}
tab nwstatus,gen(nw)
levelsof nwstatus, local(levels)

foreach l of local levels {
local lab : label nwstatus `l'
label var nw`l' "`lab'"
local nw `nw' nw`l'
}
*/

 
preserve
keep if status==1 & wave==1
local rn : word count 1 `cvars1' `cvars2' `ivars1' `ivars2' `coutcomes' `coutcomes' `ioutcomes' 1 1
di `rn'
mat tab1=J(`rn',5,.)
mat stars=J(`rn',5,0)
local r=1
local c=1
foreach i in 1 3 5 6 7 {
	foreach round in 1 2 {
		foreach x of local cvars`round' {
			qui sum `x' if group`i'==1 & wave==1  [aw=anfin]
			mat tab1[`r',`c']=r(mean)
			if inlist("`i'","3","5","6","7") {
				svy: reg `x' group`i' if group`i'==1 | group1==1
				test group`i'
				mat stars[`r',`c']=(r(p)<.01) + (r(p)<.05) 
}
			local r=`r'+1
}
		foreach x of local ivars`round' {
			qui sum `x' if group`i'==1 & wave==1  [aw=anfin]
			mat tab1[`r',`c']=r(mean)*100
			if inlist("`i'","3","5","6","7") {
				svy, subpop(if status==1 & wave==1  & group`i'==1 | group1==1): tab `x' group`i' 
				mat stars[`r',`c']=(e(p_Pear)<.01) + (e(p_Pear)<.05)
}
			local r=`r'+1
}
}
	local r=`r'+1

	
	foreach x of local coutcomes {
		qui sum `x' if group`i'==1,d
		mat tab1[`r',`c']=r(mean)
		if inlist("`i'","3","5","6","7") {
				svy: reg `x' group`i' if group`i'==1 | group1==1
				test group`i'
			mat stars[`r',`c']=(r(p)<.01) + (r(p)<.05)
}
		local r=`r'+1
*		if "`x'"=="tot_paid_by_mc_12m_wi_n0" {
			qui sum `x' if group`i'==1,d
			mat tab1[`r',`c']=r(p50)
			local r=`r'+1
*}
}
	foreach x of local ioutcomes {
		qui sum `x' if group`i'==1
		mat tab1[`r',`c']=r(mean)*100
			if inlist("`i'","3","5","6","7") {
				svy, subpop(if status==1 & wave==1  & group`i'==1 | group1==1): tab `x' group`i' 
				mat stars[`r',`c']=(e(p_Pear)<.01) + (e(p_Pear)<.05)
}
			local r=`r'+1
}
	qui sum n if group`i'==1 & wave==1  [aw=anfin]
	
	mat tab1[`r',`c']=r(N)
	mat tab1[`r'+1,`c']=r(sum)
	local r=1
	local c=`c'+1
}

foreach x in `coutcomes' {
local rnames `rnames' "`x'" "Median"
}

mat rownames tab1=`cvars1' `ivars1' `cvars2' `ivars2' "_" N "Estimate"

frmttable using sample_characteristics_incl_2015_samp_weighted_wave1, replace statmat(tab1) ///
 title("Sample Characteristics by next wave status") ///
 ctitles("" "Community"  "Incident HB"  "Incident NH" ///
 "Died" "LFU") ///
 sdec(2) annotate(stars) asymbol(*,**) ///
 varlabels note("Waves 1/5 NHATS community-dwelling sample, by next-wave status")

restore
/*
preserve
keep if status==1
local rn : word count 1 `cvars1' `cvars2' `ivars1' `ivars2' `coutcomes' `coutcomes' `ioutcomes' 1 1
di `rn'
mat tab1=J(`rn',4,.)
mat stars=J(`rn',4,0)
local r=1
local c=1

drop group*
forvalues i=1/4 {
gen group`i'=inccat`i'
local lab`i' : var label inccat`i'
}

forvalues i=1/4 {
	foreach round in 1 2 {
		foreach x of local cvars`round' {
			qui sum `x' if group`i'==1 & wave==1  [aw=anfin]
			mat tab1[`r',`c']=r(mean)
			if inlist("`i'","2","3","4") {
				qui ttest `x' if group`i'==1 | group1==1, by(group`i')
				mat stars[`r',`c']=(r(p)<.01) + (r(p)<.05)
}
			local r=`r'+1
}
		foreach x of local ivars`round' {
			qui sum `x' if group`i'==1 & wave==1  [aw=anfin]
			mat tab1[`r',`c']=r(mean)*100
			if inlist("`i'","2","3","4") {
				svy, subpop(if status==1 & wave==1  & nwstatus<=5 &group`i'==1 | group1==1): tab `x' group`i' 
				mat stars[`r',`c']=(r(p)<.01) + (r(p)<.05)
}
			local r=`r'+1
}
}
	local r=`r'+1

	
	foreach x of local coutcomes {
		qui sum `x' if group`i'==1,d
		mat tab1[`r',`c']=r(mean)
		if inlist("`i'","2","3","4") {
			qui ttest `x' if group`i'==1 | group1==1, by(group`i')
			mat stars[`r',`c']=(r(p)<.01) + (r(p)<.05)
}
		local r=`r'+1
*		if "`x'"=="tot_paid_by_mc_12m_wi_n0" {
			qui sum `x' if group`i'==1,d
			mat tab1[`r',`c']=r(p50)
			local r=`r'+1
*}
}
	foreach x of local ioutcomes {
		qui sum `x' if group`i'==1
		mat tab1[`r',`c']=r(mean)*100
			if inlist("`i'","2","3","4") {
				svy, subpop(if status==1 & wave==1  & nwstatus<=5 &group`i'==1 | group1==1): tab `x' group`i' 
				mat stars[`r',`c']=(r(p)<.01) + (r(p)<.05)
}
			local r=`r'+1
}
	qui sum n if group`i'==1 & wave==1  [aw=anfin]
	
	mat tab1[`r',`c']=r(N)
	mat tab1[`r'+1,`c']=r(sum)
	local r=1
	local c=`c'+1
}

foreach x in `coutcomes' {
local rnames `rnames' "`x'" "Median"
}

mat rownames tab1=`cvars1' `ivars1' `cvars2' `ivars2' "_" N "Estimate"

frmttable using sample_characteristics_incl_2015_samp_weighted, addtable statmat(tab1) ///
 title("Sample Characteristics by Income category") ///
 ctitles("" "`lab1'" "`lab2'" "`lab3'" "`lab4'") ///
 sdec(2) annotate(stars) asymbol(*,*) ///
 varlabels note("Cross-wave NHATS community-dwelling sample, by income group")
restore*/




local cvars1 age 
local ivars1 female
preserve
drop if year==2015
drop group*
*keep if status==1 & wave==1  & nwstatus<=5
replace wherela=2 if wherela==4
tab wherela, gen(group)
forvalues i=1/3 {
local lab : label wherelandgroup `i'
label var group`i' "`lab'"
}
tab1 group*
local rn : word count 1 `cvars1' `cvars2' `ivars1' `ivars2' `coutcomes' `coutcomes' `ioutcomes' 1 1
di `rn'
mat tab1=J(`rn',6,.)
mat stars=J(`rn',6,0)
local r=1
local c=1
forvalues i=1/3 {
	foreach round in 1 2 {
		foreach x of local cvars`round' {
			qui sum `x' if group`i'==1 & wave==1  & status==1   & nwstatus<=5 [aw=anfin]
			mat tab1[`r',`c']=r(mean)
			if inlist("`i'","2","3","4") {
				svy, subpop(if status==1 & wave==1  & nwstatus<=5 &group`i'==1 | group1==1): reg `x' group`i' 
				test
				mat tab1[`r',`c'+1]=r(p)
				mat stars[`r',`c'+1]=(r(p)<.05)+(r(p)<.01)
}
			local r=`r'+1
}
		foreach x of local ivars`round' {
			qui sum `x' if group`i'==1   & status==1 & wave==1  & nwstatus<=5 [aw=anfin]
			mat tab1[`r',`c']=r(mean)*100
			if inlist("`i'","2","3","4") {
				svy, subpop(if status==1 & wave==1  & nwstatus<=5 &group`i'==1 | group1==1): tab `x' group`i' 
				mat tab1[`r',`c'+1]=e(p_Pear)
				mat stars[`r',`c'+1]=(e(p_Pear)<.05)+(e(p_Pear)<.01)
}
			local r=`r'+1
}
}
	local r=`r'+1

	
	foreach x of local coutcomes {
		qui sum `x' if group`i'==1 & status==1 & wave==1  & nwstatus<=5,d
		mat tab1[`r',`c']=r(mean)
		if inlist("`i'","2","3","4") {
				svy, subpop(if status==1 & wave==1  & nwstatus<=5 &group`i'==1 | group1==1): reg `x' group`i' 
				test
				mat tab1[`r',`c'+1]=r(p)
				mat stars[`r',`c'+1]=(r(p)<.05)+(r(p)<.01)
}
		local r=`r'+1
*		if "`x'"=="tot_paid_by_mc_12m_wi_n0" {
			qui sum `x' if group`i'==1  & wave==1 ,d
			mat tab1[`r',`c']=r(p50)
			local r=`r'+1
*}
}
	foreach x of local ioutcomes {
		qui sum `x' if group`i'==1 & status==1 & wave==1  & nwstatus<=5 
		mat tab1[`r',`c']=r(mean)*100
			if inlist("`i'","2","3") {
				svy, subpop(if status==1 & wave==1  & nwstatus<=5 &group`i'==1 | group1==1): tab `x' group`i' 
				mat tab1[`r',`c'+1]=e(p_Pear)
				mat stars[`r',`c'+1]=(e(p_Pear)<.05)+(e(p_Pear)<.01)
}
			local r=`r'+1
}
	qui sum n if group`i'==1   & status==1 & wave==1  & nwstatus<=5 [aw=anfin]
	
	mat tab1[`r',`c']=r(N)
	*mat tab1[`r'+1,`c']=r(sum)
	local r=1
	local c=`c'+2
}

foreach x in `coutcomes' {
local rnames `rnames' "`x'" "Median"
}

mat rownames tab1=`cvars1' `ivars1' `cvars2' `ivars2' "_" N "Estimate"

frmttable using sample_characteristics_incl_2015_samp_weighted_wave1, addtable statmat(tab1) ///
 title("Sample Characteristics by future homebound status") ///
 ctitles("" "Never Homebound or NH res" "" "Future HB" "P-value" "Future NH" "P-value") ///
 sdec(2) annotate(stars) asymbol(*,*) ///
 varlabels note("Wave 1 community-dwelling sample, by ultimate homebound status" ///
 "Excludes those Lost to Follow up or dead prior to wave 1" ///
 "Future status evaluated at HB or NH, or final wave prior to dropout/wave 6")

restore
replace wherela=2 if wherela==4
preserve
tab wherela, gen(whereland)
forvalues i=1/3 {
local lab : label wherelandgroup `i'
label var whereland`i' "`lab'"
}
*keep if status==1 & wave==1 

local ivars2 inccat1 inccat2 inccat3 inccat4  ///
 whereland1 whereland2 whereland3 proxy  ///
medicaid medigap srh_fp adl_eat_help adl_bath_help adl_toil_help adl_dres_help ///
adl_ins_help adl_bed_help adl_impair iadl_impair ///
sr_cond_cat1 sr_cond_cat2 sr_cond_cat3 sr_ami_ever sr_stroke_ever sr_cancer_ever sr_hip_ever sr_heart_dis_ever ///
sr_htn_ever sr_ra_ever sr_osteoprs_ever sr_diabetes_ever sr_lung_dis_ever ///
prob_dementia dem_2_cat adl_diff_ind adl_independent inchbnextwave incnhnextwave ///
died_12 lfunextwave everhb evernh metro_ind northeast midwest south ind_replenish /*///
fin_strain mealskip nopayhous nopayutil nopaymed anydebt creditdebt medpaynotcash finhlpfam meals_wheels govtasst*/


local rn : word count 1 `cvars1' `cvars2' `ivars1' `ivars2' `coutcomes' `coutcomes' `ioutcomes' 1 1
di `rn'
mat tab1=J(`rn',8,.)
mat stars=J(`rn',8,0)
local r=1
local c=1
/*
tab wherela, gen(whereland)
forvalues i=1/3 {
local lab : label wherelandgroup `i'
label var whereland`i' "`lab'"
}
*/

local rn : word count 1 `cvars1' `cvars2' `ivars1' `ivars2' `coutcomes' `coutcomes' `ioutcomes' 1 1
di `rn'
mat tab1=J(`rn',8,.)
mat stars=J(`rn',8,0)
local r=1
local c=1

drop group*
forvalues i=1/4 {
gen group`i'=inccat`i'
local lab`i' : var label inccat`i'
}

forvalues i=1/4 {
	foreach round in 1 2 {
		foreach x of local cvars`round' {
			qui sum `x' if group`i'==1   & status==1 & wave==1  & nwstatus<=5 [aw=anfin]
			mat tab1[`r',`c']=r(mean)
			if inlist("`i'","2","3","4") {
				svy, subpop(if status==1 & wave==1  & nwstatus<=5 &group`i'==1 | group1==1): reg `x' group`i' 
				test
				mat tab1[`r',`c'+1]=r(p)
				mat stars[`r',`c'+1]=(r(p)<.05)+(r(p)<.01)
}
			local r=`r'+1
}
		foreach x of local ivars`round' {
			qui sum `x' if group`i'==1   & status==1 & wave==1  & nwstatus<=5 [aw=anfin]
			mat tab1[`r',`c']=r(mean)*100
			if inlist("`i'","2","3","4") {
				svy, subpop(if status==1 & wave==1  & nwstatus<=5 &group`i'==1 | group1==1): tab `x' group`i' 
				mat tab1[`r',`c'+1]=e(p_Pear)
				mat stars[`r',`c'+1]=(e(p_Pear)<.05)+(e(p_Pear)<.01)
}
			local r=`r'+1
}
}
	local r=`r'+1

	
	foreach x of local coutcomes {
		qui sum `x' if group`i'==1 & status==1 & wave==1  & nwstatus<=5,d
		mat tab1[`r',`c']=r(mean)
		if inlist("`i'","2","3","4") {
				svy, subpop(if status==1 & wave==1  & nwstatus<=5 &group`i'==1 | group1==1): reg `x' group`i' 
				test
				mat tab1[`r',`c'+1]=r(p)
				mat stars[`r',`c'+1]=(r(p)<.05)+(r(p)<.01)
}
		local r=`r'+1
*		if "`x'"=="tot_paid_by_mc_12m_wi_n0" {
			qui sum `x' if group`i'==1 & wave==1 ,d
			mat tab1[`r',`c']=r(p50)
			local r=`r'+1
*}
}
	foreach x of local ioutcomes {
		qui sum `x' if group`i'==1 & status==1 & wave==1  & nwstatus<=5
		mat tab1[`r',`c']=r(mean)*100
			if inlist("`i'","2","3","4") {
				svy, subpop(if status==1 & wave==1  & nwstatus<=5 &group`i'==1 | group1==1): tab `x' group`i' 
				mat tab1[`r',`c'+1]=e(p_Pear)
				mat stars[`r',`c'+1]=(e(p_Pear)<.05)+(e(p_Pear)<.01)
}
			local r=`r'+1
}
	qui sum n if group`i'==1 & wave==1  [aw=anfin]
	
	mat tab1[`r',`c']=r(N)
	mat tab1[`r'+1,`c']=r(sum)
	local r=1
	local c=`c'+2
}

foreach x in `coutcomes' {
local rnames `rnames' "`x'" "Median"
}

mat rownames tab1=`cvars1' `ivars1' `cvars2' `ivars2' "_" N "Estimate"

frmttable using sample_characteristics_incl_2015_samp_weighted_wave1, addtable statmat(tab1) ///
 title("Sample Characteristics by Income category") ///
 ctitles("" "`lab1'" "" "`lab2'" "P-value" "`lab3'" "P-value" "`lab4'" "P-value") ///
 sdec(2) annotate(stars) asymbol(*,*) ///
 varlabels note("Wave 1/5 community-dwelling sample, by income group" ///
 "Excluding those LFU or dead prior to wave 2")
restore



H="Cox regressions"
clear all
set more off
capture log close


cd "E:\nhats\data\projects\Homebound\logs"
use "E:\nhats\data\NHATS cleaned\sp_round_1_6.dta" if lml==0, clear

sort spid wave
by spid: egen lw=max(wave)
by spid: carryforward homebound_cat if lw!=wave, replace

//cpi inflation
gen income_adj=0
replace income_adj= (240.007/224.939)*aveincome if wave==1
replace income_adj= (240.007/229.594)*aveincome if wave==2
replace income_adj= (240.007/232.957)*aveincome if wave==3
replace income_adj= (240.007/236.736)*aveincome if wave==4
replace income_adj= (240.007/237.017)*aveincome if wave==5

//reweight, per Maureen's instructions
gen orig_weight=anfinw
replace anfinw=anfinw/2 if wave==1 | wave==2 | (year==2015 & wave==5) | (year==2015 & wave==6)
replace anfinw=an2011wgt if (year==2011 & wave==5) | (year==2011 & wave==6)
//reset wave to 1/2 from 5/6 to run for 2015 cohort
replace wave=wave-4 if year==2015
gen ind_replenish=year==2015
label var ind_replenish "2015 Replenishment Cohort"

gen ind_noone=n_social==0
label var ind_noone "SR nobody in social network"
sort spid wave
*by spid: keep if prob_dem[1]==1
by spid: egen firstdem=min(cond(prob_dem==1,wave,.))
xtset spid wave
replace homebound_cat=. if nhres==1
gen homebound=homebound==1 if !missing(homebound) & !nhres
gen status=1 if sp_ivw==1 & !missing(homebound)
replace status=2 if homebound==1
replace status=3 if nhres==1

sort spid wave

by spid: gen start=1 if wave==1 & status!=.
by spid: carryforward start, replace

by spid: gen mstat=1 if status==.
by spid: carryforward mstat, replace

capture drop misw
//by spid: gen misw=1 if wave[_n-1]!=wave-1 & wave!=1 & ind_rep==0
by spid: gen misw=1 if wave[_n-1]!=wave-1 & wave!=1
capture drop misw1
gen misw1=misw
by spid: carryforward misw1, replace



drop if mstat==1
drop if misw1==1



gen hbw=wave if homebound==1
gen nhw=wave if nhres==1
by spid, sort: egen firsthb=min(hbw)
by spid, sort: egen firstnh=min(nhw)
gen everhb=!missing(firsthb)
gen evernh=!missing(firstnh)
label var everhb "Ever HB"
label var evernh "Ever NH"
*drop if firsthb==1 | missing(homebou)
by spid: gen hbnextwave=homebound[_n+1]
by spid: gen nhnextwave=nhres[_n+1]
gen inchbnextwave=firsthb==wave+1 & homebound==0
gen incnhnextwave=firstnh==wave+1 & nhres==0
replace adl_diff_ind=1 if adl_impair==1
label var adl_diff_ind "ADL difficulty or impairment"

gen wherelandgroup=1 if missing(firsthb) & missing(firstnh)
replace wherelandgroup=2 if !missing(firsthb) 
replace wherelandgroup=3 if !missing(firstnh) 
replace wherelandgroup=4 if !missing(firstnh) & firsthb<firstnh
label define wherelandgroup 1 "Never homebound or NH resident" 2 "Future HB" ///
3 "Future NH resident" 4 "Homebound, then NH"
label values wherelandgroup wherelandgroup

sort spid wave
by spid: drop if firstnh<wave
by spid: drop if firsthb<wave

/*sort spid wave
by spid: drop if nhres[_n-1]==1 
by spid: drop if homebound_cat[_n-1]==. & year<201`=wave'
di wave*/

gen nwstatus=.
forvalues i=1/5 {
replace nwstatus=r`=`i'+1'status if wave==`i'
}
replace nwstatus=r6status if year==2015 & wave==1
tab nwstat
tab r2status
replace nwstatus=1 if inlist(nwstatus,60,63) & !missing(hbne)
replace nwstatus=4 if inlist(nwstatus,61)
replace nwstatus=6 if inlist(nwstatus,62,86)
replace nwstatus=7 if nwstatus>7
replace nwstatus=6 if died_12==1 & nwstatus==7
label define nwstatus 1 "Community, not homebound" 2 "Homebound, not incident" ///
3 "Incident homebound" 4 "NH Resident, not incident" ///
5 "Incident NH" 6 "Died" 7 "LFU"
label values nwstatus nwstatus
replace nwstatus=2 if hbne==1
replace nwstatus=3 if inchb==1
replace nwstat=4 if nhne==1
replace nwstat=5 if incnhne==1
label var nwstat "Status next wave"
replace died_12=0 if nwstatus<=5
label var died_12 "Died prior to next wave"

gen northeast=region==1
gen midwest=region==2
gen south=region==3
gen west=region==4
label var northe "Northeast"
label var midw "Midwest"
label var south "South"
label var west "West"
gen sr_cond_cat=1 if sr_numcond<2
replace sr_cond_cat=2 if inrange(sr_numcond,2,4)
replace sr_cond_cat=3 if inrange(sr_numcond,5,15)
label define sr_cond_cat 1 "0-1 SR condition" 2 "2-4 SR conditions" 3 "5+ SR conditions"
label values sr_cond_cat sr_cond_cat
tab sr_cond_cat, gen(sr_cond_cat)
forvalues i=1/3 {
local lab: label sr_cond_cat `i'
label var sr_cond_cat`i' "`lab'"
}

gen anydebt=creditdebt==1 | medpayno==1 if !missing(creditdebt) | !missing(medpayn)
label var anydebt "Credit card or medical debt"

//gen status=1 if sp_ivw==1 & !missing(homebound)
//replace status=2 if homebound==1
//replace status=3 if nhres==1
replace status=4 if status==1 & (firsthb<wave | firstnh<wave)
label define status 1 "Community, not HB" 2 "Homebound" 3 "NH resident" 4 ///
"Community, previously HB or NH resident"
label values status status
label var status "Status this wave"


foreach x in nopayhous nopayutil nopaymed mealskip  {
replace `x'=. if `x'==2
}
replace mealskipnum=. if mealskipnum==5
gen fin_strain=.
replace fin_strain=0 if nopayhous==0 & nopayutil==0 & nopaymed==0 & mealskip==0 
replace fin_strain=1 if nopayhous==1 | nopayutil==1 | nopaymed==1 | mealskip==1
label var fin_strain "Financial Strain (Any nopay/mealskip)"

gen any_asst= govtasst
replace any_asst=1 if section8==1
label var any_asst "Reci. any Public Assist. (incl. Gov't assist./Section 8"



tab wave nwstat if wave<=4, row
tab nwsta status if wave==1 

/*
sum aveincome
forvalues i=1/4 {
gen inccat`i'=income_cat==`i'-1
local lab : label income_cat `=`i'-1'
label var inccat`i' "Income: `lab'"
}*/

sum income_adj
forvalues i=1/4 {
gen inccat`i'=income_quart==`i'
local lab : label income_quart `=`i''
label var inccat`i' "Income: `lab'"
}

gen prob_dementia=dem_3==1 if !missing(dem_3)
label var prob_dementia "Probable dementia"

by spid, sort: gen persontime=_N
replace persontime=firsthb if firsthb<persontime
replace persontime=firstnh if firstnh<persontime
label var persontime "Waves contributing information"

local cvars1 age
local cvars2 n_social_network persontime income_adj n_helpers n_paid_helpers tot_hrsmonth_help_i ///
tot_hrsmonth_paid_i 
local ivars1 female white black hisp other_race married livealone educ_hs_ind proxy ind_noone
local ivars2 ind_any_helpers ind_paid_helper top_quartile_help_helped ///
medicaid medigap srh_fp nhres ///
sr_ami_ever sr_stroke_ever sr_cancer_ever sr_hip_ever sr_heart_dis_ever ///
sr_htn_ever sr_ra_ever sr_osteoprs_ever sr_diabetes_ever sr_lung_dis_ever ///
prob_dementia dem_2_cat adl_diff_ind adl_independent iadl_diff_ind iadl_independent 
local ivars3 adl1 adl2 adl3 iadl1 iadl2 iadl3 adl_eat_help adl_bath_help adl_toil_help ///
adl_dres_help adl_ins_help adl_bed_help iadl_laun_help ///
iadl_shop_help iadl_meal_help iadl_bank_help iadl_meds_help ///
 reg_doc_seen sr_hosp_ind
gen lfunextwave=nwstatus==7
label var lfune "Lost to follow up prior to next wave"
local cvars1 age
local cvars2 persontime  income_adj
local ivars1 female white black hisp other_race married 
label var inchb "Incident Homebound Next Wave"
label var incnh "Incident Nursing Home Next Wave"
local ivars2 inccat1 inccat2 inccat3 inccat4 proxy  ///
medicaid medigap srh_fp adl_eat_help adl_bath_help adl_toil_help adl_dres_help ///
adl_ins_help adl_bed_help adl_impair iadl_impair ///
sr_cond_cat1 sr_cond_cat2 sr_cond_cat3 sr_ami_ever sr_stroke_ever sr_cancer_ever sr_hip_ever sr_heart_dis_ever ///
sr_htn_ever sr_ra_ever sr_osteoprs_ever sr_diabetes_ever sr_lung_dis_ever ///
prob_dementia dem_2_cat adl_diff_ind adl_independent inchbnextwave incnhnextwave ///
lfunextwave died_12 everhb evernh metro_ind northeast midwest south ind_replenish /*///
fin_strain creditdebt mealskip nopayhous nopayutil nopaymed medcreditdebt medpaynotcash finhlpfam any_asst ///
govtasst meals_wheels section8 
label var meals_wheels "Meals on Wheels"*/

foreach x in fin_strain creditdebt medcreditdebt medpaynotcash finhlpfam meals_wheels mealskip nopayhous nopayutil nopaymed any_asst {
replace `x'=0 if `x'==.
}


gen n=1

label var educ_hs_ind "Education: HS+"
preserve
*log using homebound_income_cox_log.txt, text replace
drop if missing(homebound_cat) & !nhres
by spid, sort: egen lastwave=max(wave)
*keep if wave==1 
tab lastwave
*keep if inrange(homebound_cat,2,4)
gen time=lastwave
gen first_hb_or_nh=firsthb
replace first_hb=firstnh if firstnh<firsthb
replace time=first_hb_or_nh if !missing(first_hb_or_nh)

gen ind_helper_any=n_helpers>0
label var ind_helper_any "Any helpers"
gen dies=!missing(death_date)
gen ultimate=everhb==1
replace ultimate=2 if evernh==1 & !ultimate
replace ultimate=2 if firstnh<firsthb
replace ultimate=3 if !missing(death_date) & !ultimate
stset time, failure(everhb) 
sts graph, by(income_quart)
graph save km_hb, replace
graph export km_hb.pdf, replace

forvalues i=1/6 {
local lab : label r1d2intvrage `i'
label define agecat `i' "`lab'", modify
}


foreach x in agecat income_quart {
levelsof `x', local(levels)
foreach l of local levels {
	gen `x'`l'=`x'==`l'
	local lab : label `x' `l'
	label var `x'`l' "`lab'"
}
}

forvalues i=2/6 {
	local age `age' agecat`i'
}

forvalues i=1/3 {
	local inc `inc' income_quart`i'
}

label var income_quart1 "Income Quartile 1"
label var income_quart2 "Income Quartile 2"
label var income_quart3 "Income Quartile 3"


local cond sr_cond_cat2 sr_cond_cat3

local vars `age' `inc' fin_strain anydebt govtasst finhlpfam meals_wheels ///
female black hisp married ind_noone educ_hs_ind  ///
medicaid prob_dem `cond' adl_diff_ind srh_fp ///
ind_paid_helper metro_ind northeast midwest south ind_replenish 

svy, subpop(if wave==1 &  inrange(homebound_cat,2,4)): stcox `vars' //, nohr mgale(mg)
//stcoxkm, by(income_quart)
qui outreg, ctitles("" "Homebound") varlabels stats(e_b p)
stcox `vars' if wave==1 &  inrange(homebound_cat,2,4)
//sthplot, by(

stphplot, by(income_quart) adjust(`age'  female black hisp married  ind_noone  educ_hs_ind  ///
medicaid prob_dem `cond' adl_diff_ind srh_fp ind_paid_helper ///
metro_ind northeast midwest south fin_strain any_asst)
stphplot, by(income_quart)

gen timenh=firstnh
replace timenh=lastwave if missing(firstnh)
stset timenh, failure(evernh)
sts graph, by(income_quart)
graph save km_nh, replace
graph export km_nh.pdf, replace


svy, subpop(if wave==1 &  inrange(homebound_cat,2,4)): stcox `vars'

qui outreg, merge ctitles("" "Nursing home") varlabels stats(e_b p)

gen either=everhb==1 | evernh==1
stset time, failure(either)
sts graph, by(income_quart)
graph save km_either, replace
graph export km_either.pdf, replace

local vars `age' `inc' fin_strain anydebt govtasst finhlpfam meals_wheels ///
female black hisp married ind_noone educ_hs_ind  ///
medicaid prob_dem `cond' adl_diff_ind srh_fp ///
ind_paid_helper metro_ind northeast midwest south ind_replenish 

svy, subpop(if wave==1 &  inrange(homebound_cat,2,4)): stcox `vars'

qui outreg using homebound_income_cox_models_incl_2015_samp_weighted_wave1, merge ///
ctitles("" "HB or NH") varlabels  ///
title(Cox proportional hazard models) stats(e_b p) replace ///
note("Among wave 2 non-homebound community dwelling SPs")
capture drop p hb2 nh2 either2
predict p 
sum `vars' if missing(p)

sort spid wave
by spid: gen hb2=inlist(nwstat,2,3) if nwstat<7
by spid: gen nh2=inlist(nwstat,4,5) if nwstat<7
gen either2=hb2==1 | nh2==1 if !missing(hb2)
svy, subpop(if wave==1 & inrange(homebound_cat,2,4)): logit hb2 `vars'
qui outreg, stats(e_b p) ctitles("" "Homebound") varlabels
svy, subpop(if wave==1 & inrange(homebound_cat,2,4)): logit nh2 `vars'
qui outreg, stats(e_b p) ctitles("" "Nursing Home") varlabels merge
svy, subpop(if wave==1 & inrange(homebound_cat,2,4)): logit either2 `vars'
qui outreg, stats(e_b p) ctitles("" "HB or NH") varlabels merge

outreg using homebound_income_logit_incl_2015_samp_weighted_wave1, replay replace ///
title(Logistic regression on next wave status) ///
note("Among wave 2/5 non-homebound community dwelling SPs")

//mdesc `vars'
mkcorr `vars' if wave==1 &  inrange(homebound_cat,2,4), log(corr_wave2.xls) replace 


H="Cox with TVC"
clear all
set more off
capture log close


cd "E:\nhats\data\projects\Homebound\logs"
use "E:\nhats\data\NHATS cleaned\sp_round_1_6.dta" if lml==0, clear

sort spid wave
by spid: egen lw=max(wave)
by spid: carryforward homebound_cat if lw!=wave, replace

//cpi inflation
gen income_adj=0
replace income_adj= (240.007/224.939)*aveincome if wave==1
replace income_adj= (240.007/229.594)*aveincome if wave==2
replace income_adj= (240.007/232.957)*aveincome if wave==3
replace income_adj= (240.007/236.736)*aveincome if wave==4
replace income_adj= (240.007/237.017)*aveincome if wave==5
replace income_adj=aveincome if wave==6

//reweight, per Maureen's instructions
gen orig_weight=anfinw
replace anfinw=anfinw/2 if wave==1 | wave==2 | (year==2015 & wave==5) | (year==2015 & wave==6)
replace anfinw=an2011wgt if (year==2011 & wave==5) | (year==2011 & wave==6)
//reset wave to 1/2 from 5/6 to run for 2015 cohort
replace wave=wave-4 if year==2015
gen ind_replenish=year==2015
label var ind_replenish "2015 Replenishment Cohort"
replace anfinw=. if wave!=1
sort spid wave
by spid: carryforward anfinw, replace
drop if missing(anfinw)
gen ind_noone=n_social==0
label var ind_noone "SR nobody in social network"
sort spid wave
*by spid: keep if prob_dem[1]==1
by spid: egen firstdem=min(cond(prob_dem==1,wave,.))
xtset spid wave
replace homebound_cat=. if nhres==1
gen homebound=homebound==1 if !missing(homebound) & !nhres
gen status=1 if sp_ivw==1 & !missing(homebound)
replace status=2 if homebound==1
replace status=3 if nhres==1

sort spid wave

by spid: gen start=1 if wave==1 & status!=.
by spid: carryforward start, replace

by spid: gen mstat=1 if status==.
by spid: carryforward mstat, replace

capture drop misw
//by spid: gen misw=1 if wave[_n-1]!=wave-1 & wave!=1 & ind_rep==0
by spid: gen misw=1 if wave[_n-1]!=wave-1 & wave!=1
capture drop misw1
gen misw1=misw
by spid: carryforward misw1, replace



drop if mstat==1
drop if misw1==1


gen hbw=wave if homebound==1
gen nhw=wave if nhres==1
by spid, sort: egen firsthb=min(hbw)
by spid, sort: egen firstnh=min(nhw)
gen everhb=!missing(firsthb)
gen evernh=!missing(firstnh)
label var everhb "Ever HB"
label var evernh "Ever NH"
*drop if firsthb==1 | missing(homebou)
by spid: gen hbnextwave=homebound[_n+1]
by spid: gen nhnextwave=nhres[_n+1]
gen inchbnextwave=firsthb==wave+1 & homebound==0
gen incnhnextwave=firstnh==wave+1 & nhres==0
replace adl_diff_ind=1 if adl_impair==1
label var adl_diff_ind "ADL difficulty or impairment"

gen wherelandgroup=1 if missing(firsthb) & missing(firstnh)
replace wherelandgroup=2 if !missing(firsthb) 
replace wherelandgroup=3 if !missing(firstnh) 
replace wherelandgroup=4 if !missing(firstnh) & firsthb<firstnh
label define wherelandgroup 1 "Never homebound or NH resident" 2 "Future HB" ///
3 "Future NH resident" 4 "Homebound, then NH"
label values wherelandgroup wherelandgroup

sort spid wave
by spid: drop if firstnh<wave
by spid: drop if firsthb<wave


gen nwstatus=.
forvalues i=1/5 {
replace nwstatus=r`=`i'+1'status if wave==`i'
}
replace nwstatus=r6status if year==2015 & wave==1
tab nwstat
tab r1status
replace nwstatus=1 if inlist(nwstatus,60,63) & !missing(hbne)
replace nwstatus=4 if inlist(nwstatus,61)
replace nwstatus=6 if inlist(nwstatus,62,86)
replace nwstatus=7 if nwstatus>7
replace nwstatus=6 if died_12==1 & nwstatus==7
label define nwstatus 1 "Community, not homebound" 2 "Homebound, not incident" ///
3 "Incident homebound" 4 "NH Resident, not incident" ///
5 "Incident NH" 6 "Died" 7 "LFU"
label values nwstatus nwstatus
replace nwstatus=2 if hbne==1
replace nwstatus=3 if inchb==1
replace nwstat=4 if nhne==1
replace nwstat=5 if incnhne==1
label var nwstat "Status next wave"
replace died_12=0 if nwstatus<=5
label var died_12 "Died prior to next wave"


gen northeast=region==1
gen midwest=region==2
gen south=region==3
gen west=region==4
label var northe "Northeast"
label var midw "Midwest"
label var south "South"
label var west "West"
gen sr_cond_cat=1 if sr_numcond<2
replace sr_cond_cat=2 if inrange(sr_numcond,2,4)
replace sr_cond_cat=3 if inrange(sr_numcond,5,15)
label define sr_cond_cat 1 "0-1 SR condition" 2 "2-4 SR conditions" 3 "5+ SR conditions"
label values sr_cond_cat sr_cond_cat
tab sr_cond_cat, gen(sr_cond_cat)
forvalues i=1/3 {
local lab: label sr_cond_cat `i'
label var sr_cond_cat`i' "`lab'"
}

gen anydebt=creditdebt==1 | medpayno==1 if !missing(creditdebt) | !missing(medpayn)
label var anydebt "Credit card or medical debt"

//gen status=1 if sp_ivw==1 & !missing(homebound)
//replace status=2 if homebound==1
//replace status=3 if nhres==1
replace status=4 if status==1 & (firsthb<wave | firstnh<wave)
label define status 1 "Community, not HB" 2 "Homebound" 3 "NH resident" 4 ///
"Community, previously HB or NH resident"
label values status status
label var status "Status this wave"


foreach x in nopayhous nopayutil nopaymed mealskip  {
replace `x'=. if `x'==2
}
replace mealskipnum=. if mealskipnum==5
gen fin_strain=.
replace fin_strain=0 if nopayhous==0 & nopayutil==0 & nopaymed==0 & mealskip==0 
replace fin_strain=1 if nopayhous==1 | nopayutil==1 | nopaymed==1 | mealskip==1
label var fin_strain "Financial Strain (Any nopay/mealskip)"

gen any_asst= govtasst
replace any_asst=1 if section8==1
label var any_asst "Reci. any Public Assist. (incl. Gov't assist./Section 8)"



tab wave nwstat if wave<=4, row
tab nwsta status if wave==1 

sum income_adj
forvalues i=1/4 {
gen inccat`i'=income_quart==`i'
local lab : label income_quart `=`i''
label var inccat`i' "Income: `lab'"
}
gen prob_dementia=dem_3==1 if !missing(dem_3)
label var prob_dementia "Probable dementia"

by spid, sort: gen persontime=_N
replace persontime=firsthb if firsthb<persontime
replace persontime=firstnh if firstnh<persontime
label var persontime "Waves contributing information"

local cvars1 age
local cvars2 n_social_network persontime income_adj n_helpers n_paid_helpers tot_hrsmonth_help_i ///
tot_hrsmonth_paid_i 
local ivars1 female white black hisp other_race married livealone educ_hs_ind proxy ind_noone
local ivars2 ind_any_helpers ind_paid_helper top_quartile_help_helped ///
medicaid medigap srh_fp nhres ///
sr_ami_ever sr_stroke_ever sr_cancer_ever sr_hip_ever sr_heart_dis_ever ///
sr_htn_ever sr_ra_ever sr_osteoprs_ever sr_diabetes_ever sr_lung_dis_ever ///
prob_dementia dem_2_cat adl_diff_ind adl_independent iadl_diff_ind iadl_independent 
local ivars3 adl1 adl2 adl3 iadl1 iadl2 iadl3 adl_eat_help adl_bath_help adl_toil_help ///
adl_dres_help adl_ins_help adl_bed_help iadl_laun_help ///
iadl_shop_help iadl_meal_help iadl_bank_help iadl_meds_help ///
 reg_doc_seen sr_hosp_ind
gen lfunextwave=nwstatus==7
label var lfune "Lost to follow up prior to next wave"
local cvars1 age
local cvars2 persontime  income_adj
local ivars1 female white black hisp other_race married 
label var inchb "Incident Homebound Next Wave"
label var incnh "Incident Nursing Home Next Wave"
local ivars2 inccat1 inccat2 inccat3 inccat4 proxy  ///
medicaid medigap srh_fp adl_eat_help adl_bath_help adl_toil_help adl_dres_help ///
adl_ins_help adl_bed_help adl_impair iadl_impair ///
sr_cond_cat1 sr_cond_cat2 sr_cond_cat3 sr_ami_ever sr_stroke_ever sr_cancer_ever sr_hip_ever sr_heart_dis_ever ///
sr_htn_ever sr_ra_ever sr_osteoprs_ever sr_diabetes_ever sr_lung_dis_ever ///
prob_dementia dem_2_cat adl_diff_ind adl_independent inchbnextwave incnhnextwave ///
lfunextwave died_12 everhb evernh metro_ind northeast midwest south ind_replenish /*///
fin_strain creditdebt mealskip nopayhous nopayutil nopaymed medcreditdebt medpaynotcash finhlpfam any_asst ///
govtasst meals_wheels section8 
label var meals_wheels "Meals on Wheels"*/

foreach x in fin_strain creditdebt medcreditdebt medpaynotcash finhlpfam meals_wheels mealskip nopayhous nopayutil nopaymed any_asst {
replace `x'=0 if `x'==.
}
s

gen n=1

label var educ_hs_ind "Education: HS+"
preserve
*log using homebound_income_cox_log.txt, text replace
drop if missing(homebound_cat) & !nhres
by spid, sort: egen lastwave=max(wave)
*keep if wave==2 
tab lastwave
*keep if inrange(homebound_cat,2,4)
gen time=lastwave
gen first_hb_or_nh=firsthb
replace first_hb=firstnh if firstnh<firsthb
replace time=first_hb_or_nh if !missing(first_hb_or_nh)

gen ind_helper_any=n_helpers>0
label var ind_helper_any "Any helpers"
gen dies=!missing(death_date)
gen ultimate=everhb==1
replace ultimate=2 if evernh==1 & !ultimate
replace ultimate=2 if firstnh<firsthb
replace ultimate=3 if !missing(death_date) & !ultimate
stset wave, failure(homebound_==1) id(spid) origin(wave==1)

forvalues i=1/6 {
local lab : label r1d2intvrage `i'
label define agecat `i' "`lab'", modify
}


foreach x in agecat income_quart {
levelsof `x', local(levels)
foreach l of local levels {
	gen `x'`l'=`x'==`l'
	local lab : label `x' `l'
	label var `x'`l' "`lab'"
}
}

forvalues i=2/6 {
	local age `age' agecat`i'
}

forvalues i=1/3 {
	local inc `inc' income_quart`i'
}
label var income_quart1 "Income Quartile 1"
label var income_quart2 "Income Quartile 2"
label var income_quart3 "Income Quartile 3"
label var agecat2 "Age 70-74"
label var agecat3 "Age 75-79"
label var agecat4 "Age 80-84"
label var agecat5 "Age 85-89"
label var agecat6 "Age 90+"

local cond sr_cond_cat2 sr_cond_cat3

local vars `age' `inc' fin_strain anydebt govtasst finhlpfam meals_wheels ///
female black hisp married ind_noone educ_hs_ind  ///
medicaid prob_dem `cond' adl_impair srh_fp ///
ind_paid_helper metro_ind northeast midwest south ind_replenish 

local tvc `inc'

 stcox `vars' //, nohr mgale(mg)
*stcoxkm. by(income_cat)
qui outreg, ctitles("" "Homebound") varlabels stats(e_b p)

stphplot, by(income_quart) adjust(`vars')
stphplot, by(income_quart)

gen timenh=firstnh
replace timenh=lastwave if missing(firstnh)
stset wave, failure(nhres==1) id(spid) origin(wave==1)


 stcox `vars'

qui outreg, merge ctitles("" "Nursing home") varlabels stats(e_b p)

gen either=nhres==1 | homebound_==1
stset wave, failure(either==1) id(spid) origin(wave==1)

 stcox `vars' 

qui outreg using homebound_income_cox_models_tvc_wave1, merge ///
ctitles("" "HB or NH") varlabels  ///
title(Cox proportional hazard models) stats(e_b p) replace ///
note("Among wave 2 non-homebound community dwelling SPs")
capture drop p hb2 nh2 either2
predict p 
sum `vars' if missing(p)

sort spid wave
by spid: gen hb2=inlist(nwstat,2,3) if nwstat<7
by spid: gen nh2=inlist(nwstat,4,5) if nwstat<7
gen either2=hb2==1 | nh2==1 if !missing(hb2)
svy, subpop(if inrange(homebound_cat,2,4)): logit hb2 `vars'
qui outreg, stats(e_b p) ctitles("" "Homebound") varlabels
svy, subpop(if inrange(homebound_cat,2,4)): logit nh2 `vars'
qui outreg, stats(e_b p) ctitles("" "Nursing Home") varlabels merge
svy, subpop(if inrange(homebound_cat,2,4)): logit either2 `vars'
qui outreg, stats(e_b p) ctitles("" "HB or NH") varlabels merge

outreg using homebound_income_logit_incl_2015_samp_weighted_mult_wave1, replay replace ///
title(Logistic regression on next wave status) ///
note("Multi-wave logistic regressions non-homebound community dwelling SPs")

mkcorr `vars' if inrange(homebound_cat,2,4), log(corr_all.xls) replace 


H="Tables (persontime) with round 1"
// creating tables new one

clear all
set more off
capture log close


cd "E:\nhats\data\projects\Homebound\logs"
use "E:\nhats\data\NHATS cleaned\sp_round_1_6.dta" if lml==0, clear


sort spid wave
by spid: egen lw=max(wave)
by spid: carryforward homebound_cat if lw!=wave, replace

//cpi inflation
gen income_adj=0
replace income_adj= (240.007/224.939)*aveincome if wave==1
replace income_adj= (240.007/229.594)*aveincome if wave==2 
replace income_adj= (240.007/232.957)*aveincome if wave==3
replace income_adj= (240.007/236.736)*aveincome if wave==4
replace income_adj= (240.007/237.017)*aveincome if wave==5
replace income_adj=aveincome if wave==6

//reweight, per Maureen's instructions
gen orig_weight=anfinw
replace anfinw=anfinw/2 if wave==1 | wave==2 | (year==2015 & wave==5) | (year==2015 & wave==6)
replace anfinw=an2011wgt if (year==2011 & wave==5) | (year==2011 & wave==6)
//reset wave to 1/2 from 5/6 to run for 2015 cohort
replace wave=wave-4 if year==2015
gen ind_replenish=year==2015
label var ind_replenish "2015 Replenishment Cohort"
/*replace anfinw=. if wave!=2
sort spid wave
by spid: carryforward anfinw, replace
drop if missing(anfinw)
*/
drop if ind_re==1

gen ind_noone=n_social==0
label var ind_noone "SR nobody in social network"
sort spid wave

xtset spid wave
replace homebound_cat=. if nhres==1
gen homebound=homebound==1 if !missing(homebound) & !nhres

gen status=1 if sp_ivw==1 & !missing(homebound)
replace status=2 if homebound==1
replace status=3 if nhres==1

sort spid wave

by spid: gen start=1 if wave==2 & status!=.
by spid: carryforward start, replace

by spid: gen mstat=1 if status==.
by spid: carryforward mstat, replace

capture drop misw
//by spid: gen misw=1 if wave[_n-1]!=wave-1 & wave!=1 & ind_rep==0
by spid: gen misw=1 if wave[_n-1]!=wave-1 & wave!=1 
capture drop misw1
gen misw1=misw
by spid: carryforward misw1, replace



drop if mstat==1
drop if misw1==1


*by spid: keep if prob_dem[1]==1
by spid: egen firstdem=min(cond(prob_dem==1,wave,.))

gen hbw=wave if homebound==1
gen nhw=wave if nhres==1
by spid, sort: egen firsthb=min(hbw)
by spid, sort: egen firstnh=min(nhw)
gen everhb=!missing(firsthb)
gen evernh=!missing(firstnh)
label var everhb "Ever HB"
label var evernh "Ever NH"
*drop if firsthb==1 | missing(homebou)
by spid: gen hbnextwave=homebound[_n+1]
by spid: gen nhnextwave=nhres[_n+1]
gen inchbnextwave=firsthb==wave+1 & homebound==0
gen incnhnextwave=firstnh==wave+1 & nhres==0
replace adl_diff_ind=1 if adl_impair==1
label var adl_diff_ind "ADL difficulty or impairment"

gen wherelandgroup=1 if missing(firsthb) & missing(firstnh)
replace wherelandgroup=2 if !missing(firsthb) 
replace wherelandgroup=3 if !missing(firstnh) 
replace wherelandgroup=4 if !missing(firstnh) & firsthb<firstnh
label define wherelandgroup 1 "Never homebound or NH resident" 2 "Future HB" ///
3 "Future NH resident" 4 "Homebound, then NH"
label values wherelandgroup wherelandgroup


sort spid wave
by spid: drop if firstnh<wave
by spid: drop if firsthb<wave


/*
gen rstat=.
forvalues i=1/6{
replace rstat=r`i'status if wave==`i'
}
replace rstat=. if rstat==64

by spid: gen a=1  if rstat==. & rstat[_n-1]==rstat[_n+1] & lw!=wave
by spid: replace rstat=rstat[_n-1]  if a==1 & rstat[_n-1]==rstat[_n+1] & lw!=wave
forvalues i=1/6{
replace r`i'status=rstat if wave==`i' & a==1 & rstat!=.
}*/

gen nwstatus=.
forvalues i=1/5 {
replace nwstatus=r`=`i'+1'status if wave==`i'
}
replace nwstatus=r6status if year==2015 & wave==1
tab nwstat
tab r2status
replace nwstatus=1 if inlist(nwstatus,60,63) & !missing(hbne)
replace nwstatus=4 if inlist(nwstatus,61)
replace nwstatus=6 if inlist(nwstatus,62,86)
replace nwstatus=7 if nwstatus>7
replace nwstatus=6 if died_12==1 & nwstatus==7
label define nwstatus 1 "Community, not homebound" 2 "Homebound, not incident" ///
3 "Incident homebound" 4 "NH Resident, not incident" ///
5 "Incident NH" 6 "Died" 7 "LFU"
label values nwstatus nwstatus
replace nwstatus=2 if hbne==1
replace nwstatus=3 if inchb==1
replace nwstat=4 if nhne==1
replace nwstat=5 if incnhne==1
label var nwstat "Status next wave"
replace died_12=0 if nwstatus<=5
label var died_12 "Died prior to next wave"
replace nwstatus=7 if nwstatus==-1


gen northeast=region==1
gen midwest=region==2
gen south=region==3
gen west=region==4
label var northe "Northeast"
label var midw "Midwest"
label var south "South"
label var west "West"
gen sr_cond_cat=1 if sr_numcond<2
replace sr_cond_cat=2 if inrange(sr_numcond,2,4)
replace sr_cond_cat=3 if inrange(sr_numcond,5,15)
label define sr_cond_cat 1 "0-1 SR condition" 2 "2-4 SR conditions" 3 "5+ SR conditions"
label values sr_cond_cat sr_cond_cat
tab sr_cond_cat, gen(sr_cond_cat)
forvalues i=1/3 {
local lab: label sr_cond_cat `i'
label var sr_cond_cat`i' "`lab'"
}

gen anydebt=creditdebt==1 | medpayno==1 if !missing(creditdebt) | !missing(medpayn)
label var anydebt "Credit card or medical debt"


replace status=4 if status==1 & (firsthb<wave | firstnh<wave)
label define status 1 "Community, not HB" 2 "Homebound" 3 "NH resident" 4 ///
"Community, previously HB or NH resident"
label values status status
label var status "Status this wave"


foreach x in nopayhous nopayutil nopaymed mealskip  {
replace `x'=. if `x'==2
}
replace mealskipnum=. if mealskipnum==5
gen fin_strain=.
replace fin_strain=0 if nopayhous==0 & nopayutil==0 & nopaymed==0 & mealskip==0 
replace fin_strain=1 if nopayhous==1 | nopayutil==1 | nopaymed==1 | mealskip==1
label var fin_strain "Financial Strain (Any nopay/mealskip)"

gen any_asst= govtasst
replace any_asst=1 if section8==1
label var any_asst "Reci. any Public Assist. (incl. Gov't assist./Section 8)"



tab wave nwstat if wave<=4, row
tab nwsta status if wave==2 

sum income_adj
forvalues i=1/4 {
gen inccat`i'=income_quart==`i'
local lab : label income_quart `=`i''
label var inccat`i' "Income: `lab'"
}
gen prob_dementia=dem_3==1 if !missing(dem_3)
label var prob_dementia "Probable dementia"

by spid, sort: gen persontime=_N
replace persontime=firsthb if firsthb<persontime
replace persontime=firstnh if firstnh<persontime
label var persontime "Waves contributing information"


gen n=1

mat tab=J(6,4,.)
local r=2

sum n if status==1 & wave==1 & ind_re==0
mat tab[1,1]=r(N)
forvalues i=1/5{
sum n if nwstatus==1 & status==1 & wave==`i' & ind_re==0
mat tab[`r',1]=r(N)
local r=`r'+1
}

local c=2
forvalues i= 3 5 : 7{ 
local r=2
forvalues w=1/5{
sum n if nwstatus==`i' & status==1 & wave==`w' & ind_re==0
mat tab[`r',`c']=r(N)
local r=`r'+1
}
local c=`c'+1
}


mat rownames tab= "Wave 1" "Wave 2" "Wave 3" "Wave 4" "Wave 5" "Wave 6"
mat colnames tab="Community" "Incident Homebound" "Incident Nursing Home" "Lost to Follow-up"

mat list tab

frmttable using status.rtf, statmat(tab) replace title("Status by Wave for Original Cohort") ///
sdec(0) varlabels note("2,656 people remain in the community after the last wave")

mat tab1=J(2,4,.)
local r=2

sum n if status==1 & wave==1 & ind_re==1
mat tab1[1,1]=r(N)
sum n if nwstatus==1 & status==1 & wave==1 & ind_re==1
mat tab1[`r',1]=r(N)


local c=2
forvalues i= 3 5 : 7{ 
local r=2

sum n if nwstatus==`i' & status==1 & wave==1 & ind_re==1
mat tab1[`r',`c']=r(N)
local c=`c'+1
}

mat rownames tab1= "Wave 1" "Wave 2" 
mat colnames tab1="Community" "Incident Homebound" "Incident Nursing Home" "Lost to Follow-up"

mat list tab1


frmttable using status.rtf, statmat(tab1) replace title("Status by Wave for Replenishment Cohort") ///
sdec(0) varlabels addtable note("2,870 people remain in the community after the last wave")






capture drop ihb
gen ihb=0
replace ihb=1 if wave==firsthb

svyset varunit [pw=anfinw], strata(varstrat)
mat tab1=J(20,20,.)
local r=1
forvalues w=1/6{
svy, subpop(if wave==`w'): tab ihb if ind_re==0, ci 
mat tab1[`r',1]=e(total)
local r=`r'+1
}
mat list tab1


capture drop wave1
gen wave1=wave_orig
replace wave1=wave_orig+3 if ind_re==1



by spid: gen unique=_n==1


svyset varunit [pw=anfinw], strata(varstrat)
tab ihb if wave==1

mat tab=J(20,20,.)

stset wave, fail(homebound) id(spid)
stptime, title(person-time) 
stptime, at(1) title(person-time) 
stptime, at(2) title(person-time) 
stptime, at(3) title(person-time) 
stptime, at(4) title(person-time) 
stptime, at(5) title(person-time) 
stptime, at(6) title(person-time) 









/*table 1
svy: tab ihb if wave1==3, ci 
svy: tab ihb if wave1==4, ci 
svy: tab ihb if wave1==5 & ind_re==0, ci
svy: tab ihb if wave1==6 & ind_re==0, ci

svy: tab ihb if wave1==6, ci //includes 2015 cohort

svy: tab everhb if ind_re==0 & wave1==6 

svy: tab everhb if wave1==6 //includes 2015 cohort
*/
///here now what to do with it. 
svy, subpop(if wave1==3): tab ihb, ci 
svy, subpop(if wave1==4): tab ihb, ci 
svy, subpop(if wave1==5 & ind_re==0): tab ihb, ci
svy, subpop(if wave1==6 & ind_re==0): tab ihb, ci

svy, subpop(if wave1==6): tab ihb, ci
//weighted
stset wave1 [pw=anfinwgt], fail(homebound) id(spid)
stptime if ind_re==0
stptime


//table 2 
tab ihb if wave1==3
tab ihb if wave1==4
tab ihb if wave1==5 & ind_re==0
tab ihb if wave1==6 & ind_re==0

tab ihb if wave1==6 //includes 2015 cohort

//unweighted
stset wave1, fail(homebound) id(spid)
stptime if ind_re==0
stptime



//persontime is linked with nhres so won't work if comparedwith only homebound
sum persontime if unique==1 //& ind_re==0
di r(sum)

gen either=1 if nhres==1 |homebound_==1

stset wave, fail(either) id(spid) 
stptime 
if ind_re==0

stptime if ind_re==0


 if ind_re==0
sum persontime if unique==1
di r(sum)








stset wave [pw=anfinwgt], fail(everhb) id(spid) 
stptime if ind_re==0

tab everhb if wave1==6
sum persontime if wave1==6
di r(sum)
di 802/22745

svy: tab everhb if wave1==6 
di 8763012*.0906
sum persontime if wave1==6 [aw=anfinwgt],d
di r(sum)
//di 7939289/28464053


svy: tab everhb if wave1==6 & ind_re==0
di .1191*3922825
sum persontime if wave1==6 & ind_re==0 [aw=anfinwgt],d
di r(sum)
di 467208/18783678

tab firsthb if ind_re==0

svy: tab ihb if wave1==3 & ind_re==0, count ci
svy: tab ihb if wave1==4 & ind_re==0, ci
svy: tab ihb if wave1==5 & ind_re==0, ci
svy: tab ihb if wave1==6 

svy: tab ihb if wave1==6, ci
//di .0298*5669332

svy: tab everhb if wave1==6, ci


by spid: gen unique=_n==1
svy: tab everhb if wave1==6 

gen wave3= wave1
replace wave3= wave1-1 if ind_re==0
tab wave3

gen wave4=wave-1
[pw=anfinwgt]
stset wave4 , fail(everhb) id(spid) 
stptime if wave1==6

H="Financial Resources Measures"
clear all
set more off
capture log close


cd "E:\nhats\data\projects\Homebound\logs"
use "E:\nhats\data\NHATS cleaned\sp_round_1_6.dta" if lml==0, clear

//cpi inflation
gen income_adj=0
replace income_adj= (240.007/224.939)*aveincome if wave==1
replace income_adj= (240.007/229.594)*aveincome if wave==2
replace income_adj= (240.007/232.957)*aveincome if wave==3
replace income_adj= (240.007/236.736)*aveincome if wave==4
replace income_adj= (240.007/237.017)*aveincome if wave==5
replace income_adj=aveincome if wave==6





foreach x in nopayhous nopayutil nopaymed mealskip  {
replace `x'=. if `x'==2
}
replace mealskipnum=. if mealskipnum==5
gen fin_strain=.
replace fin_strain=0 if nopayhous==0 & nopayutil==0 & nopaymed==0 & mealskip==0 
replace fin_strain=1 if nopayhous==1 | nopayutil==1 | nopaymed==1 | mealskip==1
label var fin_strain "Financial Strain (Any nopay/mealskip)"

gen any_asst= govtasst
replace any_asst=1 if section8==1
label var any_asst "Reci. any Public Assist. (incl. Gov't assist./Section 8"

gen anydebt=creditdebt==1 | medpayno==1 if !missing(creditdebt) | !missing(medpayn)
label var anydebt "Credit card or medical debt"

sum income_adj
forvalues i=1/4 {
gen inccat`i'=income_quart==`i'
local lab : label income_quart `=`i''
label var inccat`i' "Income: `lab'"
}

H="New 1"
clear all
set more off
capture log close


cd "E:\nhats\data\projects\Homebound\logs"
use "E:\nhats\data\NHATS cleaned\sp_round_1_6.dta" if lml==0, clear

sort spid wave
by spid: egen lw=max(wave)
by spid: carryforward homebound_cat if lw!=wave, replace

//cpi inflation
gen income_adj=0
replace income_adj= (240.007/224.939)*aveincome if wave==1
replace income_adj= (240.007/229.594)*aveincome if wave==2
replace income_adj= (240.007/232.957)*aveincome if wave==3
replace income_adj= (240.007/236.736)*aveincome if wave==4
replace income_adj= (240.007/237.017)*aveincome if wave==5

//reweight, per Maureen's instructions
gen orig_weight=anfinw

//reset wave to 1/2 from 5/6 to run for 2015 cohort
replace wave=wave-4 if year==2015
gen ind_replenish=year==2015
label var ind_replenish "2015 Replenishment Cohort"
replace anfinw=anfinw*(8071/12196) if ind_re==0
replace anfinw=anfinw*(4125/12196) if ind_re==1

gen ind_noone=n_social==0
label var ind_noone "SR nobody in social network"
sort spid wave
*by spid: keep if prob_dem[1]==1
by spid: egen firstdem=min(cond(prob_dem==1,wave,.))
xtset spid wave
replace homebound_cat=. if nhres==1
gen homebound=homebound==1 if !missing(homebound) & !nhres
gen status=1 if sp_ivw==1 & !missing(homebound)
replace status=2 if homebound==1
replace status=3 if nhres==1

sort spid wave

by spid: gen start=1 if wave==1 & status!=.
by spid: carryforward start, replace

by spid: gen mstat=1 if status==.
by spid: carryforward mstat, replace

capture drop misw
//by spid: gen misw=1 if wave[_n-1]!=wave-1 & wave!=1 & ind_rep==0
by spid: gen misw=1 if wave[_n-1]!=wave-1 & wave!=1
capture drop misw1
gen misw1=misw
by spid: carryforward misw1, replace



drop if mstat==1
drop if misw1==1



gen hbw=wave if homebound==1
gen nhw=wave if nhres==1
by spid, sort: egen firsthb=min(hbw)
by spid, sort: egen firstnh=min(nhw)
gen everhb=!missing(firsthb)
gen evernh=!missing(firstnh)
label var everhb "Ever HB"
label var evernh "Ever NH"
*drop if firsthb==1 | missing(homebou)
by spid: gen hbnextwave=homebound[_n+1]
by spid: gen nhnextwave=nhres[_n+1]
gen inchbnextwave=firsthb==wave+1 & homebound==0
gen incnhnextwave=firstnh==wave+1 & nhres==0
replace adl_diff_ind=1 if adl_impair==1
label var adl_diff_ind "ADL difficulty or impairment"

gen wherelandgroup=1 if missing(firsthb) & missing(firstnh)
replace wherelandgroup=2 if !missing(firsthb) 
replace wherelandgroup=3 if !missing(firstnh) 
replace wherelandgroup=4 if !missing(firstnh) & firsthb<firstnh
label define wherelandgroup 1 "Never homebound or NH resident" 2 "Future HB" ///
3 "Future NH resident" 4 "Homebound, then NH"
label values wherelandgroup wherelandgroup

sort spid wave
by spid: drop if firstnh<wave
by spid: drop if firsthb<wave

/*sort spid wave
by spid: drop if nhres[_n-1]==1 
by spid: drop if homebound_cat[_n-1]==. & year<201`=wave'
di wave*/

gen nwstatus=.
forvalues i=1/5 {
replace nwstatus=r`=`i'+1'status if wave==`i'
}
replace nwstatus=r6status if year==2015 & wave==1
tab nwstat
tab r2status
replace nwstatus=1 if inlist(nwstatus,60,63) & !missing(hbne)
replace nwstatus=4 if inlist(nwstatus,61)
replace nwstatus=6 if inlist(nwstatus,62,86)
replace nwstatus=7 if nwstatus>7
replace nwstatus=6 if died_12==1 & nwstatus==7
label define nwstatus 1 "Community, not homebound" 2 "Homebound, not incident" ///
3 "Incident homebound" 4 "NH Resident, not incident" ///
5 "Incident NH" 6 "Died" 7 "LFU"
label values nwstatus nwstatus
replace nwstatus=2 if hbne==1
replace nwstatus=3 if inchb==1
replace nwstat=4 if nhne==1
replace nwstat=5 if incnhne==1
label var nwstat "Status next wave"
replace died_12=0 if nwstatus<=5
label var died_12 "Died prior to next wave"

gen northeast=region==1
gen midwest=region==2
gen south=region==3
gen west=region==4
label var northe "Northeast"
label var midw "Midwest"
label var south "South"
label var west "West"
gen sr_cond_cat=1 if sr_numcond<2
replace sr_cond_cat=2 if inrange(sr_numcond,2,4)
replace sr_cond_cat=3 if inrange(sr_numcond,5,15)
label define sr_cond_cat 1 "0-1 SR condition" 2 "2-4 SR conditions" 3 "5+ SR conditions"
label values sr_cond_cat sr_cond_cat
tab sr_cond_cat, gen(sr_cond_cat)
forvalues i=1/3 {
local lab: label sr_cond_cat `i'
label var sr_cond_cat`i' "`lab'"
}

gen anydebt=creditdebt==1 | medpayno==1 if !missing(creditdebt) | !missing(medpayn)
label var anydebt "Credit card or medical debt"

//gen status=1 if sp_ivw==1 & !missing(homebound)
//replace status=2 if homebound==1
//replace status=3 if nhres==1
replace status=4 if status==1 & (firsthb<wave | firstnh<wave)
label define status 1 "Community, not HB" 2 "Homebound" 3 "NH resident" 4 ///
"Community, previously HB or NH resident"
label values status status
label var status "Status this wave"


foreach x in nopayhous nopayutil nopaymed mealskip  {
replace `x'=. if `x'==2
}
replace mealskipnum=. if mealskipnum==5
gen fin_strain=.
replace fin_strain=0 if nopayhous==0 & nopayutil==0 & nopaymed==0 & mealskip==0 
replace fin_strain=1 if nopayhous==1 | nopayutil==1 | nopaymed==1 | mealskip==1
label var fin_strain "Financial Strain (Any nopay/mealskip)"

gen any_asst= govtasst
replace any_asst=1 if section8==1
label var any_asst "Reci. any Public Assist. (incl. Gov't assist./Section 8"



tab wave nwstat if wave<=4, row
tab nwsta status if wave==1 

/*
sum aveincome
forvalues i=1/4 {
gen inccat`i'=income_cat==`i'-1
local lab : label income_cat `=`i'-1'
label var inccat`i' "Income: `lab'"
}*/

sum income_adj
forvalues i=1/4 {
gen inccat`i'=income_quart==`i'
local lab : label income_quart `=`i''
label var inccat`i' "Income: `lab'"
}

gen prob_dementia=dem_3==1 if !missing(dem_3)
label var prob_dementia "Probable dementia"

by spid, sort: gen persontime=_N
replace persontime=firsthb if firsthb<persontime
replace persontime=firstnh if firstnh<persontime
label var persontime "Waves contributing information"

local cvars1 age
local cvars2 n_social_network persontime income_adj n_helpers n_paid_helpers tot_hrsmonth_help_i ///
tot_hrsmonth_paid_i 
local ivars1 female white black hisp other_race married livealone educ_hs_ind proxy ind_noone
local ivars2 ind_any_helpers ind_paid_helper top_quartile_help_helped ///
medicaid medigap srh_fp nhres ///
sr_ami_ever sr_stroke_ever sr_cancer_ever sr_hip_ever sr_heart_dis_ever ///
sr_htn_ever sr_ra_ever sr_osteoprs_ever sr_diabetes_ever sr_lung_dis_ever ///
prob_dementia dem_2_cat adl_diff_ind adl_independent iadl_diff_ind iadl_independent 
local ivars3 adl1 adl2 adl3 iadl1 iadl2 iadl3 adl_eat_help adl_bath_help adl_toil_help ///
adl_dres_help adl_ins_help adl_bed_help iadl_laun_help ///
iadl_shop_help iadl_meal_help iadl_bank_help iadl_meds_help ///
 reg_doc_seen sr_hosp_ind
gen lfunextwave=nwstatus==7
label var lfune "Lost to follow up prior to next wave"
local cvars1 age
local cvars2 persontime  income_adj
local ivars1 female white black hisp other_race married 
label var inchb "Incident Homebound Next Wave"
label var incnh "Incident Nursing Home Next Wave"
local ivars2 inccat1 inccat2 inccat3 inccat4 proxy  ///
medicaid medigap srh_fp adl_eat_help adl_bath_help adl_toil_help adl_dres_help ///
adl_ins_help adl_bed_help adl_impair iadl_impair ///
sr_cond_cat1 sr_cond_cat2 sr_cond_cat3 sr_ami_ever sr_stroke_ever sr_cancer_ever sr_hip_ever sr_heart_dis_ever ///
sr_htn_ever sr_ra_ever sr_osteoprs_ever sr_diabetes_ever sr_lung_dis_ever ///
prob_dementia dem_2_cat adl_diff_ind adl_independent inchbnextwave incnhnextwave ///
lfunextwave died_12 everhb evernh metro_ind northeast midwest south ind_replenish /*///
fin_strain creditdebt mealskip nopayhous nopayutil nopaymed medcreditdebt medpaynotcash finhlpfam any_asst ///
govtasst meals_wheels section8 
label var meals_wheels "Meals on Wheels"*/

foreach x in fin_strain creditdebt medcreditdebt medpaynotcash finhlpfam meals_wheels mealskip nopayhous nopayutil nopaymed any_asst {
replace `x'=0 if `x'==.
}


gen n=1

//drop if status!=1 & wave==1

label var educ_hs_ind "Education: HS+"
preserve
*log using homebound_income_cox_log.txt, text replace
drop if missing(homebound_cat) & !nhres
by spid, sort: egen lastwave=max(wave)
*keep if wave==1 
tab lastwave
*keep if inrange(homebound_cat,2,4)
gen time=lastwave
gen first_hb_or_nh=firsthb
replace first_hb=firstnh if firstnh<firsthb
replace time=first_hb_or_nh if !missing(first_hb_or_nh)

gen ind_helper_any=n_helpers>0
label var ind_helper_any "Any helpers"
gen dies=!missing(death_date)
gen ultimate=everhb==1
replace ultimate=2 if evernh==1 & !ultimate
replace ultimate=2 if firstnh<firsthb
replace ultimate=3 if !missing(death_date) & !ultimate

//drop if status!=1 & wave==1
stset time, failure(everhb) 
sts graph, by(income_quart)
graph save km_hb, replace
graph export km_hb.pdf, replace

forvalues i=1/6 {
local lab : label r1d2intvrage `i'
label define agecat `i' "`lab'", modify
}


foreach x in agecat income_quart {
levelsof `x', local(levels)
foreach l of local levels {
	gen `x'`l'=`x'==`l'
	local lab : label `x' `l'
	label var `x'`l' "`lab'"
}
}

forvalues i=2/a {
	local age `age' agecat`i'
}

forvalues i=1/3 {
	local inc `inc' income_quart`i'
}

label var income_quart1 "Income Quartile 1"
label var income_quart2 "Income Quartile 2"
label var income_quart3 "Income Quartile 3"


local cond sr_cond_cat2 sr_cond_cat3

local vars `age' `inc' /*fin_strain anydebt govtasst finhlpfam meals_wheels */ ///
female black hisp married ind_noone educ_hs_ind  ///
medicaid prob_dem `cond' adl_diff_ind srh_fp ///
ind_paid_helper metro_ind northeast midwest south ind_replenish 

svy, subpop(if wave==1 &  inrange(homebound_cat,2,4)): stcox `vars' //, nohr mgale(mg)
//stcoxkm, by(income_quart)
qui outreg, ctitles("" "Homebound") varlabels stats(e_b p)
stcox `vars' if wave==1 &  inrange(homebound_cat,2,4)
//sthplot, by(

stphplot, by(income_quart) adjust(`age'  female black hisp married  ind_noone  educ_hs_ind  ///
medicaid prob_dem `cond' adl_diff_ind srh_fp ind_paid_helper ///
metro_ind northeast midwest south )
stphplot, by(income_quart)

gen timenh=firstnh
replace timenh=lastwave if missing(firstnh)
stset timenh, failure(evernh)
sts graph, by(income_quart)
graph save km_nh, replace
graph export km_nh.pdf, replace


svy, subpop(if wave==1 &  inrange(homebound_cat,2,4)): stcox `vars'

qui outreg, merge ctitles("" "Nursing home") varlabels stats(e_b p)

gen either=everhb==1 | evernh==1
stset time, failure(either)
sts graph, by(income_quart)
graph save km_either, replace
graph export km_either.pdf, replace

local vars `age' `inc' /*fin_strain anydebt govtasst finhlpfam meals_wheels*/ ///
female black hisp married ind_noone educ_hs_ind  ///
medicaid prob_dem `cond' adl_diff_ind srh_fp ///
ind_paid_helper metro_ind northeast midwest south ind_replenish 

svy, subpop(if wave==1 &  inrange(homebound_cat,2,4)): stcox `vars'

qui outreg using homebound_income_cox_models_incl_2015_samp_weighted_orig, merge ///
ctitles("" "HB or NH") varlabels  ///
title(Cox proportional hazard models) stats(e_b p) replace ///
note("Among wave 1/5 non-homebound community dwelling SPs. Weights were divided by 2 to account for replenishment cohort added in")
capture drop p hb2 nh2 either2
predict p 
sum `vars' if missing(p)

drop if wave==1 & status!=1
stset wave, id(spid) failure(homebound)
sts list , cumhaz 

sort spid wave
by spid: gen hb2=inlist(nwstat,2,3) if nwstat<7
by spid: gen nh2=inlist(nwstat,4,5) if nwstat<7
gen either2=hb2==1 | nh2==1 if !missing(hb2)
svy, subpop(if wave==1 & inrange(homebound_cat,2,4)): logit hb2 `vars'
qui outreg, stats(e_b p) ctitles("" "Homebound") varlabels
svy, subpop(if wave==1 & inrange(homebound_cat,2,4)): logit nh2 `vars'
qui outreg, stats(e_b p) ctitles("" "Nursing Home") varlabels merge
svy, subpop(if wave==1 & inrange(homebound_cat,2,4)): logit either2 `vars'
qui outreg, stats(e_b p) ctitles("" "HB or NH") varlabels merge

outreg using homebound_income_logit_incl_2015_samp_weighted_orig, replay replace ///
title(Logistic regression on next wave status) ///
note("Among wave 1/5 non-homebound community dwelling SPs")

//mdesc `vars'
mkcorr `vars' if wave==1 &  inrange(homebound_cat,2,4), log(corr_wave2.xls) replace 


H="Mepoisson and Cox"
clear all
set more off
capture log close


cd "E:\nhats\data\projects\Homebound\logs"
use "E:\nhats\data\NHATS cleaned\sp_round_1_6.dta" if lml==0, clear

sort spid wave
by spid: egen lw=max(wave)
by spid: carryforward homebound_cat if lw!=wave, replace

//cpi inflation
gen income_adj=0
replace income_adj= (240.007/224.939)*aveincome if wave==1
replace income_adj= (240.007/229.594)*aveincome if wave==2
replace income_adj= (240.007/232.957)*aveincome if wave==3
replace income_adj= (240.007/236.736)*aveincome if wave==4
replace income_adj= (240.007/237.017)*aveincome if wave==5

//reweight, per Maureen's instructions
replace wave=wave-4 if year==2015
gen anfinw1=anfinw if wave==1
by spid: carryforward anfinw1, replace
//reset wave to 1/2 from 5/6 to run for 2015 cohort
gen ind_replenish=year==2015
label var ind_replenish "2015 Replenishment Cohort"


gen ind_noone=n_social==0
label var ind_noone "SR nobody in social network"
sort spid wave
*by spid: keep if prob_dem[1]==1
by spid: egen firstdem=min(cond(prob_dem==1,wave,.))
xtset spid wave
replace homebound_cat=. if nhres==1
gen homebound=homebound==1 if !missing(homebound) & !nhres
gen status=1 if sp_ivw==1 & !missing(homebound)
replace status=2 if homebound==1
replace status=3 if nhres==1

sort spid wave

by spid: gen start=1 if wave==1 & status!=.
by spid: carryforward start, replace

by spid: gen mstat=1 if status==.
by spid: carryforward mstat, replace

capture drop misw
//by spid: gen misw=1 if wave[_n-1]!=wave-1 & wave!=1 & ind_rep==0
by spid: gen misw=1 if wave[_n-1]!=wave-1 & wave!=1
capture drop misw1
gen misw1=misw
by spid: carryforward misw1, replace



drop if mstat==1
drop if misw1==1



gen hbw=wave if homebound==1
gen nhw=wave if nhres==1
by spid, sort: egen firsthb=min(hbw)
by spid, sort: egen firstnh=min(nhw)
gen everhb=!missing(firsthb)
gen evernh=!missing(firstnh)
label var everhb "Ever HB"
label var evernh "Ever NH"
*drop if firsthb==1 | missing(homebou)
by spid: gen hbnextwave=homebound[_n+1]
by spid: gen nhnextwave=nhres[_n+1]
gen inchbnextwave=firsthb==wave+1 & homebound==0
gen incnhnextwave=firstnh==wave+1 & nhres==0
replace adl_diff_ind=1 if adl_impair==1
label var adl_diff_ind "ADL difficulty or impairment"

gen wherelandgroup=1 if missing(firsthb) & missing(firstnh)
replace wherelandgroup=2 if !missing(firsthb) 
replace wherelandgroup=3 if !missing(firstnh) 
replace wherelandgroup=4 if !missing(firstnh) & firsthb<firstnh
label define wherelandgroup 1 "Never homebound or NH resident" 2 "Future HB" ///
3 "Future NH resident" 4 "Homebound, then NH"
label values wherelandgroup wherelandgroup

sort spid wave
by spid: drop if firstnh<wave
by spid: drop if firsthb<wave

/*sort spid wave
by spid: drop if nhres[_n-1]==1 
by spid: drop if homebound_cat[_n-1]==. & year<201`=wave'
di wave*/

gen nwstatus=.
forvalues i=1/5 {
replace nwstatus=r`=`i'+1'status if wave==`i'
}
replace nwstatus=r6status if year==2015 & wave==1
tab nwstat
tab r2status
replace nwstatus=1 if inlist(nwstatus,60,63) & !missing(hbne)
replace nwstatus=4 if inlist(nwstatus,61)
replace nwstatus=6 if inlist(nwstatus,62,86)
replace nwstatus=7 if nwstatus>7
replace nwstatus=6 if died_12==1 & nwstatus==7
label define nwstatus 1 "Community, not homebound" 2 "Homebound, not incident" ///
3 "Incident homebound" 4 "NH Resident, not incident" ///
5 "Incident NH" 6 "Died" 7 "LFU"
label values nwstatus nwstatus
replace nwstatus=2 if hbne==1
replace nwstatus=3 if inchb==1
replace nwstat=4 if nhne==1
replace nwstat=5 if incnhne==1
label var nwstat "Status next wave"
replace died_12=0 if nwstatus<=5
label var died_12 "Died prior to next wave"

gen northeast=region==1
gen midwest=region==2
gen south=region==3
gen west=region==4
label var northe "Northeast"
label var midw "Midwest"
label var south "South"
label var west "West"
gen sr_cond_cat=1 if sr_numcond<2
replace sr_cond_cat=2 if inrange(sr_numcond,2,4)
replace sr_cond_cat=3 if inrange(sr_numcond,5,15)
label define sr_cond_cat 1 "0-1 SR condition" 2 "2-4 SR conditions" 3 "5+ SR conditions"
label values sr_cond_cat sr_cond_cat
tab sr_cond_cat, gen(sr_cond_cat)
forvalues i=1/3 {
local lab: label sr_cond_cat `i'
label var sr_cond_cat`i' "`lab'"
}

gen anydebt=creditdebt==1 | medpayno==1 if !missing(creditdebt) | !missing(medpayn)
label var anydebt "Credit card or medical debt"

//gen status=1 if sp_ivw==1 & !missing(homebound)
//replace status=2 if homebound==1
//replace status=3 if nhres==1
replace status=4 if status==1 & (firsthb<wave | firstnh<wave)
label define status 1 "Community, not HB" 2 "Homebound" 3 "NH resident" 4 ///
"Community, previously HB or NH resident"
label values status status
label var status "Status this wave"


foreach x in nopayhous nopayutil nopaymed mealskip  {
replace `x'=. if `x'==2
}
replace mealskipnum=. if mealskipnum==5
gen fin_strain=.
replace fin_strain=0 if nopayhous==0 & nopayutil==0 & nopaymed==0 & mealskip==0 
replace fin_strain=1 if nopayhous==1 | nopayutil==1 | nopaymed==1 | mealskip==1
label var fin_strain "Financial Strain (Any nopay/mealskip)"

gen any_asst= govtasst
replace any_asst=1 if section8==1
label var any_asst "Reci. any Public Assist. (incl. Gov't assist./Section 8"



tab wave nwstat if wave<=4, row
tab nwsta status if wave==1 

/*
sum aveincome
forvalues i=1/4 {
gen inccat`i'=income_cat==`i'-1
local lab : label income_cat `=`i'-1'
label var inccat`i' "Income: `lab'"
}*/

sum income_adj
forvalues i=1/4 {
gen inccat`i'=income_quart==`i'
local lab : label income_quart `=`i''
label var inccat`i' "Income: `lab'"
}

gen prob_dementia=dem_3==1 if !missing(dem_3)
label var prob_dementia "Probable dementia"

by spid, sort: gen persontime=_N
replace persontime=firsthb if firsthb<persontime
replace persontime=firstnh if firstnh<persontime
label var persontime "Waves contributing information"

local cvars1 age
local cvars2 n_social_network persontime income_adj n_helpers n_paid_helpers tot_hrsmonth_help_i ///
tot_hrsmonth_paid_i 
local ivars1 female white black hisp other_race married livealone educ_hs_ind proxy ind_noone
local ivars2 ind_any_helpers ind_paid_helper top_quartile_help_helped ///
medicaid medigap srh_fp nhres ///
sr_ami_ever sr_stroke_ever sr_cancer_ever sr_hip_ever sr_heart_dis_ever ///
sr_htn_ever sr_ra_ever sr_osteoprs_ever sr_diabetes_ever sr_lung_dis_ever ///
prob_dementia dem_2_cat adl_diff_ind adl_independent iadl_diff_ind iadl_independent 
local ivars3 adl1 adl2 adl3 iadl1 iadl2 iadl3 adl_eat_help adl_bath_help adl_toil_help ///
adl_dres_help adl_ins_help adl_bed_help iadl_laun_help ///
iadl_shop_help iadl_meal_help iadl_bank_help iadl_meds_help ///
 reg_doc_seen sr_hosp_ind
gen lfunextwave=nwstatus==7
label var lfune "Lost to follow up prior to next wave"
local cvars1 age
local cvars2 persontime  income_adj
local ivars1 female white black hisp other_race married 
label var inchb "Incident Homebound Next Wave"
label var incnh "Incident Nursing Home Next Wave"
local ivars2 inccat1 inccat2 inccat3 inccat4 proxy  ///
medicaid medigap srh_fp adl_eat_help adl_bath_help adl_toil_help adl_dres_help ///
adl_ins_help adl_bed_help adl_impair iadl_impair ///
sr_cond_cat1 sr_cond_cat2 sr_cond_cat3 sr_ami_ever sr_stroke_ever sr_cancer_ever sr_hip_ever sr_heart_dis_ever ///
sr_htn_ever sr_ra_ever sr_osteoprs_ever sr_diabetes_ever sr_lung_dis_ever ///
prob_dementia dem_2_cat adl_diff_ind adl_independent inchbnextwave incnhnextwave ///
lfunextwave died_12 everhb evernh metro_ind northeast midwest south ind_replenish /*///
fin_strain creditdebt mealskip nopayhous nopayutil nopaymed medcreditdebt medpaynotcash finhlpfam any_asst ///
govtasst meals_wheels section8 
label var meals_wheels "Meals on Wheels"*/

foreach x in fin_strain creditdebt medcreditdebt medpaynotcash finhlpfam meals_wheels mealskip nopayhous nopayutil nopaymed any_asst {
replace `x'=0 if `x'==.
}


gen n=1

label var educ_hs_ind "Education: HS+"
preserve
*log using homebound_income_cox_log.txt, text replace
drop if missing(homebound_cat) & !nhres
by spid, sort: egen lastwave=max(wave)
tab lastwave
gen time=lastwave
gen first_hb_or_nh=firsthb
replace first_hb=firstnh if firstnh<firsthb
replace time=first_hb_or_nh if !missing(first_hb_or_nh)

gen ind_helper_any=n_helpers>0
label var ind_helper_any "Any helpers"
gen dies=!missing(death_date)
gen ultimate=everhb==1
replace ultimate=2 if evernh==1 & !ultimate
replace ultimate=2 if firstnh<firsthb
replace ultimate=3 if !missing(death_date) & !ultimate
stset time, failure(everhb) 
sts graph, by(income_quart)
graph save km_hb, replace
graph export km_hb.pdf, replace

forvalues i=1/6 {
local lab : label r1d2intvrage `i'
label define agecat `i' "`lab'", modify
}


foreach x in agecat income_quart {
levelsof `x', local(levels)
foreach l of local levels {
	gen `x'`l'=`x'==`l'
	local lab : label `x' `l'
	label var `x'`l' "`lab'"
}
}

forvalues i=2/6 {
	local age `age' agecat`i'
}

forvalues i=1/3 {
	local inc `inc' income_quart`i'
}

label var income_quart1 "Income Quartile 1"
label var income_quart2 "Income Quartile 2"
label var income_quart3 "Income Quartile 3"

preserve
gen d=1 if homebound==1 & wave==1
sort spid wave
by spid: carryforward d, replace 
drop if d==1

local cond sr_cond_cat2 sr_cond_cat3

local vars `age' `inc' ///
female black hisp married ind_noone educ_hs_ind  ///
medicaid prob_dem `cond' adl_diff_ind srh_fp ///
ind_paid_helper metro_ind northeast midwest south ind_replenish 

svyset 
svyset varunit [pw=anfinw1], strata(varstrat)
svy: mepoisson homebound ib6.wave if ind_re==0, irr
outreg using homebound_income_mepoisson, replace ctitles("" "Original cohort") varlabels  ///
title(Mixed Effects Poisson Model) stats(e_b p) note("Using wave 1 (original cohort weights)")

svy: mepoisson homebound ib6.wave `vars' if ind_re==0, irr
outreg using homebound_income_mepoisson, merge ctitles("" "Original cohort") varlabels  ///
title(Mixed Effects Poisson Model) stats(e_b p) note("Using wave 1 (original cohort weights)")

svy: mepoisson homebound ib6.wave, irr
outreg using homebound_income_mepoisson, merge ctitles("" "Original cohort w/Replenishment") varlabels  ///
title(Mixed Effects Poisson Model) stats(e_b p) note("Using wave 1 (original cohort weights)")

svy: mepoisson homebound ib6.wave `vars', irr
outreg using homebound_income_mepoisson, merge ctitles("" "Original w/Replenishment Cohort" ) varlabels  ///
title(Mixed Effects Poisson Model) stats(e_b p) replace note("Using wave 1 (original cohort weights)")
restore
/*
poisson homebound `vars' [pw=anfinw1], irr
mepoisson homebound `vars' [pw=anfinw1], irr
mepoisson homebound `vars' [pw=anfinw1] ||spid:, irr
mepoisson homebound `vars' [pw=anfinw1], irr
mepoisson homebound `vars' , irr
gllamm homebound `vars' , family(poisson) link(log) i(spid) eform 
xtpoisson homebound `vars' [pw=anfinw1] if ind_re==0 , irr 
mepoisson homebound `vars' i.wave [pw=anfinw1] if ind_re==0, irr 
mepoisson homebound i.wave [pw=anfinw1], irr 
mepoisson homebound `vars' i.wave [pw=anfinw1], irr 

mepoisson homebound female hisp i.wave [pw=anfinw1], irr 

xi: gllamm homebound female hisp i.wave , i(spid) weight(anfinw) family(poisson) link(log)
*/



svy, subpop(if wave==1 &  inrange(homebound_cat,2,4)): stcox `vars' //, nohr mgale(mg)
//stcoxkm, by(income_quart)
qui outreg, ctitles("" "Homebound") varlabels stats(e_b p)
stcox `vars' if wave==1 &  inrange(homebound_cat,2,4)
//sthplot, by(

stphplot, by(income_quart) adjust(`age'  female black hisp married  ind_noone  educ_hs_ind  ///
medicaid prob_dem `cond' adl_diff_ind srh_fp ind_paid_helper ///
metro_ind northeast midwest south fin_strain any_asst)
stphplot, by(income_quart)

gen timenh=firstnh
replace timenh=lastwave if missing(firstnh)
stset timenh, failure(evernh)
sts graph, by(income_quart)
graph save km_nh, replace
graph export km_nh.pdf, replace


svy, subpop(if wave==1 &  inrange(homebound_cat,2,4)): stcox `vars'

qui outreg, merge ctitles("" "Nursing home") varlabels stats(e_b p)

gen either=everhb==1 | evernh==1
stset time, failure(either)
sts graph, by(income_quart)
graph save km_either, replace
graph export km_either.pdf, replace

local vars `age' `inc' /*fin_strain anydebt govtasst finhlpfam meals_wheels*/ ///
female black hisp married ind_noone educ_hs_ind  ///
medicaid prob_dem `cond' adl_diff_ind srh_fp ///
ind_paid_helper metro_ind northeast midwest south ind_replenish 

svy, subpop(if wave==1 &  inrange(homebound_cat,2,4)): stcox `vars'

qui outreg using homebound_income_cox_models_incl_2015_samp_weighted_wave1, merge ///
ctitles("" "HB or NH") varlabels  ///
title(Cox proportional hazard models) stats(e_b p) replace ///
note("Among wave 2 non-homebound community dwelling SPs")
capture drop p hb2 nh2 either2
predict p 
sum `vars' if missing(p)

sort spid wave
by spid: gen hb2=inlist(nwstat,2,3) if nwstat<7
by spid: gen nh2=inlist(nwstat,4,5) if nwstat<7
gen either2=hb2==1 | nh2==1 if !missing(hb2)
svy, subpop(if wave==1 & inrange(homebound_cat,2,4)): logit hb2 `vars'
qui outreg, stats(e_b p) ctitles("" "Homebound") varlabels
svy, subpop(if wave==1 & inrange(homebound_cat,2,4)): logit nh2 `vars'
qui outreg, stats(e_b p) ctitles("" "Nursing Home") varlabels merge
svy, subpop(if wave==1 & inrange(homebound_cat,2,4)): logit either2 `vars'
qui outreg, stats(e_b p) ctitles("" "HB or NH") varlabels merge

outreg using homebound_income_logit_incl_2015_samp_weighted_wave1, replay replace ///
title(Logistic regression on next wave status) ///
note("Among wave 2/5 non-homebound community dwelling SPs")

//mdesc `vars'
mkcorr `vars' if wave==1 &  inrange(homebound_cat,2,4), log(corr_wave2.xls) replace 




H="***************************"


H="new plan--just follow wave 1; competing risk regression"


H="*****************************"


H="sample derivation"
Homebound and Income sample
-All wave 1
-community dwelling
-non-homebound




H="sample characteristics"
/* Homebound and Inome Final version 11/7/2018 -MH */

/* This tab is to create the Sample Characteristics tables:
PART 1


*/

clear all
set more off
capture log close


cd "E:\nhats\data\projects\Homebound\logs"
use "E:\nhats\data\NHATS cleaned\sp_round_1_6.dta" if lml==0, clear


//cpi inflation
gen income_adj=0
replace income_adj= (240.007/224.939)*aveincome if wave==1
replace income_adj= (240.007/229.594)*aveincome if wave==2
replace income_adj= (240.007/232.957)*aveincome if wave==3
replace income_adj= (240.007/236.736)*aveincome if wave==4
replace income_adj= (240.007/237.017)*aveincome if wave==5
replace income_adj=aveincome if wave==6

//replacing analytic weights to use only weights for origianl cohort. 
//only using original cohort (decision made based off of prior analysis with replenishment cohort. 
gen orig_weight=anfinw
replace anfinw=an2011wgt if (year==2011 & wave==5) | (year==2011 & wave==6)
drop if yearsample==2015

//For Creating National Estimates
replace anfinw=anfinw*5491440/4649902 if inrange(age,65,69) & female==0
replace anfinw=anfinw*4087340/4097017 if inrange(age,70,74) & female==0
replace anfinw=anfinw*3027820/3001146 if inrange(age,75,79) & female==0
replace anfinw=anfinw*2169060/2173979 if inrange(age,80,84) & female==0
replace anfinw=anfinw*1194880/1224397 if inrange(age,85,89) & female==0
replace anfinw=anfinw*524540/463619 if inrange(age,90,150) & female==0

replace anfinw=anfinw*6124980/5250466 if inrange(age,65,69) & female==1
replace anfinw=anfinw*4781940/4843444 if inrange(age,70,74) & female==1
replace anfinw=anfinw*3886940/3878674 if inrange(age,75,79) & female==1
replace anfinw=anfinw*3249940/3215654 if inrange(age,80,84) & female==1
replace anfinw=anfinw*2230480/2257969 if inrange(age,85,89) & female==1
replace anfinw=anfinw*1382160/1329677 if inrange(age,90,150) & female==1


//VARIABLE CREATION/CLEANUP
gen ind_noone=n_social==0
label var ind_noone "SR nobody in social network"

sort spid wave
by spid: egen firstdem=min(cond(prob_dem==1,wave,.))

xtset spid wave
replace homebound_cat=. if nhres==1
gen homebound=homebound==1 if !missing(homebound) & !nhres
gen status=1 if sp_ivw==1 & !missing(homebound)
replace status=2 if homebound==1
replace status=3 if nhres==1
label define status 1 "Community, not HB" 2 "Homebound" 3 "NH resident" 4 ///
"Community, previously HB or NH resident"
label values status status
label var status "Status this wave"


//checking to make sure everyone has a status at wave 1
sort spid wave
by spid: gen start=1 if wave==1 & status!=.
by spid: carryforward start, replace

//checking individuals who have a missing status. 
by spid: gen mstat=1 if status==.
by spid: carryforward mstat, replace

//checking individuals who have missing wave and flagging them.
capture drop misw
by spid: gen misw=1 if wave[_n-1]!=wave-1 & wave!=1
capture drop misw1
gen misw1=misw
by spid: carryforward misw1, replace

//Dropping individuals with a missing status or a missing wave.
drop if mstat==1 // 884 obs. dropped; 294 unique individuals.
drop if misw1==1 //didn't find any. 


sort spid wave
gen hbw=wave if homebound==1 //homebound at what wave
gen nhw=wave if nhres==1 // NH at what wave
by spid, sort: egen firsthb=min(hbw) //first homebound wave for an individual
by spid, sort: egen firstnh=min(nhw) //first NH wave for an individual
gen everhb=!missing(firsthb) //if an individual was ever homebound
gen evernh=!missing(firstnh) //if an individual was ever NH
label var everhb "Ever HB"
label var evernh "Ever NH"
*drop if firsthb==1 | missing(homebou)
sort spid wave
by spid: gen hbnextwave=homebound[_n+1] //flag next wave being homebound
by spid: gen nhnextwave=nhres[_n+1] //flag next wave being NH
gen inchbnextwave=firsthb==wave+1 & homebound==0 //flag incident homebound next wave
gen incnhnextwave=firstnh==wave+1 & nhres==0 //flag incident NH next wave
replace adl_diff_ind=1 if adl_impair==1
label var adl_diff_ind "ADL difficulty or impairment"

//Which group an individual ends up in
gen wherelandgroup=1 if missing(firsthb) & missing(firstnh)
replace wherelandgroup=2 if !missing(firsthb) 
replace wherelandgroup=3 if !missing(firstnh) 
replace wherelandgroup=4 if !missing(firstnh) & firsthb<firstnh
label define wherelandgroup 1 "Never homebound or NH resident" 2 "Future HB" ///
3 "Future NH resident" 4 "Homebound, then NH"
label values wherelandgroup wherelandgroup

//Dropping waves after first homebound/NH
sort spid wave
by spid: drop if firstnh<wave
by spid: drop if firsthb<wave

//ever* var needs to be changed because later waves are dropped. 
replace everhb=0 if firsthb>firstnh
replace evernh=0 if firsthb<firstnh 


//finding next wave status 
gen nwstatus=.
forvalues i=1/5 {
replace nwstatus=r`=`i'+1'status if wave==`i'
}
tab nwstat
tab r2status
replace nwstatus=1 if inlist(nwstatus,60,63) & !missing(hbne)
replace nwstatus=4 if inlist(nwstatus,61)
replace nwstatus=6 if inlist(nwstatus,62,86)
replace nwstatus=7 if nwstatus>7
replace nwstatus=6 if died_12==1 & nwstatus==7
label define nwstatus 1 "Community, not homebound" 2 "Homebound, not incident" ///
3 "Incident homebound" 4 "NH Resident, not incident" ///
5 "Incident NH" 6 "Died" 7 "LFU"
label values nwstatus nwstatus
replace nwstatus=2 if hbne==1
replace nwstatus=3 if inchb==1
replace nwstat=4 if nhne==1
replace nwstat=5 if incnhne==1
label var nwstat "Status next wave"
replace died_12=0 if nwstatus<=5
label var died_12 "Died prior to next wave"

//generating everdied, but since we don't follow people after wave 6 we don't 
// know if they died based off NHATS data.
sort spid wave
capture drop everdied
gen everdied=1 if nwstatus==6 & wave!=6 
gsort spid -wave
by spid: carryforward everdied, replace 

//same as above explanation
capture drop everlfu
gen everlfu=1 if nwstatus==7 & wave!=6
by spid: carryforward everlfu, replace 

sort spid wave
gen northeast=region==1
gen midwest=region==2
gen south=region==3
gen west=region==4
label var northe "Northeast"
label var midw "Midwest"
label var south "South"
label var west "West"
gen sr_cond_cat=1 if sr_numcond<2
replace sr_cond_cat=2 if inrange(sr_numcond,2,4)
replace sr_cond_cat=3 if inrange(sr_numcond,5,15)
label define sr_cond_cat 1 "0-1 SR condition" 2 "2-4 SR conditions" 3 "5+ SR conditions"
label values sr_cond_cat sr_cond_cat
tab sr_cond_cat, gen(sr_cond_cat)
forvalues i=1/3 {
local lab: label sr_cond_cat `i'
label var sr_cond_cat`i' "`lab'"
}


tab wave nwstat if wave<=4, row
tab nwsta status if wave==1 

//income quartile definiton
sum income_adj
forvalues i=1/4 {
gen inccat`i'=income_quart==`i'
local lab : label income_quart `=`i''
label var inccat`i' "Income Quartile: `lab'"
}
label define income_quart 1 "1st Income Quartile (Low)" 2 "2nd Income Quartile" ///
3 "3rd Income Quartile" 4 "4th Income Quartile (Highest)"
label values income_quart income_quart



gen prob_dementia=dem_3==1 if !missing(dem_3)
label var prob_dementia "Probable dementia"

by spid, sort: gen persontime=_N
replace persontime=firsthb if firsthb<persontime
replace persontime=firstnh if firstnh<persontime
label var persontime "Waves contributing information"
gen anydebt=creditdebt==1 | medpayno==1 if !missing(creditdebt) | !missing(medpayn)
label var anydebt "Credit card or medical debt"

//important to define 
sort spid wave
by spid: egen lw=max(wave)
label var lw "Last Wave in the Community"

local cvars1 age
local cvars2 n_social_network persontime income_adj n_helpers n_paid_helpers tot_hrsmonth_help_i ///
tot_hrsmonth_paid_i 
local ivars1 female white black hisp other_race married livealone educ_hs_ind proxy ind_noone
local ivars2 ind_any_helpers ind_paid_helper top_quartile_help_helped ///
medicaid medigap srh_fp nhres ///
sr_ami_ever sr_stroke_ever sr_cancer_ever sr_hip_ever sr_heart_dis_ever ///
sr_htn_ever sr_ra_ever sr_osteoprs_ever sr_diabetes_ever sr_lung_dis_ever ///
prob_dementia dem_2_cat adl_diff_ind adl_independent iadl_diff_ind iadl_independent 
local ivars3 adl1 adl2 adl3 iadl1 iadl2 iadl3 adl_eat_help adl_bath_help adl_toil_help ///
adl_dres_help adl_ins_help adl_bed_help iadl_laun_help ///
iadl_shop_help iadl_meal_help iadl_bank_help iadl_meds_help ///
 reg_doc_seen sr_hosp_ind
gen lfunextwave=nwstatus==7
label var lfune "Lost to follow up prior to next wave"
local cvars1 age
local cvars2 persontime  income_adj
local ivars1 female white black hisp other_race married 
label var inchb "Incident Homebound Next Wave"
label var incnh "Incident Nursing Home Next Wave"
local ivars2 inccat1 inccat2 inccat3 inccat4 proxy  ///
medicaid medigap srh_fp adl_eat_help adl_bath_help adl_toil_help adl_dres_help ///
adl_ins_help adl_bed_help adl_impair iadl_impair ///
sr_cond_cat1 sr_cond_cat2 sr_cond_cat3 sr_ami_ever sr_stroke_ever sr_cancer_ever sr_hip_ever sr_heart_dis_ever ///
sr_htn_ever sr_ra_ever sr_osteoprs_ever sr_diabetes_ever sr_lung_dis_ever ///
prob_dementia dem_2_cat adl_diff_ind adl_independent inchbnextwave incnhnextwave ///
lfunextwave died_12 everhb evernh metro_ind northeast midwest south west /*///
fin_strain mealskip nopayhous nopayutil nopaymed anydebt creditdebt medpaynotcash finhlpfam meals_wheels govtasst*/

label var meals_wheels "Meals on Wheels"


//TABLE CREATION

gen n=1

preserve

mat tab=J(6,5,.)
local r=2

sum n if status==1 & wave==1 
mat tab[1,1]=r(N)
forvalues w=1/5{
sum n if nwstatus==1 & status==1 & wave==`w'
mat tab[`r',1]=r(N)
local r=`r'+1
}

local c=2
foreach i in 3 5 6 7{ 
local r=2
forvalues w=1/5{
sum n if nwstatus==`i' & status==1 & wave==`w' 
mat tab[`r',`c']=r(N)
local r=`r'+1
}
local c=`c'+1
}


mat rownames tab= "Wave 1" "Wave 2" "Wave 3" "Wave 4" "Wave 5" "Wave 6"
mat colnames tab="Community" "Incident Homebound" "Incident Nursing Home" "Died" "Lost to Follow-up"

mat list tab

frmttable using sample_derivation_new.rtf, replace statmat(tab) title("Status by Wave for Original Cohort") ///
sdec(0) varlabels note("2,656 people remain in the community after the last wave" ///
"When status is missing that wave and subsequent waves are removed" )

//creating community dwelling in wave 1 category. 
gen com=1 if status==1
replace com=0 if status!=1

mat tab4=J(6,5,.)
local r=2

svy, subpop(if wave==1 & com==1): tab nwstatus
mat tab4[1,1]=e(N_subpop)

forvalues i=1/5{
svy, subpop(if wave==`i' & com==1): tab nwstatus 
//sum com [aw=anfinw] if nwstatus==1 & wave==`i'
mat tab4[`r',1]=el(e(b),1,1)*e(N_subpop)
local r=`r'+1
}

local c=2
foreach i in 3 5 6 7{ 
local r=2
forvalues w=1/5{
svy, subpop(if wave==`w' & com==1): tab nwstatus 
mat tab4[`r',`c']=el(e(b),1,`i')*e(N_subpop)
local r=`r'+1
}
local c=`c'+1
}
mat list tab4
mat rownames tab4= "Wave 1" "Wave 2" "Wave 3" "Wave 4" "Wave 5" "Wave 6"
mat colnames tab4="Community" "Incident Homebound" "Incident Nursing Home" "Died" "Lost to Follow-up"
mat list tab4
frmttable using sample_derivation_new.rtf, addtable statmat(tab4) title("Weighted Percentages by Wave for Original Cohort") ///
sdec(2) varlabels note("2,656 people remain in the community after the last wave" ///
"When status is missing that wave and subsequent waves are removed" )


//Table for wave 1 characteristics and following them throughout the rounds. 
capture drop group*
gen group1=0
replace group1=1 if everhb==0 & evernh==0
gen group2=0
replace group2=1 if everhb==1 & evernh==0
gen group3=0
replace group3=1 if everhb==0 & evernh==1
gen group4=0
replace group4=1 if everdied==1 & everhb==0 & evernh==0 
gen group5=0
replace group5=1 if everlfu==1 & everhb==0 & evernh==0

keep if status==1 & wave==1
local rn : word count 1 `cvars1' `cvars2' `ivars1' `ivars2' `coutcomes' `coutcomes' `ioutcomes' 1 1
di `rn'
mat tab1=J(`rn',5,.)
mat stars=J(`rn',5,0)
local r=1
local c=1
foreach i in 1 2 3 4 5{
	foreach round in 1 2 {
		foreach x of local cvars`round' {
			qui sum `x' if group`i'==1 & wave==1  [aw=anfin]
			mat tab1[`r',`c']=r(mean)
			if inlist("`i'","2") {
				svy: reg `x' group`i' if group`i'==1 | group1==1
				test group`i'
				mat stars[`r',`c']=(r(p)<.01) + (r(p)<.05) 
}
			local r=`r'+1
}
		foreach x of local ivars`round' {
			qui sum `x' if group`i'==1 & wave==1  [aw=anfin]
			mat tab1[`r',`c']=r(mean)*100
			if inlist("`i'","2") {
				svy, subpop(if status==1 & wave==1  & group`i'==1 | group1==1): tab `x' group`i' 
				mat stars[`r',`c']=(e(p_Pear)<.01) + (e(p_Pear)<.05)
}
			local r=`r'+1
}
}
	local r=`r'+1

	
	foreach x of local coutcomes {
		qui sum `x' if group`i'==1,d
		mat tab1[`r',`c']=r(mean)
		if inlist("`i'","2") {
				svy: reg `x' group`i' if group`i'==1 | group1==1
				test group`i' group1
			mat stars[`r',`c']=(r(p)<.01) + (r(p)<.05)
}
		local r=`r'+1
*		if "`x'"=="tot_paid_by_mc_12m_wi_n0" {
			qui sum `x' if group`i'==1,d
			mat tab1[`r',`c']=r(p50)
			local r=`r'+1
*}
}
	foreach x of local ioutcomes {
		qui sum `x' if group`i'==1
		mat tab1[`r',`c']=r(mean)*100
			if inlist("`i'","2") {
				svy, subpop(if status==1 & wave==1  & group`i'==1 | group1==1): tab `x' group`i' 
				mat stars[`r',`c']=(e(p_Pear)<.01) + (e(p_Pear)<.05)
}
			local r=`r'+1
}
	qui sum n if group`i'==1 & wave==1  [aw=anfin]
	
	mat tab1[`r',`c']=r(N)
	mat tab1[`r'+1,`c']=r(sum)
	local r=1
	local c=`c'+1
}

foreach x in `coutcomes' {
local rnames `rnames' "`x'" "Median"
}
mat list tab1
mat list stars

mat rownames tab1=`cvars1' `ivars1' `cvars2' `ivars2' "_" N "Estimate"

frmttable using sample_derivation_new.rtf, addtable statmat(tab1) ///
 title("Sample Characteristics by final status") ///
 ctitles("" "Community" "HB Ever, Only" "NH Ever, Only" "Died Ever" "LFU") ///
 sdec(2) annotate(stars) asymbol(*,**) ///
 varlabels note("Waves 1 NHATS community-dwelling sample" "When status is missing that wave and subsequent waves are removed" ///
 "Highest Income: Income Quartile 4" "Individuals exit sample upon incident homebound/nursing home status, LFU, or after wave 6")
 
 restore
 
 preserve
 
 forvalues i=1/7 {
gen group`i'=nwstatus==`i'
}
 
 keep if status==1
//drop if wave==1 & status!=1
local rn : word count 1 `cvars1' `cvars2' `ivars1' `ivars2' `coutcomes' `coutcomes' `ioutcomes' 1 1
di `rn'
mat tab1=J(`rn',5,.)
mat stars=J(`rn',5,0)
local r=1
local c=1
foreach i in 1 3 5 6 7 {
	foreach round in 1 2 {
		foreach x of local cvars`round' {
			qui sum `x' if group`i'==1 & wave==1  [aw=anfin]
			mat tab1[`r',`c']=r(mean)
			if inlist("`i'","3","5","6","7") {
				svy: reg `x' group`i' if group`i'==1 | group1==1
				test group`i'
				mat stars[`r',`c']=(r(p)<.01) + (r(p)<.05) 
}
			local r=`r'+1
}
		foreach x of local ivars`round' {
			qui sum `x' if group`i'==1 & wave==1  [aw=anfin]
			mat tab1[`r',`c']=r(mean)*100
			if inlist("`i'","3","5","6","7") {
				svy, subpop(if status==1 & wave==1  & group`i'==1 | group1==1): tab `x' group`i' 
				mat stars[`r',`c']=(e(p_Pear)<.01) + (e(p_Pear)<.05)
}
			local r=`r'+1
}
}
	local r=`r'+1

	
	foreach x of local coutcomes {
		qui sum `x' if group`i'==1,d
		mat tab1[`r',`c']=r(mean)
		if inlist("`i'","3","5","6","7") {
				svy: reg `x' group`i' if group`i'==1 | group1==1
				test group`i'
			mat stars[`r',`c']=(r(p)<.01) + (r(p)<.05)
}
		local r=`r'+1
*		if "`x'"=="tot_paid_by_mc_12m_wi_n0" {
			qui sum `x' if group`i'==1,d
			mat tab1[`r',`c']=r(p50)
			local r=`r'+1
*}
}
	foreach x of local ioutcomes {
		qui sum `x' if group`i'==1
		mat tab1[`r',`c']=r(mean)*100
			if inlist("`i'","3","5","6","7") {
				svy, subpop(if status==1 & wave==1  & group`i'==1 | group1==1): tab `x' group`i' 
				mat stars[`r',`c']=(e(p_Pear)<.01) + (e(p_Pear)<.05)
}
			local r=`r'+1
}
	qui sum n if group`i'==1 & wave==1  [aw=anfin]
	
	mat tab1[`r',`c']=r(N)
	mat tab1[`r'+1,`c']=r(sum)
	local r=1
	local c=`c'+1
}

foreach x in `coutcomes' {
local rnames `rnames' "`x'" "Median"
}

mat rownames tab1=`cvars1' `ivars1' `cvars2' `ivars2' "_" N "Estimate"

frmttable using sample_derivation_new.rtf, addtable replace statmat(tab1) ///
 title("Sample Characteristics by next wave status") ///
 ctitles("" "Community"  "Incident HB"  "Incident NH" ///
 "Died" "LFU") ///
 sdec(2) annotate(stars) asymbol(*,**) ///
 varlabels note("Waves 1 NHATS community-dwelling sample, by next-wave status")
 
restore

preserve

 capture drop group*


local cvars1 age
local cvars2 n_social_network persontime income_adj n_helpers n_paid_helpers tot_hrsmonth_help_i ///
tot_hrsmonth_paid_i 
local ivars1 female white black hisp other_race married livealone educ_hs_ind proxy ind_noone
local ivars2 ind_any_helpers ind_paid_helper top_quartile_help_helped ///
medicaid medigap srh_fp nhres ///
sr_ami_ever sr_stroke_ever sr_cancer_ever sr_hip_ever sr_heart_dis_ever ///
sr_htn_ever sr_ra_ever sr_osteoprs_ever sr_diabetes_ever sr_lung_dis_ever ///
prob_dementia dem_2_cat adl_diff_ind adl_independent iadl_diff_ind iadl_independent 
local ivars3 adl1 adl2 adl3 iadl1 iadl2 iadl3 adl_eat_help adl_bath_help adl_toil_help ///
adl_dres_help adl_ins_help adl_bed_help iadl_laun_help ///
iadl_shop_help iadl_meal_help iadl_bank_help iadl_meds_help ///
 reg_doc_seen sr_hosp_ind
label var lfune "Lost to follow up prior to next wave"
local cvars1 age
local cvars2 persontime  income_adj
local ivars1 female white black hisp other_race married 
label var inchb "Incident Homebound Next Wave"
label var incnh "Incident Nursing Home Next Wave"
local ivars2 inccat1 inccat2 inccat3 inccat4 proxy  ///
medicaid medigap srh_fp adl_eat_help adl_bath_help adl_toil_help adl_dres_help ///
adl_ins_help adl_bed_help adl_impair iadl_impair ///
sr_cond_cat1 sr_cond_cat2 sr_cond_cat3 sr_ami_ever sr_stroke_ever sr_cancer_ever sr_hip_ever sr_heart_dis_ever ///
sr_htn_ever sr_ra_ever sr_osteoprs_ever sr_diabetes_ever sr_lung_dis_ever ///
prob_dementia dem_2_cat adl_diff_ind adl_independent inchbnextwave incnhnextwave ///
lfunextwave died_12 everhb evernh metro_ind northeast midwest south west


 keep if status==1 & wave==1
//keep if status==1
local rn : word count 1 `cvars1' `cvars2' `ivars1' `ivars2' `coutcomes' `coutcomes' `ioutcomes' 1 1
di `rn'
mat tab1=J(`rn',4,.)
mat stars=J(`rn',4,0)
local r=1
local c=1

capture drop group*
forvalues i=1/4 {
gen group`i'=inccat`i'
local lab`i' : var label inccat`i'
}

forvalues i=1/4 {
	foreach round in 1 2 {
		foreach x of local cvars`round' {
			qui sum `x' if group`i'==1 & wave==1  [aw=anfin]
			mat tab1[`r',`c']=r(mean)
			if inlist("`i'", "1" ,"2","3") {
				qui ttest `x' if group`i'==1 | group4==1, by(group`i')
				mat stars[`r',`c']=(r(p)<.01) + (r(p)<.05)
}
			local r=`r'+1
}
		foreach x of local ivars`round' {
			qui sum `x' if group`i'==1 & wave==1  [aw=anfin]
			mat tab1[`r',`c']=r(mean)*100
			if inlist( "`i'", "1" ,"2","3") {
				svy, subpop(if status==1 & wave==1  & group`i'==1 | group4==1): tab `x' group`i' 
				mat stars[`r',`c']=(e(p_Pear)<.01) + (e(p_Pear)<.05)
}
			local r=`r'+1
}
}
	local r=`r'+1

	
	foreach x of local coutcomes {
		qui sum `x' if group`i'==1,d
		mat tab1[`r',`c']=r(mean)
		if inlist("`i'", "1" ,"2","3") {
			qui ttest `x' if group`i'==1 | group4==1, by(group`i')
			mat stars[`r',`c']=(r(p)<.01) + (r(p)<.05)
}
		local r=`r'+1
*		if "`x'"=="tot_paid_by_mc_12m_wi_n0" {
			qui sum `x' if group`i'==1,d
			mat tab1[`r',`c']=r(p50)
			local r=`r'+1
*}
}
	foreach x of local ioutcomes {
		qui sum `x' if group`i'==1
		mat tab1[`r',`c']=r(mean)*100
			if inlist("`i'", "1" ,"2","3") {
				svy, subpop(if status==1 & wave==1  &  group`i'==1 | group4==1): tab `x' group`i' 
				mat stars[`r',`c']=(e(p_Pear)<.01) + (e(p_Pear)<.05)
}
			local r=`r'+1
}
	qui sum n if group`i'==1 & wave==1 [aw=anfin]
	
	mat tab1[`r',`c']=r(N)
	mat tab1[`r'+1,`c']=r(sum)
	local r=1
	local c=`c'+1
}

foreach x in `coutcomes' {
local rnames `rnames' "`x'" "Median"
}

mat rownames tab1=`cvars1' `ivars1' `cvars2' `ivars2' "_" N "Estimate"


frmttable using sample_derivation_new.rtf, addtable replace statmat(tab1) ///
 title("Sample Characteristics by Income Quartile") ///
 ctitles("" "Income Quartile 1"  "Income Quartile 2"  "Income Quartile 3" ///
 "Income Quartile 4") ///
 sdec(2) annotate(stars) asymbol(*,**) ///
 varlabels note("Waves 1 NHATS community-dwelling sample, by next-wave status")


H="by-wave incident homebound"
/* Homebound and Inome Final version 11/7/2018 -MH */

/* This tab is to create the annual incidence table:
PART 2


*/

clear all
set more off
capture log close


cd "E:\nhats\data\projects\Homebound\logs"
use "E:\nhats\data\NHATS cleaned\sp_round_1_6.dta" if lml==0, clear


//cpi inflation
gen income_adj=0
replace income_adj= (240.007/224.939)*aveincome if wave==1
replace income_adj= (240.007/229.594)*aveincome if wave==2
replace income_adj= (240.007/232.957)*aveincome if wave==3
replace income_adj= (240.007/236.736)*aveincome if wave==4
replace income_adj= (240.007/237.017)*aveincome if wave==5
replace income_adj=aveincome if wave==6

//replacing analytic weights to use only weights for origianl cohort. 
//only using original cohort (decision made based off of prior analysis with replenishment cohort. 
gen orig_weight=anfinw
replace anfinw=an2011wgt if (year==2011 & wave==5) | (year==2011 & wave==6)
drop if yearsample==2015


//For Creating National Estimates
replace anfinw=anfinw*5491440/4649902 if inrange(age,65,69) & female==0
replace anfinw=anfinw*4087340/4097017 if inrange(age,70,74) & female==0
replace anfinw=anfinw*3027820/3001146 if inrange(age,75,79) & female==0
replace anfinw=anfinw*2169060/2173979 if inrange(age,80,84) & female==0
replace anfinw=anfinw*1194880/1224397 if inrange(age,85,89) & female==0
replace anfinw=anfinw*524540/463619 if inrange(age,90,150) & female==0

replace anfinw=anfinw*6124980/5250466 if inrange(age,65,69) & female==1
replace anfinw=anfinw*4781940/4843444 if inrange(age,70,74) & female==1
replace anfinw=anfinw*3886940/3878674 if inrange(age,75,79) & female==1
replace anfinw=anfinw*3249940/3215654 if inrange(age,80,84) & female==1
replace anfinw=anfinw*2230480/2257969 if inrange(age,85,89) & female==1
replace anfinw=anfinw*1382160/1329677 if inrange(age,90,150) & female==1


//VARIABLE CREATION/CLEANUP
gen ind_noone=n_social==0
label var ind_noone "SR nobody in social network"

sort spid wave
by spid: egen firstdem=min(cond(prob_dem==1,wave,.))

xtset spid wave
replace homebound_cat=. if nhres==1
gen homebound=homebound==1 if !missing(homebound) & !nhres
gen status=1 if sp_ivw==1 & !missing(homebound)
replace status=2 if homebound==1
replace status=3 if nhres==1
label define status 1 "Community, not HB" 2 "Homebound" 3 "NH resident" 4 ///
"Community, previously HB or NH resident"
label values status status
label var status "Status this wave"


//checking to make sure everyone has a status at wave 1
sort spid wave
by spid: gen start=1 if wave==1 & status!=.
by spid: carryforward start, replace

//checking individuals who have a missing status. 
by spid: gen mstat=1 if status==.
by spid: carryforward mstat, replace

//checking individuals who have missing wave and flagging them.
capture drop misw
by spid: gen misw=1 if wave[_n-1]!=wave-1 & wave!=1
capture drop misw1
gen misw1=misw
by spid: carryforward misw1, replace

//Dropping individuals with a missing status or a missing wave.
drop if mstat==1 // 884 obs. dropped; 294 unique individuals.
drop if misw1==1 //didn't find any. 


sort spid wave
gen hbw=wave if homebound==1 //homebound at what wave
gen nhw=wave if nhres==1 // NH at what wave
by spid, sort: egen firsthb=min(hbw) //first homebound wave for an individual
by spid, sort: egen firstnh=min(nhw) //first NH wave for an individual
gen everhb=!missing(firsthb) //if an individual was ever homebound
gen evernh=!missing(firstnh) //if an individual was ever NH
label var everhb "Ever HB"
label var evernh "Ever NH"
*drop if firsthb==1 | missing(homebou)
sort spid wave
by spid: gen hbnextwave=homebound[_n+1] //flag next wave being homebound
by spid: gen nhnextwave=nhres[_n+1] //flag next wave being NH
gen inchbnextwave=firsthb==wave+1 & homebound==0 //flag incident homebound next wave
gen incnhnextwave=firstnh==wave+1 & nhres==0 //flag incident NH next wave
replace adl_diff_ind=1 if adl_impair==1
label var adl_diff_ind "ADL difficulty or impairment"

//Which group an individual ends up in
gen wherelandgroup=1 if missing(firsthb) & missing(firstnh)
replace wherelandgroup=2 if !missing(firsthb) 
replace wherelandgroup=3 if !missing(firstnh) 
replace wherelandgroup=4 if !missing(firstnh) & firsthb<firstnh
label define wherelandgroup 1 "Never homebound or NH resident" 2 "Future HB" ///
3 "Future NH resident" 4 "Homebound, then NH"
label values wherelandgroup wherelandgroup

//Dropping waves after first homebound/NH
sort spid wave
by spid: drop if firstnh<wave
by spid: drop if firsthb<wave

//ever* var needs to be changed because later waves are dropped. 
replace everhb=0 if firsthb>firstnh
replace evernh=0 if firsthb<firstnh 


//finding next wave status 
gen nwstatus=.
forvalues i=1/5 {
replace nwstatus=r`=`i'+1'status if wave==`i'
}
tab nwstat
tab r2status
replace nwstatus=1 if inlist(nwstatus,60,63) & !missing(hbne)
replace nwstatus=4 if inlist(nwstatus,61)
replace nwstatus=6 if inlist(nwstatus,62,86)
replace nwstatus=7 if nwstatus>7
replace nwstatus=6 if died_12==1 & nwstatus==7
label define nwstatus 1 "Community, not homebound" 2 "Homebound, not incident" ///
3 "Incident homebound" 4 "NH Resident, not incident" ///
5 "Incident NH" 6 "Died" 7 "LFU"
label values nwstatus nwstatus
replace nwstatus=2 if hbne==1
replace nwstatus=3 if inchb==1
replace nwstat=4 if nhne==1
replace nwstat=5 if incnhne==1
label var nwstat "Status next wave"
replace died_12=0 if nwstatus<=5
label var died_12 "Died prior to next wave"

//generating everdied, but since we don't follow people after wave 6 we don't 
// know if they died based off NHATS data.
sort spid wave
capture drop everdied
gen everdied=1 if nwstatus==6 & wave!=6 
gsort spid -wave
by spid: carryforward everdied, replace 

//same as above explanation
capture drop everlfu
gen everlfu=1 if nwstatus==7 & wave!=6
by spid: carryforward everlfu, replace 

sort spid wave
gen northeast=region==1
gen midwest=region==2
gen south=region==3
gen west=region==4
label var northe "Northeast"
label var midw "Midwest"
label var south "South"
label var west "West"
gen sr_cond_cat=1 if sr_numcond<2
replace sr_cond_cat=2 if inrange(sr_numcond,2,4)
replace sr_cond_cat=3 if inrange(sr_numcond,5,15)
label define sr_cond_cat 1 "0-1 SR condition" 2 "2-4 SR conditions" 3 "5+ SR conditions"
label values sr_cond_cat sr_cond_cat
tab sr_cond_cat, gen(sr_cond_cat)
forvalues i=1/3 {
local lab: label sr_cond_cat `i'
label var sr_cond_cat`i' "`lab'"
}


tab wave nwstat if wave<=4, row
tab nwsta status if wave==1 

//income quartile definiton
sum income_adj
forvalues i=1/4 {
gen inccat`i'=income_quart==`i'
local lab : label income_quart `=`i''
label var inccat`i' "Income Quartile: `lab'"
}
label define income_quart 1 "1st Income Quartile (Low)" 2 "2nd Income Quartile" ///
3 "3rd Income Quartile" 4 "4th Income Quartile (Highest)"
label values income_quart income_quart

//Probable Dementia 
gen prob_dementia=dem_3==1 if !missing(dem_3)
label var prob_dementia "Probable dementia"

by spid, sort: gen persontime=_N
replace persontime=firsthb if firsthb<persontime
replace persontime=firstnh if firstnh<persontime
label var persontime "Waves contributing information"
gen anydebt=creditdebt==1 | medpayno==1 if !missing(creditdebt) | !missing(medpayn)
label var anydebt "Credit card or medical debt"

//important to define 
sort spid wave
by spid: egen lw=max(wave)
label var lw "Last Wave in the Community"



//ANALYSIS
//creating Incidence Table using stptime command for survival analysis 
//with lw being the time and homebound the failure. 

capture drop fail
 gen fail=0
 replace fail=1 if everhb==1
 replace fail=2 if evernh==1
 replace fail=3 if everdied==1 & fail!=1 & fail!=2
preserve 
keep if wave==1 & status==1

bys lw: sum everhb [aw=anfinw] 
 //rename wave wave1
 //rename lw wave
 rename anfinwgt anfinwgt1
 rename an2011wgt an2011wgt1
 
 merge 1:1 spid wave using "E:\nhats\data\NHATS cleaned\sp_round_1_6.dta",  keepusing(anfinwgt an2011wgt) keep(matched)
// gen weight=anfinwgt
 //replace anfinwgt=an2011wgt if wave==5 | wave==6
 
  stset lw [pw=anfinwgt], failure(fail==1) id(spid)
 stptime, at(0(1)6) output(stp, replace)
  stset lw, failure(fail==1) id(spid)
 stptime, at(0(1)6) output(stp1, replace)
 restore
 preserve
 
 use stp.dta, clear
mat tab=J(5,6,.)
local r=1
local c=1
 forvalues i=1/5{
 mat tab[`r',`c']=`i'
 sum _D if _group==`i'
 mat tab[`r',`c'+1]=r(mean)
 sum _Rate if _group==`i'
 mat tab[`r',`c'+3]=r(mean)
  sum _Lower if _group==`i'
 mat tab[`r',`c'+4]=r(mean)
  sum _Upper if _group==`i'
 mat tab[`r',`c'+5]=r(mean)
 local r=`r'+1
 }
 
  use stp1.dta, clear
 local r=1
  forvalues i=1/5{
 sum _D if _group==`i'
 mat tab[`r',`c'+2]=r(mean)

 local r=`r'+1
 }
  
  mat colnames tab="Wave" "Weighted Failures" "Failures" "Rate" "Lower 95% CI" "Upper 95% CI"
  mat list tab 
  
  frmttable using incidence_rate.doc, replace statmat(tab) sdec(0,0,0,4,4,4\ ///
  0,0,0,4,4,4\ 0,0,0,4,4,4\ 0,0,0,4,4,4\ 0,0,0,4,4,4) title("Incidence table for Homebound") ///
  note("Survival Analysis using Incident Homebound as failure") 
  
  restore

keep if inrange(homebound_cat,2,4)
 tab wave
 gen n=1
 mat tab=J(5,6,.)
 local r=1
 
 forvalues i=1/5 {
	qui sum n if wave==`i' [aw=anfinw]
	mat tab[`r',2]=r(N)
	mat tab[`r',3]=r(sum_w)
	mat tab[`r',4]=0
	mat tab[`r',5]=0
	mat tab[`r',6]=0
	local r=`r'+1
}

local r=1
forvalues i=1/5{
	sum n if wave==`i' & nwstat==3
 mat tab[`r',4]=r(N)	
	svy, subpop(if wave==`i' & nwstat!=7): tab nwstat
	mat results=e(b)
	mat tab[`r',5]=results[1,2]*tab[`r',3]
	mat tab[`r',6]=results[1,2]*100
	local r=`r'+1
}


log using annual_homebound_incidence.txt, text replace
frmttable, statmat(tab) store(tab1) ctitles("Time period" "" "Community dwelling sample" ///
"Community dwelling estimate at start" "Incident homebound sample" "Incident HB estimate" ///
"Incident HB %") sdec(0,0,0,0,0,2,3) ///
note("Community dwelling sample includes LFU prior to next wave" ///
"Incident HB % is percentage of prior wave, excluding LFU from denominator" ///
"HB estimate is HB %*nat'l estimate at prior wave (including LFU)") ///
rtitles("1-2"\"2-3"\"3-4"\"4-5"\"5-6")

svy, subpop(if nwstat!=7): tab wave nwstatus, row ci
log close







H="competing risk regression"
/* Homebound and Inome Final version 11/7/2018 -MH */

/* This tab is to create the annual incidence table:
PART 3


*/

clear all
set more off
capture log close


cd "E:\nhats\data\projects\Homebound\logs"
use "E:\nhats\data\NHATS cleaned\sp_round_1_6.dta" if lml==0, clear


//cpi inflation
gen income_adj=0
replace income_adj= (240.007/224.939)*aveincome if wave==1
replace income_adj= (240.007/229.594)*aveincome if wave==2
replace income_adj= (240.007/232.957)*aveincome if wave==3
replace income_adj= (240.007/236.736)*aveincome if wave==4
replace income_adj= (240.007/237.017)*aveincome if wave==5
replace income_adj=aveincome if wave==6

//replacing analytic weights to use only weights for origianl cohort. 
//only using original cohort (decision made based off of prior analysis with replenishment cohort. 
gen orig_weight=anfinw
replace anfinw=an2011wgt if (year==2011 & wave==5) | (year==2011 & wave==6)
drop if yearsample==2015

//For Creating National Estimates
replace anfinw=anfinw*5491440/4649902 if inrange(age,65,69) & female==0
replace anfinw=anfinw*4087340/4097017 if inrange(age,70,74) & female==0
replace anfinw=anfinw*3027820/3001146 if inrange(age,75,79) & female==0
replace anfinw=anfinw*2169060/2173979 if inrange(age,80,84) & female==0
replace anfinw=anfinw*1194880/1224397 if inrange(age,85,89) & female==0
replace anfinw=anfinw*524540/463619 if inrange(age,90,150) & female==0

replace anfinw=anfinw*6124980/5250466 if inrange(age,65,69) & female==1
replace anfinw=anfinw*4781940/4843444 if inrange(age,70,74) & female==1
replace anfinw=anfinw*3886940/3878674 if inrange(age,75,79) & female==1
replace anfinw=anfinw*3249940/3215654 if inrange(age,80,84) & female==1
replace anfinw=anfinw*2230480/2257969 if inrange(age,85,89) & female==1
replace anfinw=anfinw*1382160/1329677 if inrange(age,90,150) & female==1

//VARIABLE CREATION/CLEANUP
gen ind_noone=n_social==0
label var ind_noone "SR nobody in social network"

sort spid wave
by spid: egen firstdem=min(cond(prob_dem==1,wave,.))

xtset spid wave
replace homebound_cat=. if nhres==1
gen homebound=homebound==1 if !missing(homebound) & !nhres
gen status=1 if sp_ivw==1 & !missing(homebound)
replace status=2 if homebound==1
replace status=3 if nhres==1
label define status 1 "Community, not HB" 2 "Homebound" 3 "NH resident" 4 ///
"Community, previously HB or NH resident"
label values status status
label var status "Status this wave"


//checking to make sure everyone has a status at wave 1
sort spid wave
by spid: gen start=1 if wave==1 & status!=.
by spid: carryforward start, replace

//checking individuals who have a missing status. 
by spid: gen mstat=1 if status==.
by spid: carryforward mstat, replace

//checking individuals who have missing wave and flagging them.
capture drop misw
by spid: gen misw=1 if wave[_n-1]!=wave-1 & wave!=1
capture drop misw1
gen misw1=misw
by spid: carryforward misw1, replace

//Dropping individuals with a missing status or a missing wave.
drop if mstat==1 // 884 obs. dropped; 294 unique individuals.
drop if misw1==1 //didn't find any. 


sort spid wave
gen hbw=wave if homebound==1 //homebound at what wave
gen nhw=wave if nhres==1 // NH at what wave
by spid, sort: egen firsthb=min(hbw) //first homebound wave for an individual
by spid, sort: egen firstnh=min(nhw) //first NH wave for an individual
gen everhb=!missing(firsthb) //if an individual was ever homebound
gen evernh=!missing(firstnh) //if an individual was ever NH
label var everhb "Ever HB"
label var evernh "Ever NH"
*drop if firsthb==1 | missing(homebou)
sort spid wave
by spid: gen hbnextwave=homebound[_n+1] //flag next wave being homebound
by spid: gen nhnextwave=nhres[_n+1] //flag next wave being NH
gen inchbnextwave=firsthb==wave+1 & homebound==0 //flag incident homebound next wave
gen incnhnextwave=firstnh==wave+1 & nhres==0 //flag incident NH next wave
replace adl_diff_ind=1 if adl_impair==1
label var adl_diff_ind "ADL difficulty or impairment"

//Which group an individual ends up in
gen wherelandgroup=1 if missing(firsthb) & missing(firstnh)
replace wherelandgroup=2 if !missing(firsthb) 
replace wherelandgroup=3 if !missing(firstnh) 
replace wherelandgroup=4 if !missing(firstnh) & firsthb<firstnh
label define wherelandgroup 1 "Never homebound or NH resident" 2 "Future HB" ///
3 "Future NH resident" 4 "Homebound, then NH"
label values wherelandgroup wherelandgroup

//Dropping waves after first homebound/NH
sort spid wave
by spid: drop if firstnh<wave
by spid: drop if firsthb<wave

//ever* var needs to be changed because later waves are dropped. 
replace everhb=0 if firsthb>firstnh
replace evernh=0 if firsthb<firstnh 


//finding next wave status 
gen nwstatus=.
forvalues i=1/5 {
replace nwstatus=r`=`i'+1'status if wave==`i'
}
tab nwstat
tab r2status
replace nwstatus=1 if inlist(nwstatus,60,63) & !missing(hbne)
replace nwstatus=4 if inlist(nwstatus,61)
replace nwstatus=6 if inlist(nwstatus,62,86)
replace nwstatus=7 if nwstatus>7
replace nwstatus=6 if died_12==1 & nwstatus==7
label define nwstatus 1 "Community, not homebound" 2 "Homebound, not incident" ///
3 "Incident homebound" 4 "NH Resident, not incident" ///
5 "Incident NH" 6 "Died" 7 "LFU"
label values nwstatus nwstatus
replace nwstatus=2 if hbne==1
replace nwstatus=3 if inchb==1
replace nwstat=4 if nhne==1
replace nwstat=5 if incnhne==1
label var nwstat "Status next wave"
replace died_12=0 if nwstatus<=5
label var died_12 "Died prior to next wave"

//generating everdied, but since we don't follow people after wave 6 we don't 
// know if they died based off NHATS data.
sort spid wave
capture drop everdied
gen everdied=1 if nwstatus==6 & wave!=6 
gsort spid -wave
by spid: carryforward everdied, replace 

//same as above explanation
capture drop everlfu
gen everlfu=1 if nwstatus==7 & wave!=6
by spid: carryforward everlfu, replace 

sort spid wave
gen northeast=region==1
gen midwest=region==2
gen south=region==3
gen west=region==4
label var northe "Northeast"
label var midw "Midwest"
label var south "South"
label var west "West"
gen sr_cond_cat=1 if sr_numcond<2
replace sr_cond_cat=2 if inrange(sr_numcond,2,4)
replace sr_cond_cat=3 if inrange(sr_numcond,5,15)
label define sr_cond_cat 1 "0-1 SR condition" 2 "2-4 SR conditions" 3 "5+ SR conditions"
label values sr_cond_cat sr_cond_cat
tab sr_cond_cat, gen(sr_cond_cat)
forvalues i=1/3 {
local lab: label sr_cond_cat `i'
label var sr_cond_cat`i' "`lab'"
}


tab wave nwstat if wave<=4, row
tab nwsta status if wave==1 

//income quartile definiton
sum income_adj
forvalues i=1/4 {
gen inccat`i'=income_quart==`i'
local lab : label income_quart `=`i''
label var inccat`i' "Income Quartile: `lab'"
}
label define income_quart 1 "1st Income Quartile (Low)" 2 "2nd Income Quartile" ///
3 "3rd Income Quartile" 4 "4th Income Quartile (Highest)"
label values income_quart income_quart

//Probable Dementia 
gen prob_dementia=dem_3==1 if !missing(dem_3)
label var prob_dementia "Probable dementia"

by spid, sort: gen persontime=_N
replace persontime=firsthb if firsthb<persontime
replace persontime=firstnh if firstnh<persontime
label var persontime "Waves contributing information"
gen anydebt=creditdebt==1 | medpayno==1 if !missing(creditdebt) | !missing(medpayn)
label var anydebt "Credit card or medical debt"

//important to define 
sort spid wave
by spid: egen lw=max(wave)
label var lw "Last Wave in the Community"

replace lw=lw+1 if everdied==1 & died_12==1
sort spid wave
replace lw=. if died_12==0 & everdied==1

gsort spid -wave
by spid: carryforward lw, replace

//ANALYSIS
//creating Incidence Table using stptime command for survival analysis 
//with lw being the time and homebound the failure. 

capture drop fail
 gen fail=0
 replace fail=1 if everhb==1
 replace fail=2 if evernh==1
 replace fail=3 if everdied==1 & fail!=1 & fail!=2
 
keep if wave==1 & status==1



local cvars1 age
local cvars2 persontime  income_adj
local ivars1 female white black hisp other_race married 
label var inchb "Incident Homebound Next Wave"
label var incnh "Incident Nursing Home Next Wave"
local ivars2 inccat1 inccat2 inccat3 proxy  ///
medicaid medigap srh_fp adl_eat_help adl_bath_help adl_toil_help adl_dres_help ///
adl_ins_help adl_bed_help adl_impair iadl_impair ///
sr_cond_cat1 sr_cond_cat2 sr_ami_ever sr_stroke_ever sr_cancer_ever sr_hip_ever sr_heart_dis_ever ///
sr_htn_ever sr_ra_ever sr_osteoprs_ever sr_diabetes_ever sr_lung_dis_ever ///
prob_dementia dem_2_cat adl_diff_ind /*inchbnextwave incnhnextwave ///
lfunextwave died_12 everhb evernh*/ metro_ind northeast midwest south
 //work on competing risk
 
 
foreach x in agecat income_quart {
levelsof `x', local(levels)
foreach l of local levels {
	gen `x'`l'=`x'==`l'
	local lab : label `x' `l'
	label var `x'`l' "`lab'"
}
}

label var agecat2 "Age 70-74"
label var agecat3 "Age 75-79"
label var agecat4 "Age 80-84"
label var agecat5 "Age 85-89"
label var agecat6 "Age 90+"

forvalues i=2/6 {
	local age `age' agecat`i'
}

forvalues i=1/3 {
	local inc `inc' income_quart`i'
}
local vars `age' ib4.income_quart /*fin_strain anydebt govtasst finhlpfam meals_wheels */ ///
female black hisp married ind_noone educ_hs_ind  ///
medicaid prob_dem `cond' adl_diff_ind srh_fp i.sr_cond_cat ///
ind_paid_helper metro_ind northeast midwest south

 stset lw [pw=anfinw], failure(fail==1) id(spid)

 stcrreg `age' ib4.income_quart female black hisp married, compete(fail==2 3) 
 outreg using homebound_income_comp_risk, replace ///
 stats(e_b p e_ci) varlabels note("*Competing Risks are Nuring Home and Dying") ///
 ctitles("" "HB Subhazard Ratio (1)"  )
 
  stcrreg `vars', compete(fail==2 3) 
 outreg using homebound_income_comp_risk, replace ///
 stats(e_b p e_ci) varlabels note("*Competing Risks are Nuring Home and Dying") ///
 ctitles("" "HB Subhazard Ratio (2)"  ) merge
 
 
  stcurve, cif at1(income_quart=1) at2(income_quart=2) at3(income_quart=3) ///
  at4(income_quart=4) connect(direct) legend(label(1 "Income Quartile 1 (Lowest)") label(2 "Income Quartile 2") ///
  label(3 "Income Quartile 3") label(4 "Income Quartile 4 (Highest)")) note("Competing Risks are Nursing Home and Dying") ///
  xtitle("Analysis Time")
  
 graph save nh_die, replace
 graph export nh_die.pdf, replace
 
 
 //stcompet...
 
  capture drop cuminc*
  capture drop ci*
  capture drop complement*
  capture drop KM*
  
  stset lw, failure(fail==1)
  sts gen KM=s
  gen complement=1-KM
  stcompet cuminc=ci, compet1(2) compet2(3)
  
  gen ci=cuminc if fail==1
  replace ci=0 if lw==1 & ci==.
  twoway line complement ci lw, sort xlabel(0(1)6)
  
  stset lw, failure(fail==2)
  sts gen KM1=s
  gen complement1=1-KM1
  stcompet cuminc1=ci, compet1(1) compet2(3)
  gen ci1=cuminc1 if fail==2
    replace ci1=0 if lw==1 & ci1==.
  twoway line complement ci ci1 lw, sort xlabel(0(1)6)
  
  
  stset lw, failure(fail==3)
  sts gen KM2=s
  gen complement2=1-KM2
  stcompet cuminc2=ci, compet1(1) compet2(2)
  gen ci2=cuminc2 if fail==3
  replace ci2=0 if lw==1 & ci2==.
  
  
  stset lw, failure(fail==1 2 3)
  sts gen KM3=s
  gen complement3=1-KM3
  //stcompet cuminc3=ci
 //gen ci3=cuminc3 if fail>0
  
  egen ci3=rowtotal(cuminc cuminc1 cuminc2), missing 
    replace ci3=0 if lw==1 & ci3==.
  bys lw: egen ci4=mean(ci3)
  twoway line ci ci1 ci2 ci4 lw, sort xlabel(1(1)6) ytitle("Probability") ///
  xtitle("Time") legend(label(1 "CIF HB") label(2 "CIF NH") ///
  label(3 "CIF Died") label(4 "CIF All")) title("Cumulative Incidence by Failure type")
   graph save km_cif, replace
 graph export km_cif.pdf, replace
 
  
  


H="CR postestimation/graphs"


H="mepoisson & cox for robustness"


H="xxxxTesting new format belowxxxxxx"


H="Code to get dataset"
//Part 1

clear all
set more off
capture log close


cd "E:\nhats\data\projects\Homebound\logs"
use "E:\nhats\data\NHATS cleaned\sp_round_1_6.dta" if lml==0, clear


//cpi inflation
gen income_adj=0
replace income_adj= (240.007/224.939)*aveincome if wave==1
replace income_adj= (240.007/229.594)*aveincome if wave==2
replace income_adj= (240.007/232.957)*aveincome if wave==3
replace income_adj= (240.007/236.736)*aveincome if wave==4
replace income_adj= (240.007/237.017)*aveincome if wave==5
replace income_adj=aveincome if wave==6

//replacing analytic weights to use only weights for origianl cohort. 
//only using original cohort (decision made based off of prior analysis with replenishment cohort. 
gen orig_weight=anfinw
replace anfinw=an2011wgt if (year==2011 & wave==5) | (year==2011 & wave==6)
drop if yearsample==2015

//For Creating National Estimates
replace anfinw=anfinw*5491440/4649902 if inrange(age,65,69) & female==0
replace anfinw=anfinw*4087340/4097017 if inrange(age,70,74) & female==0
replace anfinw=anfinw*3027820/3001146 if inrange(age,75,79) & female==0
replace anfinw=anfinw*2169060/2173979 if inrange(age,80,84) & female==0
replace anfinw=anfinw*1194880/1224397 if inrange(age,85,89) & female==0
replace anfinw=anfinw*524540/463619 if inrange(age,90,150) & female==0

replace anfinw=anfinw*6124980/5250466 if inrange(age,65,69) & female==1
replace anfinw=anfinw*4781940/4843444 if inrange(age,70,74) & female==1
replace anfinw=anfinw*3886940/3878674 if inrange(age,75,79) & female==1
replace anfinw=anfinw*3249940/3215654 if inrange(age,80,84) & female==1
replace anfinw=anfinw*2230480/2257969 if inrange(age,85,89) & female==1
replace anfinw=anfinw*1382160/1329677 if inrange(age,90,150) & female==1


//VARIABLE CREATION/CLEANUP
gen ind_noone=n_social==0
label var ind_noone "SR nobody in social network"

sort spid wave
by spid: egen firstdem=min(cond(prob_dem==1,wave,.))

xtset spid wave
replace homebound_cat=. if nhres==1
gen homebound=homebound==1 if !missing(homebound) & !nhres
gen status=1 if sp_ivw==1 & !missing(homebound)
replace status=2 if homebound==1
replace status=3 if nhres==1
label define status 1 "Community, not HB" 2 "Homebound" 3 "NH resident" 4 ///
"Community, previously HB or NH resident"
label values status status
label var status "Status this wave"


//checking to make sure everyone has a status at wave 1
sort spid wave
by spid: gen start=1 if wave==1 & status!=.
by spid: carryforward start, replace

//checking individuals who have a missing status. 
by spid: gen mstat=1 if status==.
by spid: carryforward mstat, replace

//checking individuals who have missing wave and flagging them.
capture drop misw
by spid: gen misw=1 if wave[_n-1]!=wave-1 & wave!=1
capture drop misw1
gen misw1=misw
by spid: carryforward misw1, replace

//Dropping individuals with a missing status or a missing wave.
drop if mstat==1 // 884 obs. dropped; 294 unique individuals.
drop if misw1==1 //didn't find any. 


sort spid wave
gen hbw=wave if homebound==1 //homebound at what wave
gen nhw=wave if nhres==1 // NH at what wave
by spid, sort: egen firsthb=min(hbw) //first homebound wave for an individual
by spid, sort: egen firstnh=min(nhw) //first NH wave for an individual
gen everhb=!missing(firsthb) //if an individual was ever homebound
gen evernh=!missing(firstnh) //if an individual was ever NH
label var everhb "Ever HB"
label var evernh "Ever NH"
*drop if firsthb==1 | missing(homebou)
sort spid wave
by spid: gen hbnextwave=homebound[_n+1] //flag next wave being homebound
by spid: gen nhnextwave=nhres[_n+1] //flag next wave being NH
gen inchbnextwave=firsthb==wave+1 & homebound==0 //flag incident homebound next wave
gen incnhnextwave=firstnh==wave+1 & nhres==0 //flag incident NH next wave
replace adl_diff_ind=1 if adl_impair==1
label var adl_diff_ind "ADL difficulty or impairment"

//Which group an individual ends up in
gen wherelandgroup=1 if missing(firsthb) & missing(firstnh)
replace wherelandgroup=2 if !missing(firsthb) 
replace wherelandgroup=3 if !missing(firstnh) 
replace wherelandgroup=4 if !missing(firstnh) & firsthb<firstnh
label define wherelandgroup 1 "Never homebound or NH resident" 2 "Future HB" ///
3 "Future NH resident" 4 "Homebound, then NH"
label values wherelandgroup wherelandgroup

//Dropping waves after first homebound/NH
sort spid wave
by spid: drop if firstnh<wave
by spid: drop if firsthb<wave

//ever* var needs to be changed because later waves are dropped. 
replace everhb=0 if firsthb>firstnh
replace evernh=0 if firsthb<firstnh 


//finding next wave status 
gen nwstatus=.
forvalues i=1/5 {
replace nwstatus=r`=`i'+1'status if wave==`i'
}
tab nwstat
tab r2status
replace nwstatus=1 if inlist(nwstatus,60,63) & !missing(hbne)
replace nwstatus=4 if inlist(nwstatus,61)
replace nwstatus=6 if inlist(nwstatus,62,86)
replace nwstatus=7 if nwstatus>7
replace nwstatus=6 if died_12==1 & nwstatus==7
label define nwstatus 1 "Community, not homebound" 2 "Homebound, not incident" ///
3 "Incident homebound" 4 "NH Resident, not incident" ///
5 "Incident NH" 6 "Died" 7 "LFU"
label values nwstatus nwstatus
replace nwstatus=2 if hbne==1
replace nwstatus=3 if inchb==1
replace nwstat=4 if nhne==1
replace nwstat=5 if incnhne==1
label var nwstat "Status next wave"
replace died_12=0 if nwstatus<=5
label var died_12 "Died prior to next wave"

//generating everdied, but since we don't follow people after wave 6 we don't 
// know if they died based off NHATS data.
sort spid wave
capture drop everdied
gen everdied=1 if nwstatus==6 & wave!=6 
gsort spid -wave
by spid: carryforward everdied, replace 

//same as above explanation
capture drop everlfu
gen everlfu=1 if nwstatus==7 & wave!=6
by spid: carryforward everlfu, replace 

sort spid wave
gen northeast=region==1
gen midwest=region==2
gen south=region==3
gen west=region==4
label var northe "Northeast"
label var midw "Midwest"
label var south "South"
label var west "West"
gen sr_cond_cat=1 if sr_numcond<2
replace sr_cond_cat=2 if inrange(sr_numcond,2,4)
replace sr_cond_cat=3 if inrange(sr_numcond,5,15)
label define sr_cond_cat 1 "0-1 SR condition" 2 "2-4 SR conditions" 3 "5+ SR conditions"
label values sr_cond_cat sr_cond_cat
tab sr_cond_cat, gen(sr_cond_cat)
forvalues i=1/3 {
local lab: label sr_cond_cat `i'
label var sr_cond_cat`i' "`lab'"
}


tab wave nwstat if wave<=4, row
tab nwsta status if wave==1 

//income quartile definiton
sum income_adj
forvalues i=1/4 {
gen inccat`i'=income_quart==`i'
local lab : label income_quart `=`i''
label var inccat`i' "Income Quartile: `lab'"
}
label define income_quart 1 "1st Income Quartile (Low)" 2 "2nd Income Quartile" ///
3 "3rd Income Quartile" 4 "4th Income Quartile (Highest)"
label values income_quart income_quart



gen prob_dementia=dem_3==1 if !missing(dem_3)
label var prob_dementia "Probable dementia"

by spid, sort: gen persontime=_N
replace persontime=firsthb if firsthb<persontime
replace persontime=firstnh if firstnh<persontime
label var persontime "Waves contributing information"
gen anydebt=creditdebt==1 | medpayno==1 if !missing(creditdebt) | !missing(medpayn)
label var anydebt "Credit card or medical debt"

//important to define 
sort spid wave
by spid: egen lw=max(wave)
label var lw "Last Wave in the Community"


H="Code for sample characteristics"

local cvars1 age
local cvars2 n_social_network persontime income_adj n_helpers n_paid_helpers tot_hrsmonth_help_i ///
tot_hrsmonth_paid_i 
local ivars1 female white black hisp other_race married livealone educ_hs_ind proxy ind_noone
local ivars2 ind_any_helpers ind_paid_helper top_quartile_help_helped ///
medicaid medigap srh_fp nhres ///
sr_ami_ever sr_stroke_ever sr_cancer_ever sr_hip_ever sr_heart_dis_ever ///
sr_htn_ever sr_ra_ever sr_osteoprs_ever sr_diabetes_ever sr_lung_dis_ever ///
prob_dementia dem_2_cat adl_diff_ind adl_independent iadl_diff_ind iadl_independent 
local ivars3 adl1 adl2 adl3 iadl1 iadl2 iadl3 adl_eat_help adl_bath_help adl_toil_help ///
adl_dres_help adl_ins_help adl_bed_help iadl_laun_help ///
iadl_shop_help iadl_meal_help iadl_bank_help iadl_meds_help ///
 reg_doc_seen sr_hosp_ind
gen lfunextwave=nwstatus==7
label var lfune "Lost to follow up prior to next wave"
local cvars1 age
local cvars2 persontime  income_adj
local ivars1 female white black hisp other_race married 
label var inchb "Incident Homebound Next Wave"
label var incnh "Incident Nursing Home Next Wave"
local ivars2 inccat1 inccat2 inccat3 inccat4 proxy  ///
medicaid medigap srh_fp adl_eat_help adl_bath_help adl_toil_help adl_dres_help ///
adl_ins_help adl_bed_help adl_impair iadl_impair ///
sr_cond_cat1 sr_cond_cat2 sr_cond_cat3 sr_ami_ever sr_stroke_ever sr_cancer_ever sr_hip_ever sr_heart_dis_ever ///
sr_htn_ever sr_ra_ever sr_osteoprs_ever sr_diabetes_ever sr_lung_dis_ever ///
prob_dementia dem_2_cat adl_diff_ind adl_independent inchbnextwave incnhnextwave ///
lfunextwave died_12 everhb evernh metro_ind northeast midwest south west /*///
fin_strain mealskip nopayhous nopayutil nopaymed anydebt creditdebt medpaynotcash finhlpfam meals_wheels govtasst*/

label var meals_wheels "Meals on Wheels"


//TABLE CREATION

gen n=1

preserve

mat tab=J(6,5,.)
local r=2

sum n if status==1 & wave==1 
mat tab[1,1]=r(N)
forvalues w=1/5{
sum n if nwstatus==1 & status==1 & wave==`w'
mat tab[`r',1]=r(N)
local r=`r'+1
}

local c=2
foreach i in 3 5 6 7{ 
local r=2
forvalues w=1/5{
sum n if nwstatus==`i' & status==1 & wave==`w' 
mat tab[`r',`c']=r(N)
local r=`r'+1
}
local c=`c'+1
}


mat rownames tab= "Wave 1" "Wave 2" "Wave 3" "Wave 4" "Wave 5" "Wave 6"
mat colnames tab="Community" "Incident Homebound" "Incident Nursing Home" "Died" "Lost to Follow-up"

mat list tab

frmttable using sample_derivation_new.rtf, replace statmat(tab) title("Status by Wave for Original Cohort") ///
sdec(0) varlabels note("2,656 people remain in the community after the last wave" ///
"When status is missing that wave and subsequent waves are removed" )

//creating community dwelling in wave 1 category. 
gen com=1 if status==1
replace com=0 if status!=1

mat tab4=J(6,5,.)
local r=2

svy, subpop(if wave==1 & com==1): tab nwstatus
mat tab4[1,1]=e(N_subpop)

forvalues i=1/5{
svy, subpop(if wave==`i' & com==1): tab nwstatus 
//sum com [aw=anfinw] if nwstatus==1 & wave==`i'
mat tab4[`r',1]=el(e(b),1,1)*e(N_subpop)
local r=`r'+1
}

local c=2
foreach i in 3 5 6 7{ 
local r=2
forvalues w=1/5{
svy, subpop(if wave==`w' & com==1): tab nwstatus 
mat tab4[`r',`c']=el(e(b),1,`i')*e(N_subpop)
local r=`r'+1
}
local c=`c'+1
}
mat list tab4
mat rownames tab4= "Wave 1" "Wave 2" "Wave 3" "Wave 4" "Wave 5" "Wave 6"
mat colnames tab4="Community" "Incident Homebound" "Incident Nursing Home" "Died" "Lost to Follow-up"
mat list tab4
frmttable using sample_derivation_new.rtf, addtable statmat(tab4) title("Weighted Percentages by Wave for Original Cohort") ///
sdec(2) varlabels note("2,656 people remain in the community after the last wave" ///
"When status is missing that wave and subsequent waves are removed" )


//Table for wave 1 characteristics and following them throughout the rounds. 
capture drop group*
gen group1=0
replace group1=1 if everhb==0 & evernh==0
gen group2=0
replace group2=1 if everhb==1 & evernh==0
gen group3=0
replace group3=1 if everhb==0 & evernh==1
gen group4=0
replace group4=1 if everdied==1 & everhb==0 & evernh==0 
gen group5=0
replace group5=1 if everlfu==1 & everhb==0 & evernh==0

keep if status==1 & wave==1
local rn : word count 1 `cvars1' `cvars2' `ivars1' `ivars2' `coutcomes' `coutcomes' `ioutcomes' 1 1
di `rn'
mat tab1=J(`rn',5,.)
mat stars=J(`rn',5,0)
local r=1
local c=1
foreach i in 1 2 3 4 5{
	foreach round in 1 2 {
		foreach x of local cvars`round' {
			qui sum `x' if group`i'==1 & wave==1  [aw=anfin]
			mat tab1[`r',`c']=r(mean)
			if inlist("`i'","2") {
				svy: reg `x' group`i' if group`i'==1 | group1==1
				test group`i'
				mat stars[`r',`c']=(r(p)<.01) + (r(p)<.05) 
}
			local r=`r'+1
}
		foreach x of local ivars`round' {
			qui sum `x' if group`i'==1 & wave==1  [aw=anfin]
			mat tab1[`r',`c']=r(mean)*100
			if inlist("`i'","2") {
				svy, subpop(if status==1 & wave==1  & group`i'==1 | group1==1): tab `x' group`i' 
				mat stars[`r',`c']=(e(p_Pear)<.01) + (e(p_Pear)<.05)
}
			local r=`r'+1
}
}
	local r=`r'+1

	
	foreach x of local coutcomes {
		qui sum `x' if group`i'==1,d
		mat tab1[`r',`c']=r(mean)
		if inlist("`i'","2") {
				svy: reg `x' group`i' if group`i'==1 | group1==1
				test group`i' group1
			mat stars[`r',`c']=(r(p)<.01) + (r(p)<.05)
}
		local r=`r'+1
*		if "`x'"=="tot_paid_by_mc_12m_wi_n0" {
			qui sum `x' if group`i'==1,d
			mat tab1[`r',`c']=r(p50)
			local r=`r'+1
*}
}
	foreach x of local ioutcomes {
		qui sum `x' if group`i'==1
		mat tab1[`r',`c']=r(mean)*100
			if inlist("`i'","2") {
				svy, subpop(if status==1 & wave==1  & group`i'==1 | group1==1): tab `x' group`i' 
				mat stars[`r',`c']=(e(p_Pear)<.01) + (e(p_Pear)<.05)
}
			local r=`r'+1
}
	qui sum n if group`i'==1 & wave==1  [aw=anfin]
	
	mat tab1[`r',`c']=r(N)
	mat tab1[`r'+1,`c']=r(sum)
	local r=1
	local c=`c'+1
}

foreach x in `coutcomes' {
local rnames `rnames' "`x'" "Median"
}
mat list tab1
mat list stars

mat rownames tab1=`cvars1' `ivars1' `cvars2' `ivars2' "_" N "Estimate"

frmttable using sample_derivation_new.rtf, addtable statmat(tab1) ///
 title("Sample Characteristics by final status") ///
 ctitles("" "Community" "HB Ever, Only" "NH Ever, Only" "Died Ever" "LFU") ///
 sdec(2) annotate(stars) asymbol(*,**) ///
 varlabels note("Waves 1 NHATS community-dwelling sample" "When status is missing that wave and subsequent waves are removed" ///
 "Highest Income: Income Quartile 4" "Individuals exit sample upon incident homebound/nursing home status, LFU, or after wave 6")
 
 restore
 
 preserve
 
 forvalues i=1/7 {
gen group`i'=nwstatus==`i'
}
 
 keep if status==1
//drop if wave==1 & status!=1
local rn : word count 1 `cvars1' `cvars2' `ivars1' `ivars2' `coutcomes' `coutcomes' `ioutcomes' 1 1
di `rn'
mat tab1=J(`rn',5,.)
mat stars=J(`rn',5,0)
local r=1
local c=1
foreach i in 1 3 5 6 7 {
	foreach round in 1 2 {
		foreach x of local cvars`round' {
			qui sum `x' if group`i'==1 & wave==1  [aw=anfin]
			mat tab1[`r',`c']=r(mean)
			if inlist("`i'","3","5","6","7") {
				svy: reg `x' group`i' if group`i'==1 | group1==1
				test group`i'
				mat stars[`r',`c']=(r(p)<.01) + (r(p)<.05) 
}
			local r=`r'+1
}
		foreach x of local ivars`round' {
			qui sum `x' if group`i'==1 & wave==1  [aw=anfin]
			mat tab1[`r',`c']=r(mean)*100
			if inlist("`i'","3","5","6","7") {
				svy, subpop(if status==1 & wave==1  & group`i'==1 | group1==1): tab `x' group`i' 
				mat stars[`r',`c']=(e(p_Pear)<.01) + (e(p_Pear)<.05)
}
			local r=`r'+1
}
}
	local r=`r'+1

	
	foreach x of local coutcomes {
		qui sum `x' if group`i'==1,d
		mat tab1[`r',`c']=r(mean)
		if inlist("`i'","3","5","6","7") {
				svy: reg `x' group`i' if group`i'==1 | group1==1
				test group`i'
			mat stars[`r',`c']=(r(p)<.01) + (r(p)<.05)
}
		local r=`r'+1
*		if "`x'"=="tot_paid_by_mc_12m_wi_n0" {
			qui sum `x' if group`i'==1,d
			mat tab1[`r',`c']=r(p50)
			local r=`r'+1
*}
}
	foreach x of local ioutcomes {
		qui sum `x' if group`i'==1
		mat tab1[`r',`c']=r(mean)*100
			if inlist("`i'","3","5","6","7") {
				svy, subpop(if status==1 & wave==1  & group`i'==1 | group1==1): tab `x' group`i' 
				mat stars[`r',`c']=(e(p_Pear)<.01) + (e(p_Pear)<.05)
}
			local r=`r'+1
}
	qui sum n if group`i'==1 & wave==1  [aw=anfin]
	
	mat tab1[`r',`c']=r(N)
	mat tab1[`r'+1,`c']=r(sum)
	local r=1
	local c=`c'+1
}

foreach x in `coutcomes' {
local rnames `rnames' "`x'" "Median"
}

mat rownames tab1=`cvars1' `ivars1' `cvars2' `ivars2' "_" N "Estimate"

frmttable using sample_derivation_new.rtf, addtable replace statmat(tab1) ///
 title("Sample Characteristics by next wave status") ///
 ctitles("" "Community"  "Incident HB"  "Incident NH" ///
 "Died" "LFU") ///
 sdec(2) annotate(stars) asymbol(*,**) ///
 varlabels note("Waves 1 NHATS community-dwelling sample, by next-wave status")
 
restore

preserve

 capture drop group*


local cvars1 age
local cvars2 n_social_network persontime income_adj n_helpers n_paid_helpers tot_hrsmonth_help_i ///
tot_hrsmonth_paid_i 
local ivars1 female white black hisp other_race married livealone educ_hs_ind proxy ind_noone
local ivars2 ind_any_helpers ind_paid_helper top_quartile_help_helped ///
medicaid medigap srh_fp nhres ///
sr_ami_ever sr_stroke_ever sr_cancer_ever sr_hip_ever sr_heart_dis_ever ///
sr_htn_ever sr_ra_ever sr_osteoprs_ever sr_diabetes_ever sr_lung_dis_ever ///
prob_dementia dem_2_cat adl_diff_ind adl_independent iadl_diff_ind iadl_independent 
local ivars3 adl1 adl2 adl3 iadl1 iadl2 iadl3 adl_eat_help adl_bath_help adl_toil_help ///
adl_dres_help adl_ins_help adl_bed_help iadl_laun_help ///
iadl_shop_help iadl_meal_help iadl_bank_help iadl_meds_help ///
 reg_doc_seen sr_hosp_ind
label var lfune "Lost to follow up prior to next wave"
local cvars1 age
local cvars2 persontime  income_adj
local ivars1 female white black hisp other_race married 
label var inchb "Incident Homebound Next Wave"
label var incnh "Incident Nursing Home Next Wave"
local ivars2 inccat1 inccat2 inccat3 inccat4 proxy  ///
medicaid medigap srh_fp adl_eat_help adl_bath_help adl_toil_help adl_dres_help ///
adl_ins_help adl_bed_help adl_impair iadl_impair ///
sr_cond_cat1 sr_cond_cat2 sr_cond_cat3 sr_ami_ever sr_stroke_ever sr_cancer_ever sr_hip_ever sr_heart_dis_ever ///
sr_htn_ever sr_ra_ever sr_osteoprs_ever sr_diabetes_ever sr_lung_dis_ever ///
prob_dementia dem_2_cat adl_diff_ind adl_independent inchbnextwave incnhnextwave ///
lfunextwave died_12 everhb evernh metro_ind northeast midwest south west


 keep if status==1 & wave==1
//keep if status==1
local rn : word count 1 `cvars1' `cvars2' `ivars1' `ivars2' `coutcomes' `coutcomes' `ioutcomes' 1 1
di `rn'
mat tab1=J(`rn',4,.)
mat stars=J(`rn',4,0)
local r=1
local c=1

capture drop group*
forvalues i=1/4 {
gen group`i'=inccat`i'
local lab`i' : var label inccat`i'
}

forvalues i=1/4 {
	foreach round in 1 2 {
		foreach x of local cvars`round' {
			qui sum `x' if group`i'==1 & wave==1  [aw=anfin]
			mat tab1[`r',`c']=r(mean)
			if inlist("`i'", "1" ,"2","3") {
				qui ttest `x' if group`i'==1 | group4==1, by(group`i')
				mat stars[`r',`c']=(r(p)<.01) + (r(p)<.05)
}
			local r=`r'+1
}
		foreach x of local ivars`round' {
			qui sum `x' if group`i'==1 & wave==1  [aw=anfin]
			mat tab1[`r',`c']=r(mean)*100
			if inlist( "`i'", "1" ,"2","3") {
				svy, subpop(if status==1 & wave==1  & group`i'==1 | group4==1): tab `x' group`i' 
				mat stars[`r',`c']=(e(p_Pear)<.01) + (e(p_Pear)<.05)
}
			local r=`r'+1
}
}
	local r=`r'+1

	
	foreach x of local coutcomes {
		qui sum `x' if group`i'==1,d
		mat tab1[`r',`c']=r(mean)
		if inlist("`i'", "1" ,"2","3") {
			qui ttest `x' if group`i'==1 | group4==1, by(group`i')
			mat stars[`r',`c']=(r(p)<.01) + (r(p)<.05)
}
		local r=`r'+1
*		if "`x'"=="tot_paid_by_mc_12m_wi_n0" {
			qui sum `x' if group`i'==1,d
			mat tab1[`r',`c']=r(p50)
			local r=`r'+1
*}
}
	foreach x of local ioutcomes {
		qui sum `x' if group`i'==1
		mat tab1[`r',`c']=r(mean)*100
			if inlist("`i'", "1" ,"2","3") {
				svy, subpop(if status==1 & wave==1  &  group`i'==1 | group4==1): tab `x' group`i' 
				mat stars[`r',`c']=(e(p_Pear)<.01) + (e(p_Pear)<.05)
}
			local r=`r'+1
}
	qui sum n if group`i'==1 & wave==1 [aw=anfin]
	
	mat tab1[`r',`c']=r(N)
	mat tab1[`r'+1,`c']=r(sum)
	local r=1
	local c=`c'+1
}

foreach x in `coutcomes' {
local rnames `rnames' "`x'" "Median"
}

mat rownames tab1=`cvars1' `ivars1' `cvars2' `ivars2' "_" N "Estimate"


frmttable using sample_derivation_new.rtf, addtable replace statmat(tab1) ///
 title("Sample Characteristics by Income Quartile") ///
 ctitles("" "Income Quartile 1"  "Income Quartile 2"  "Income Quartile 3" ///
 "Income Quartile 4") ///
 sdec(2) annotate(stars) asymbol(*,**) ///
 varlabels note("Waves 1 NHATS community-dwelling sample, by next-wave status")


H="Code for Competing Risk regression"
replace lw=lw+1 if everdied==1 & died_12==1
sort spid wave
replace lw=. if died_12==0 & everdied==1

gsort spid -wave
by spid: carryforward lw, replace

//ANALYSIS
//creating Incidence Table using stptime command for survival analysis 
//with lw being the time and homebound the failure. 

capture drop fail
 gen fail=0
 replace fail=1 if everhb==1
 replace fail=2 if evernh==1
 replace fail=3 if everdied==1 & fail!=1 & fail!=2
 
keep if wave==1 & status==1



local cvars1 age
local cvars2 persontime  income_adj
local ivars1 female white black hisp other_race married 
label var inchb "Incident Homebound Next Wave"
label var incnh "Incident Nursing Home Next Wave"
local ivars2 inccat1 inccat2 inccat3 proxy  ///
medicaid medigap srh_fp adl_eat_help adl_bath_help adl_toil_help adl_dres_help ///
adl_ins_help adl_bed_help adl_impair iadl_impair ///
sr_cond_cat1 sr_cond_cat2 sr_ami_ever sr_stroke_ever sr_cancer_ever sr_hip_ever sr_heart_dis_ever ///
sr_htn_ever sr_ra_ever sr_osteoprs_ever sr_diabetes_ever sr_lung_dis_ever ///
prob_dementia dem_2_cat adl_diff_ind /*inchbnextwave incnhnextwave ///
lfunextwave died_12 everhb evernh*/ metro_ind northeast midwest south
 //work on competing risk
 
 
foreach x in agecat income_quart {
levelsof `x', local(levels)
foreach l of local levels {
	gen `x'`l'=`x'==`l'
	local lab : label `x' `l'
	label var `x'`l' "`lab'"
}
}

label var agecat2 "Age 70-74"
label var agecat3 "Age 75-79"
label var agecat4 "Age 80-84"
label var agecat5 "Age 85-89"
label var agecat6 "Age 90+"

forvalues i=2/6 {
	local age `age' agecat`i'
}

forvalues i=1/3 {
	local inc `inc' income_quart`i'
}
local vars `age' ib4.income_quart /*fin_strain anydebt govtasst finhlpfam meals_wheels */ ///
female black hisp married ind_noone educ_hs_ind  ///
medicaid prob_dem `cond' adl_diff_ind srh_fp i.sr_cond_cat ///
ind_paid_helper metro_ind northeast midwest south

 stset lw [pw=anfinw], failure(fail==1) id(spid)

 stcrreg `age' ib4.income_quart female black hisp married, compete(fail==2 3) 
 outreg using homebound_income_comp_risk, replace ///
 stats(e_b p e_ci) varlabels note("*Competing Risks are Nuring Home and Dying") ///
 ctitles("" "HB Subhazard Ratio (1)"  )
 
  stcrreg `vars', compete(fail==2 3) 
 outreg using homebound_income_comp_risk, replace ///
 stats(e_b p e_ci) varlabels note("*Competing Risks are Nuring Home and Dying") ///
 ctitles("" "HB Subhazard Ratio (2)"  ) merge
 
 
  stcurve, cif at1(income_quart=1) at2(income_quart=2) at3(income_quart=3) ///
  at4(income_quart=4) connect(direct) legend(label(1 "Income Quartile 1 (Lowest)") label(2 "Income Quartile 2") ///
  label(3 "Income Quartile 3") label(4 "Income Quartile 4 (Highest)")) note("Competing Risks are Nursing Home and Dying") ///
  xtitle("Analysis Time")
  
 graph save nh_die, replace
 graph export nh_die.pdf, replace
 
 
 //stcompet...
 
  capture drop cuminc*
  capture drop ci*
  capture drop complement*
  capture drop KM*
  
  stset lw, failure(fail==1)
  sts gen KM=s
  gen complement=1-KM
  stcompet cuminc=ci, compet1(2) compet2(3)
  
  gen ci=cuminc if fail==1
  replace ci=0 if lw==1 & ci==.
  twoway line complement ci lw, sort xlabel(0(1)6)
  
  stset lw, failure(fail==2)
  sts gen KM1=s
  gen complement1=1-KM1
  stcompet cuminc1=ci, compet1(1) compet2(3)
  gen ci1=cuminc1 if fail==2
    replace ci1=0 if lw==1 & ci1==.
  twoway line complement ci ci1 lw, sort xlabel(0(1)6)
  
  
  stset lw, failure(fail==3)
  sts gen KM2=s
  gen complement2=1-KM2
  stcompet cuminc2=ci, compet1(1) compet2(2)
  gen ci2=cuminc2 if fail==3
  replace ci2=0 if lw==1 & ci2==.
  
  
  stset lw, failure(fail==1 2 3)
  sts gen KM3=s
  gen complement3=1-KM3
  //stcompet cuminc3=ci
 //gen ci3=cuminc3 if fail>0
  
  egen ci3=rowtotal(cuminc cuminc1 cuminc2), missing 
    replace ci3=0 if lw==1 & ci3==.
  bys lw: egen ci4=mean(ci3)
  twoway line ci ci1 ci2 ci4 lw, sort xlabel(1(1)6) ytitle("Probability") ///
  xtitle("Time") legend(label(1 "CIF HB") label(2 "CIF NH") ///
  label(3 "CIF Died") label(4 "CIF All")) title("Cumulative Incidence by Failure type")
   graph save km_cif, replace
 graph export km_cif.pdf, replace
 
  

H="Code for by wave incident homebound"


//ANALYSIS
//creating Incidence Table using stptime command for survival analysis 
//with lw being the time and homebound the failure. 

capture drop fail
 gen fail=0
 replace fail=1 if everhb==1
 replace fail=2 if evernh==1
 replace fail=3 if everdied==1 & fail!=1 & fail!=2
preserve 
keep if wave==1 & status==1

bys lw: sum everhb [aw=anfinw] 
 //rename wave wave1
 //rename lw wave
 rename anfinwgt anfinwgt1
 rename an2011wgt an2011wgt1
 
 merge 1:1 spid wave using "E:\nhats\data\NHATS cleaned\sp_round_1_6.dta",  keepusing(anfinwgt an2011wgt) keep(matched)
// gen weight=anfinwgt
 //replace anfinwgt=an2011wgt if wave==5 | wave==6
 
  stset lw [pw=anfinwgt], failure(fail==1) id(spid)
 stptime, at(0(1)6) output(stp, replace)
  stset lw, failure(fail==1) id(spid)
 stptime, at(0(1)6) output(stp1, replace)
 restore
 preserve
 
 use stp.dta, clear
mat tab=J(5,6,.)
local r=1
local c=1
 forvalues i=1/5{
 mat tab[`r',`c']=`i'
 sum _D if _group==`i'
 mat tab[`r',`c'+1]=r(mean)
 sum _Rate if _group==`i'
 mat tab[`r',`c'+3]=r(mean)
  sum _Lower if _group==`i'
 mat tab[`r',`c'+4]=r(mean)
  sum _Upper if _group==`i'
 mat tab[`r',`c'+5]=r(mean)
 local r=`r'+1
 }
 
  use stp1.dta, clear
 local r=1
  forvalues i=1/5{
 sum _D if _group==`i'
 mat tab[`r',`c'+2]=r(mean)

 local r=`r'+1
 }
  
  mat colnames tab="Wave" "Weighted Failures" "Failures" "Rate" "Lower 95% CI" "Upper 95% CI"
  mat list tab 
  
  frmttable using incidence_rate.doc, replace statmat(tab) sdec(0,0,0,4,4,4\ ///
  0,0,0,4,4,4\ 0,0,0,4,4,4\ 0,0,0,4,4,4\ 0,0,0,4,4,4) title("Incidence table for Homebound") ///
  note("Survival Analysis using Incident Homebound as failure") 
  
  restore

keep if inrange(homebound_cat,2,4)
 tab wave
 gen n=1
 mat tab=J(5,6,.)
 local r=1
 
 forvalues i=1/5 {
	qui sum n if wave==`i' [aw=anfinw]
	mat tab[`r',2]=r(N)
	mat tab[`r',3]=r(sum_w)
	mat tab[`r',4]=0
	mat tab[`r',5]=0
	mat tab[`r',6]=0
	local r=`r'+1
}

local r=1
forvalues i=1/5{
	sum n if wave==`i' & nwstat==3
 mat tab[`r',4]=r(N)	
	svy, subpop(if wave==`i' & nwstat!=7): tab nwstat
	mat results=e(b)
	mat tab[`r',5]=results[1,2]*tab[`r',3]
	mat tab[`r',6]=results[1,2]*100
	local r=`r'+1
}


log using annual_homebound_incidence.txt, text replace
frmttable, statmat(tab) store(tab1) ctitles("Time period" "" "Community dwelling sample" ///
"Community dwelling estimate at start" "Incident homebound sample" "Incident HB estimate" ///
"Incident HB %") sdec(0,0,0,0,0,2,3) ///
note("Community dwelling sample includes LFU prior to next wave" ///
"Incident HB % is percentage of prior wave, excluding LFU from denominator" ///
"HB estimate is HB %*nat'l estimate at prior wave (including LFU)") ///
rtitles("1-2"\"2-3"\"3-4"\"4-5"\"5-6")

svy, subpop(if nwstat!=7): tab wave nwstatus, row ci
log close







H="*****Wave 7 added in *****"


H="Code to get dataset"
//Part 1

clear all
set more off
capture log close


cd "E:\nhats\data\projects\Homebound\logs"
use "E:\nhats\data\NHATS cleaned\sp_round_1_7.dta" if lml==0, clear


//cpi inflation
gen income_adj=0
replace income_adj= (245.120/224.939)*aveincome if wave==1
replace income_adj= (245.120/229.594)*aveincome if wave==2
replace income_adj= (245.120/232.957)*aveincome if wave==3
replace income_adj= (245.120/236.736)*aveincome if wave==4
replace income_adj= (245.120/237.017)*aveincome if wave==5
replace income_adj= (245.120/240.007)*aveincome if wave==6
replace income_adj=aveincome if wave==7

//replacing analytic weights to use only weights for origianl cohort. 
//only using original cohort (decision made based off of prior analysis with replenishment cohort. 
gen orig_weight=anfinw
replace anfinw=an2011wgt if (year==2011 & wave==5) | (year==2011 & wave==6) | (year==2011 & wave==7)
drop if yearsample==2015
/*
//For Creating National Estimates
replace anfinw=anfinw*5491440/4649902 if inrange(age,65,69) & female==0
replace anfinw=anfinw*4087340/4097017 if inrange(age,70,74) & female==0
replace anfinw=anfinw*3027820/3001146 if inrange(age,75,79) & female==0
replace anfinw=anfinw*2169060/2173979 if inrange(age,80,84) & female==0
replace anfinw=anfinw*1194880/1224397 if inrange(age,85,89) & female==0
replace anfinw=anfinw*524540/463619 if inrange(age,90,150) & female==0

replace anfinw=anfinw*6124980/5250466 if inrange(age,65,69) & female==1
replace anfinw=anfinw*4781940/4843444 if inrange(age,70,74) & female==1
replace anfinw=anfinw*3886940/3878674 if inrange(age,75,79) & female==1
replace anfinw=anfinw*3249940/3215654 if inrange(age,80,84) & female==1
replace anfinw=anfinw*2230480/2257969 if inrange(age,85,89) & female==1
replace anfinw=anfinw*1382160/1329677 if inrange(age,90,150) & female==1
*/

//VARIABLE CREATION/CLEANUP
gen ind_noone=n_social==0
label var ind_noone "SR nobody in social network"

sort spid wave
by spid: egen firstdem=min(cond(prob_dem==1,wave,.))

xtset spid wave
replace homebound_cat=. if nhres==1
gen homebound=homebound==1 if !missing(homebound) & !nhres
gen status=1 if sp_ivw==1 & !missing(homebound)
replace status=2 if homebound==1
replace status=3 if nhres==1
label define status 1 "Community, not HB" 2 "Homebound" 3 "NH resident" 4 ///
"Community, previously HB or NH resident"
label values status status
label var status "Status this wave"


//checking to make sure everyone has a status at wave 1
sort spid wave
by spid: gen start=1 if wave==1 & status!=.
by spid: carryforward start, replace

//checking individuals who have a missing status. 
by spid: gen mstat=1 if status==.
by spid: carryforward mstat, replace

//checking individuals who have missing wave and flagging them.
capture drop misw
by spid: gen misw=1 if wave[_n-1]!=wave-1 & wave!=1
capture drop misw1
gen misw1=misw
by spid: carryforward misw1, replace

//Dropping individuals with a missing status or a missing wave.
drop if mstat==1 // 884 obs. dropped; 294 unique individuals.
drop if misw1==1 //didn't find any. 


sort spid wave
gen hbw=wave if homebound==1 //homebound at what wave
gen nhw=wave if nhres==1 // NH at what wave
by spid, sort: egen firsthb=min(hbw) //first homebound wave for an individual
by spid, sort: egen firstnh=min(nhw) //first NH wave for an individual
gen everhb=!missing(firsthb) //if an individual was ever homebound
gen evernh=!missing(firstnh) //if an individual was ever NH
label var everhb "Ever HB"
label var evernh "Ever NH"
*drop if firsthb==1 | missing(homebou)
sort spid wave
by spid: gen hbnextwave=homebound[_n+1] //flag next wave being homebound
by spid: gen nhnextwave=nhres[_n+1] //flag next wave being NH
gen inchbnextwave=firsthb==wave+1 & homebound==0 //flag incident homebound next wave
gen incnhnextwave=firstnh==wave+1 & nhres==0 //flag incident NH next wave
replace adl_diff_ind=1 if adl_impair==1
label var adl_diff_ind "ADL difficulty or impairment"

//Which group an individual ends up in
gen wherelandgroup=1 if missing(firsthb) & missing(firstnh)
replace wherelandgroup=2 if !missing(firsthb) 
replace wherelandgroup=3 if !missing(firstnh) 
replace wherelandgroup=4 if !missing(firstnh) & firsthb<firstnh
label define wherelandgroup 1 "Never homebound or NH resident" 2 "Future HB" ///
3 "Future NH resident" 4 "Homebound, then NH"
label values wherelandgroup wherelandgroup

//Dropping waves after first homebound/NH
sort spid wave
by spid: drop if firstnh<wave
by spid: drop if firsthb<wave

//ever* var needs to be changed because later waves are dropped. 
replace everhb=0 if firsthb>firstnh
replace evernh=0 if firsthb<firstnh 


//finding next wave status 
gen nwstatus=.
forvalues i=1/6 {
replace nwstatus=r`=`i'+1'status if wave==`i'
}
tab nwstat
tab r2status
replace nwstatus=1 if inlist(nwstatus,60,63) & !missing(hbne)
replace nwstatus=4 if inlist(nwstatus,61)
replace nwstatus=6 if inlist(nwstatus,62,86)
replace nwstatus=7 if nwstatus>7
replace nwstatus=6 if died_12==1 & nwstatus==7
label define nwstatus 1 "Community, not homebound" 2 "Homebound, not incident" ///
3 "Incident homebound" 4 "NH Resident, not incident" ///
5 "Incident NH" 6 "Died" 7 "LFU"
label values nwstatus nwstatus
replace nwstatus=2 if hbne==1
replace nwstatus=3 if inchb==1
replace nwstat=4 if nhne==1
replace nwstat=5 if incnhne==1
label var nwstat "Status next wave"
replace died_12=0 if nwstatus<=5
label var died_12 "Died prior to next wave"

//generating everdied, but since we don't follow people after wave 6 we don't 
// know if they died based off NHATS data.
sort spid wave
capture drop everdied
gen everdied=1 if nwstatus==6 & wave!=7 
gsort spid -wave
by spid: carryforward everdied, replace 

//same as above explanation
capture drop everlfu
gen everlfu=1 if nwstatus==7 & wave!=7
by spid: carryforward everlfu, replace 

sort spid wave
/*gen northeast=region==1
gen midwest=region==2
gen south=region==3
gen west=region==4
label var northe "Northeast"
label var midw "Midwest"
label var south "South"
label var west "West"*/
gen sr_cond_cat=1 if sr_numcond<2
replace sr_cond_cat=2 if inrange(sr_numcond,2,4)
replace sr_cond_cat=3 if inrange(sr_numcond,5,15)
label define sr_cond_cat 1 "0-1 SR condition" 2 "2-4 SR conditions" 3 "5+ SR conditions"
label values sr_cond_cat sr_cond_cat
tab sr_cond_cat, gen(sr_cond_cat)
forvalues i=1/3 {
local lab: label sr_cond_cat `i'
label var sr_cond_cat`i' "`lab'"
}


tab wave nwstat if wave<=4, row
tab nwsta status if wave==1 

//income quartile definiton
sum income_adj
forvalues i=1/4 {
gen inccat`i'=income_quart==`i'
local lab : label income_quart `=`i''
label var inccat`i' "Income Quartile: `lab'"
}
/*label define income_quart 1 "1st Income Quartile (Low)" 2 "2nd Income Quartile" ///
3 "3rd Income Quartile" 4 "4th Income Quartile (Highest)"
label values income_quart income_quart*/



gen prob_dementia=dem_3==1 if !missing(dem_3)
label var prob_dementia "Probable dementia"

by spid, sort: gen persontime=_N
replace persontime=firsthb if firsthb<persontime
replace persontime=firstnh if firstnh<persontime
label var persontime "Waves contributing information"
gen anydebt=creditdebt==1 | medpayno==1 if !missing(creditdebt) | !missing(medpayn)
label var anydebt "Credit card or medical debt"

//important to define the last wave in community 
sort spid wave
by spid: egen lw=max(wave)
label var lw "Last Wave in the Community"


H="Code for sample characteristics"


local cvars1 age
local cvars2 n_social_network persontime income_adj n_helpers n_paid_helpers tot_hrsmonth_help_i ///
tot_hrsmonth_paid_i 
local ivars1 female whiteoth black hisp married livealone educ_hs_ind proxy ind_noone
local ivars2 ind_any_helpers ind_paid_helper top_quartile_help_helped ///
medicaid medigap srh_fp nhres ///
sr_ami_ever sr_stroke_ever sr_cancer_ever sr_hip_ever sr_heart_dis_ever ///
sr_htn_ever sr_ra_ever sr_osteoprs_ever sr_diabetes_ever sr_lung_dis_ever ///
prob_dementia dem_2_cat adl_diff_ind adl_independent iadl_diff_ind iadl_independent 
local ivars3 adl1 adl2 adl3 iadl1 iadl2 iadl3 adl_eat_help adl_bath_help adl_toil_help ///
adl_dres_help adl_ins_help adl_bed_help iadl_laun_help ///
iadl_shop_help iadl_meal_help iadl_bank_help iadl_meds_help ///
 reg_doc_seen sr_hosp_ind
gen lfunextwave=nwstatus==7
label var lfune "Lost to follow up prior to next wave"
local cvars1 age
local cvars2 persontime  income_adj
local ivars1 female white black hisp other_race married 
label var inchb "Incident Homebound Next Wave"
label var incnh "Incident Nursing Home Next Wave"
local ivars2 inccat1 inccat2 inccat3 inccat4 proxy  ///
medicaid medigap srh_fp adl_eat_help adl_bath_help adl_toil_help adl_dres_help ///
adl_ins_help adl_bed_help adl_impair iadl_impair ///
sr_cond_cat1 sr_cond_cat2 sr_cond_cat3 sr_ami_ever sr_stroke_ever sr_cancer_ever sr_hip_ever sr_heart_dis_ever ///
sr_htn_ever sr_ra_ever sr_osteoprs_ever sr_diabetes_ever sr_lung_dis_ever ///
prob_dementia dem_2_cat adl_diff_ind adl_independent inchbnextwave incnhnextwave ///
lfunextwave died_12 everhb evernh metro_ind northeast midwest south west /*///
fin_strain mealskip nopayhous nopayutil nopaymed anydebt creditdebt medpaynotcash finhlpfam meals_wheels govtasst*/

label var meals_wheels "Meals on Wheels"


//TABLE CREATION

gen n=1

preserve

mat tab=J(7,5,.)
local r=2

sum n if status==1 & wave==1 
mat tab[1,1]=r(N)
forvalues w=1/6{
sum n if nwstatus==1 & status==1 & wave==`w'
mat tab[`r',1]=r(N)
local r=`r'+1
}

local c=2
foreach i in 3 5 6 7{ 
local r=2
forvalues w=1/6{
sum n if nwstatus==`i' & status==1 & wave==`w' 
mat tab[`r',`c']=r(N)
local r=`r'+1
}
local c=`c'+1
}


mat rownames tab= "Wave 1" "Wave 2" "Wave 3" "Wave 4" "Wave 5" "Wave 6" "Wave 7"
mat colnames tab="Community" "Incident Homebound" "Incident Nursing Home" "Died" "Lost to Follow-up"

mat list tab

frmttable using sample_derivation_new.rtf, replace statmat(tab) title("Status by Wave for Original Cohort") ///
sdec(0) varlabels note("2,302 people remain in the community after the last wave" ///
"When status is missing that wave and subsequent waves are removed" )

//creating community dwelling in wave 1 category. 
gen com=1 if status==1
replace com=0 if status!=1

mat tab4=J(7,5,.)
local r=2

svy, subpop(if wave==1 & com==1): tab nwstatus
mat tab4[1,1]=e(N_subpop)

forvalues i=1/6{
svy, subpop(if wave==`i' & com==1): tab nwstatus 
//sum com [aw=anfinw] if nwstatus==1 & wave==`i'
mat tab4[`r',1]=el(e(b),1,1)*e(N_subpop)
local r=`r'+1
}

local c=2
foreach i in 3 5 6 7{ 
local r=2
forvalues w=1/6{
svy, subpop(if wave==`w' & com==1): tab nwstatus 
mat tab4[`r',`c']=el(e(b),1,`i')*e(N_subpop)
local r=`r'+1
}
local c=`c'+1
}
mat list tab4
mat rownames tab4= "Wave 1" "Wave 2" "Wave 3" "Wave 4" "Wave 5" "Wave 6" "Wave 7"
mat colnames tab4="Community" "Incident Homebound" "Incident Nursing Home" "Died" "Lost to Follow-up"
mat list tab4
frmttable using sample_derivation_new.rtf, addtable statmat(tab4) title("Weighted Percentages by Wave for Original Cohort") ///
sdec(2) varlabels note("2,302 people remain in the community after the last wave" ///
"When status is missing that wave and subsequent waves are removed" )


//Table for wave 1 characteristics and following them throughout the rounds. 
capture drop group*
gen group1=0
replace group1=1 if everhb==0 & evernh==0
gen group2=0
replace group2=1 if everhb==1 & evernh==0
gen group3=0
replace group3=1 if everhb==0 & evernh==1
gen group4=0
replace group4=1 if everdied==1 & everhb==0 & evernh==0 
gen group5=0
replace group5=1 if everlfu==1 & everhb==0 & evernh==0

keep if status==1 & wave==1
local rn : word count 1 `cvars1' `cvars2' `ivars1' `ivars2' `coutcomes' `coutcomes' `ioutcomes' 1 1
di `rn'
mat tab1=J(`rn',5,.)
mat stars=J(`rn',5,0)
local r=1
local c=1
foreach i in 1 2 3 4 5{
	foreach round in 1 2 {
		foreach x of local cvars`round' {
			qui sum `x' if group`i'==1 & wave==1  [aw=anfin]
			mat tab1[`r',`c']=r(mean)
			if inlist("`i'","2") {
				svy: reg `x' group`i' if group`i'==1 | group1==1
				test group`i'
				mat stars[`r',`c']=(r(p)<.01) + (r(p)<.05) 
}
			local r=`r'+1
}
		foreach x of local ivars`round' {
			qui sum `x' if group`i'==1 & wave==1  [aw=anfin]
			mat tab1[`r',`c']=r(mean)*100
			if inlist("`i'","2") {
				svy, subpop(if status==1 & wave==1  & group`i'==1 | group1==1): tab `x' group`i' 
				mat stars[`r',`c']=(e(p_Pear)<.01) + (e(p_Pear)<.05)
}
			local r=`r'+1
}
}
	local r=`r'+1

	
	foreach x of local coutcomes {
		qui sum `x' if group`i'==1,d
		mat tab1[`r',`c']=r(mean)
		if inlist("`i'","2") {
				svy: reg `x' group`i' if group`i'==1 | group1==1
				test group`i' group1
			mat stars[`r',`c']=(r(p)<.01) + (r(p)<.05)
}
		local r=`r'+1
*		if "`x'"=="tot_paid_by_mc_12m_wi_n0" {
			qui sum `x' if group`i'==1,d
			mat tab1[`r',`c']=r(p50)
			local r=`r'+1
*}
}
	foreach x of local ioutcomes {
		qui sum `x' if group`i'==1
		mat tab1[`r',`c']=r(mean)*100
			if inlist("`i'","2") {
				svy, subpop(if status==1 & wave==1  & group`i'==1 | group1==1): tab `x' group`i' 
				mat stars[`r',`c']=(e(p_Pear)<.01) + (e(p_Pear)<.05)
}
			local r=`r'+1
}
	qui sum n if group`i'==1 & wave==1  [aw=anfin]
	
	mat tab1[`r',`c']=r(N)
	mat tab1[`r'+1,`c']=r(sum)
	local r=1
	local c=`c'+1
}

foreach x in `coutcomes' {
local rnames `rnames' "`x'" "Median"
}
mat list tab1
mat list stars

mat rownames tab1=`cvars1' `ivars1' `cvars2' `ivars2' "_" N "Estimate"

frmttable using sample_derivation_new.rtf, addtable statmat(tab1) ///
 title("Sample Characteristics by final status") ///
 ctitles("" "Community" "HB Ever, Only" "NH Ever, Only" "Died Ever" "LFU") ///
 sdec(2) annotate(stars) asymbol(*,**) ///
 varlabels note("Waves 1 NHATS community-dwelling sample" "When status is missing that wave and subsequent waves are removed" ///
 "Highest Income: Income Quartile 4" "Individuals exit sample upon incident homebound/nursing home status, LFU, or after wave 7")
 
 restore
 
 preserve
 
 forvalues i=1/7 {
gen group`i'=nwstatus==`i'
}
 
 keep if status==1
//drop if wave==1 & status!=1
local rn : word count 1 `cvars1' `cvars2' `ivars1' `ivars2' `coutcomes' `coutcomes' `ioutcomes' 1 1
di `rn'
mat tab1=J(`rn',5,.)
mat stars=J(`rn',5,0)
local r=1
local c=1
foreach i in 1 3 5 6 7 {
	foreach round in 1 2 {
		foreach x of local cvars`round' {
			qui sum `x' if group`i'==1 & wave==1  [aw=anfin]
			mat tab1[`r',`c']=r(mean)
			if inlist("`i'","3","5","6","7") {
				svy: reg `x' group`i' if group`i'==1 | group1==1
				test group`i'
				mat stars[`r',`c']=(r(p)<.01) + (r(p)<.05) 
}
			local r=`r'+1
}
		foreach x of local ivars`round' {
			qui sum `x' if group`i'==1 & wave==1  [aw=anfin]
			mat tab1[`r',`c']=r(mean)*100
			if inlist("`i'","3","5","6","7") {
				svy, subpop(if status==1 & wave==1  & group`i'==1 | group1==1): tab `x' group`i' 
				mat stars[`r',`c']=(e(p_Pear)<.01) + (e(p_Pear)<.05)
}
			local r=`r'+1
}
}
	local r=`r'+1

	
	foreach x of local coutcomes {
		qui sum `x' if group`i'==1,d
		mat tab1[`r',`c']=r(mean)
		if inlist("`i'","3","5","6","7") {
				svy: reg `x' group`i' if group`i'==1 | group1==1
				test group`i'
			mat stars[`r',`c']=(r(p)<.01) + (r(p)<.05)
}
		local r=`r'+1
*		if "`x'"=="tot_paid_by_mc_12m_wi_n0" {
			qui sum `x' if group`i'==1,d
			mat tab1[`r',`c']=r(p50)
			local r=`r'+1
*}
}
	foreach x of local ioutcomes {
		qui sum `x' if group`i'==1
		mat tab1[`r',`c']=r(mean)*100
			if inlist("`i'","3","5","6","7") {
				svy, subpop(if status==1 & wave==1  & group`i'==1 | group1==1): tab `x' group`i' 
				mat stars[`r',`c']=(e(p_Pear)<.01) + (e(p_Pear)<.05)
}
			local r=`r'+1
}
	qui sum n if group`i'==1 & wave==1  [aw=anfin]
	
	mat tab1[`r',`c']=r(N)
	mat tab1[`r'+1,`c']=r(sum)
	local r=1
	local c=`c'+1
}

foreach x in `coutcomes' {
local rnames `rnames' "`x'" "Median"
}

mat rownames tab1=`cvars1' `ivars1' `cvars2' `ivars2' "_" N "Estimate"

frmttable using sample_derivation_new.rtf, addtable replace statmat(tab1) ///
 title("Sample Characteristics by next wave status") ///
 ctitles("" "Community"  "Incident HB"  "Incident NH" ///
 "Died" "LFU") ///
 sdec(2) annotate(stars) asymbol(*,**) ///
 varlabels note("Waves 1 NHATS community-dwelling sample, by next-wave status")
 
restore

//preserve

 capture drop group*


local cvars1 age
local cvars2 n_social_network persontime income_adj n_helpers n_paid_helpers tot_hrsmonth_help_i ///
tot_hrsmonth_paid_i 
local ivars1 female white black hisp other_race married livealone educ_hs_ind proxy ind_noone
local ivars2 ind_any_helpers ind_paid_helper top_quartile_help_helped ///
medicaid medigap srh_fp nhres ///
sr_ami_ever sr_stroke_ever sr_cancer_ever sr_hip_ever sr_heart_dis_ever ///
sr_htn_ever sr_ra_ever sr_osteoprs_ever sr_diabetes_ever sr_lung_dis_ever ///
prob_dementia dem_2_cat adl_diff_ind adl_independent iadl_diff_ind iadl_independent 
local ivars3 adl1 adl2 adl3 iadl1 iadl2 iadl3 adl_eat_help adl_bath_help adl_toil_help ///
adl_dres_help adl_ins_help adl_bed_help iadl_laun_help ///
iadl_shop_help iadl_meal_help iadl_bank_help iadl_meds_help ///
 reg_doc_seen sr_hosp_ind
label var lfune "Lost to follow up prior to next wave"
local cvars1 age
local cvars2 persontime  income_adj
local ivars1 female white black hisp other_race married 
label var inchb "Incident Homebound Next Wave"
label var incnh "Incident Nursing Home Next Wave"
local ivars2 inccat1 inccat2 inccat3 inccat4 proxy  ///
medicaid medigap srh_fp adl_eat_help adl_bath_help adl_toil_help adl_dres_help ///
adl_ins_help adl_bed_help adl_impair iadl_impair ///
sr_cond_cat1 sr_cond_cat2 sr_cond_cat3 sr_ami_ever sr_stroke_ever sr_cancer_ever sr_hip_ever sr_heart_dis_ever ///
sr_htn_ever sr_ra_ever sr_osteoprs_ever sr_diabetes_ever sr_lung_dis_ever ///
prob_dementia dem_2_cat adl_diff_ind adl_independent inchbnextwave incnhnextwave ///
lfunextwave died_12 everhb evernh metro_ind northeast midwest south west


 keep if status==1 & wave==1
//keep if status==1
local rn : word count 1 `cvars1' `cvars2' `ivars1' `ivars2' `coutcomes' `coutcomes' `ioutcomes' 1 1
di `rn'
mat tab1=J(`rn',4,.)
mat stars=J(`rn',4,0)
local r=1
local c=1

capture drop group*
forvalues i=1/4 {
gen group`i'=inccat`i'
local lab`i' : var label inccat`i'
}

forvalues i=1/4 {
	foreach round in 1 2 {
		foreach x of local cvars`round' {
			qui sum `x' if group`i'==1 & wave==1  [aw=anfin]
			mat tab1[`r',`c']=r(mean)
			if inlist("`i'", "1" ,"2","3") {
				qui ttest `x' if group`i'==1 | group4==1, by(group`i')
				mat stars[`r',`c']=(r(p)<.01) + (r(p)<.05)
}
			local r=`r'+1
}
		foreach x of local ivars`round' {
			qui sum `x' if group`i'==1 & wave==1  [aw=anfin]
			mat tab1[`r',`c']=r(mean)*100
			if inlist( "`i'", "1" ,"2","3") {
				svy, subpop(if status==1 & wave==1  & group`i'==1 | group4==1): tab `x' group`i' 
				mat stars[`r',`c']=(e(p_Pear)<.01) + (e(p_Pear)<.05)
}
			local r=`r'+1
}
}
	local r=`r'+1

	
	foreach x of local coutcomes {
		qui sum `x' if group`i'==1,d
		mat tab1[`r',`c']=r(mean)
		if inlist("`i'", "1" ,"2","3") {
			qui ttest `x' if group`i'==1 | group4==1, by(group`i')
			mat stars[`r',`c']=(r(p)<.01) + (r(p)<.05)
}
		local r=`r'+1
*		if "`x'"=="tot_paid_by_mc_12m_wi_n0" {
			qui sum `x' if group`i'==1,d
			mat tab1[`r',`c']=r(p50)
			local r=`r'+1
*}
}
	foreach x of local ioutcomes {
		qui sum `x' if group`i'==1
		mat tab1[`r',`c']=r(mean)*100
			if inlist("`i'", "1" ,"2","3") {
				svy, subpop(if status==1 & wave==1  &  group`i'==1 | group4==1): tab `x' group`i' 
				mat stars[`r',`c']=(e(p_Pear)<.01) + (e(p_Pear)<.05)
}
			local r=`r'+1
}
	qui sum n if group`i'==1 & wave==1 [aw=anfin]
	
	mat tab1[`r',`c']=r(N)
	mat tab1[`r'+1,`c']=r(sum)
	local r=1
	local c=`c'+1
}

foreach x in `coutcomes' {
local rnames `rnames' "`x'" "Median"
}

mat rownames tab1=`cvars1' `ivars1' `cvars2' `ivars2' "_" N "Estimate"


frmttable using sample_derivation_new.rtf, addtable replace statmat(tab1) ///
 title("Sample Characteristics by Income Quartile") ///
 ctitles("" "Income Quartile 1"  "Income Quartile 2"  "Income Quartile 3" ///
 "Income Quartile 4") ///
 sdec(2) annotate(stars) asymbol(*,**) ///
 varlabels note("Waves 1 NHATS community-dwelling sample, by next-wave status")


H="Code for Competing Risk Regression"
replace lw=lw+1 if everdied==1 & died_12==1
sort spid wave
replace lw=. if died_12==0 & everdied==1

gsort spid -wave
by spid: carryforward lw, replace

//ANALYSIS
//creating Incidence Table using stptime command for survival analysis 
//with lw being the time and homebound the failure. 

capture drop fail
 gen fail=0
 replace fail=1 if everhb==1
 replace fail=2 if evernh==1
 replace fail=3 if everdied==1 & fail!=1 & fail!=2
 
keep if wave==1 & status==1



local cvars1 age
local cvars2 persontime  income_adj
local ivars1 female white black hisp other_race married 
label var inchb "Incident Homebound Next Wave"
label var incnh "Incident Nursing Home Next Wave"
local ivars2 inccat1 inccat2 inccat3 proxy  ///
medicaid medigap srh_fp adl_eat_help adl_bath_help adl_toil_help adl_dres_help ///
adl_ins_help adl_bed_help adl_impair iadl_impair ///
sr_cond_cat1 sr_cond_cat2 sr_ami_ever sr_stroke_ever sr_cancer_ever sr_hip_ever sr_heart_dis_ever ///
sr_htn_ever sr_ra_ever sr_osteoprs_ever sr_diabetes_ever sr_lung_dis_ever ///
prob_dementia dem_2_cat adl_diff_ind /*inchbnextwave incnhnextwave ///
lfunextwave died_12 everhb evernh*/ metro_ind northeast midwest south
 //work on competing risk
 
 
foreach x in agecat income_quart {
levelsof `x', local(levels)
foreach l of local levels {
	gen `x'`l'=`x'==`l'
	local lab : label `x' `l'
	label var `x'`l' "`lab'"
}
}

label var agecat2 "Age 70-74"
label var agecat3 "Age 75-79"
label var agecat4 "Age 80-84"
label var agecat5 "Age 85-89"
label var agecat6 "Age 90+"

forvalues i=2/6 {
	local age `age' agecat`i'
}

forvalues i=1/3 {
	local inc `inc' income_quart`i'
}
local vars `age' ib4.income_quart /*fin_strain anydebt govtasst finhlpfam meals_wheels */ ///
female black hisp married ind_noone educ_hs_ind  ///
medicaid prob_dem `cond' adl_diff_ind srh_fp i.sr_cond_cat ///
ind_paid_helper metro_ind northeast midwest south

 stset lw [pw=anfinw], failure(fail==1) id(spid)

 stcrreg `age' ib4.income_quart female black hisp married, compete(fail==2 3) 
 outreg using homebound_income_comp_risk, replace ///
 stats(e_b p e_ci) varlabels note("*Competing Risks are Nuring Home and Dying") ///
 ctitles("" "HB Subhazard Ratio (1)"  )
 
  stcrreg `vars', compete(fail==2 3) 
 outreg using homebound_income_comp_risk, replace ///
 stats(e_b p e_ci) varlabels note("*Competing Risks are Nuring Home and Dying") ///
 ctitles("" "HB Subhazard Ratio (2)"  ) merge
 
 
  stcurve, cif at1(income_quart=1) at2(income_quart=2) at3(income_quart=3) ///
  at4(income_quart=4) connect(direct) legend(label(1 "Income Quartile 1 (Lowest)") label(2 "Income Quartile 2") ///
  label(3 "Income Quartile 3") label(4 "Income Quartile 4 (Highest)")) note("Competing Risks are Nursing Home and Dying") ///
  xtitle("Analysis Time")
  
 graph save nh_die, replace
 graph export nh_die.pdf, replace
 
 
 //stcompet...
 
  capture drop cuminc*
  capture drop ci*
  capture drop complement*
  capture drop KM*
  
  stset lw, failure(fail==1)
  sts gen KM=s
  gen complement=1-KM
  stcompet cuminc=ci, compet1(2) compet2(3)
  
  gen ci=cuminc if fail==1
  replace ci=0 if lw==1 & ci==.
  twoway line complement ci lw, sort xlabel(0(1)7)
  
  stset lw, failure(fail==2)
  sts gen KM1=s
  gen complement1=1-KM1
  stcompet cuminc1=ci, compet1(1) compet2(3)
  gen ci1=cuminc1 if fail==2
    replace ci1=0 if lw==1 & ci1==.
  twoway line complement ci ci1 lw, sort xlabel(0(1)7)
  
  
  stset lw, failure(fail==3)
  sts gen KM2=s
  gen complement2=1-KM2
  stcompet cuminc2=ci, compet1(1) compet2(2)
  gen ci2=cuminc2 if fail==3
  replace ci2=0 if lw==1 & ci2==.
  
  
  stset lw, failure(fail==1 2 3)
  sts gen KM3=s
  gen complement3=1-KM3
  //stcompet cuminc3=ci
 //gen ci3=cuminc3 if fail>0
  
  egen ci3=rowtotal(cuminc cuminc1 cuminc2), missing 
    replace ci3=0 if lw==1 & ci3==.
  bys lw: egen ci4=mean(ci3)
  twoway line ci ci1 ci2 ci4 lw, sort xlabel(1(1)7) ytitle("Probability") ///
  xtitle("Time") legend(label(1 "CIF HB") label(2 "CIF NH") ///
  label(3 "CIF Died") label(4 "CIF All")) title("Cumulative Incidence by Failure type")
   graph save km_cif, replace
 graph export km_cif.pdf, replace
 
  


H="Code for by wave incident homebound"


//ANALYSIS
//creating Incidence Table using stptime command for survival analysis 
//with lw being the time and homebound the failure. 

capture drop fail
 gen fail=0
 replace fail=1 if everhb==1
 replace fail=2 if evernh==1
 replace fail=3 if everdied==1 & fail!=1 & fail!=2
preserve 
keep if wave==1 & status==1

bys lw: sum everhb [aw=anfinw] 
 //rename wave wave1
 //rename lw wave
 
// gen weight=anfinwgt
 //replace anfinwgt=an2011wgt if wave==5 | wave==6
 
  stset lw [pw=anfinwgt], failure(fail==1) id(spid)
 stptime, at(0(1)7) output(stp, replace)
  stset lw, failure(fail==1) id(spid)
 stptime, at(0(1)7) output(stp1, replace)
 restore
 preserve
 
 //stp is weighted
 use stp.dta, clear
mat tab=J(6,6,.)
local r=1
local c=1
 forvalues i=1/6{
 mat tab[`r',`c']=`i'
 sum _D if _group==`i'
 mat tab[`r',`c'+1]=r(mean)
 sum _Rate if _group==`i'
 mat tab[`r',`c'+3]=r(mean)
  sum _Lower if _group==`i'
 mat tab[`r',`c'+4]=r(mean)
  sum _Upper if _group==`i'
 mat tab[`r',`c'+5]=r(mean)
 local r=`r'+1
 }
 
 //stp1 is unweighted
  use stp1.dta, clear
 local r=1
  forvalues i=1/6{
 sum _D if _group==`i'
 mat tab[`r',`c'+2]=r(mean)

 local r=`r'+1
 }
  
  mat colnames tab="Wave" "Weighted Failures" "Failures" "Rate" "Lower 95% CI" "Upper 95% CI"
  mat list tab 
  
  frmttable using incidence_rate.doc, replace statmat(tab) sdec(0,0,0,4,4,4\ ///
  0,0,0,4,4,4\ 0,0,0,4,4,4\ 0,0,0,4,4,4\ 0,0,0,4,4,4) title("Incidence table for Homebound") ///
  note("Survival Analysis using Incident Homebound as failure") 
  
  restore

keep if inrange(homebound_cat,2,4)
 tab wave
 gen n=1
 mat tab=J(6,6,.)
 local r=1
 
 forvalues i=1/6 {
	qui sum n if wave==`i' [aw=anfinw]
	mat tab[`r',2]=r(N)
	mat tab[`r',3]=r(sum_w)
	mat tab[`r',4]=0
	mat tab[`r',5]=0
	mat tab[`r',6]=0
	local r=`r'+1
}

local r=1
forvalues i=1/6{
	sum n if wave==`i' & nwstat==3
 mat tab[`r',4]=r(N)	
	svy, subpop(if wave==`i' & nwstat!=7): tab nwstat
	mat results=e(b)
	mat tab[`r',5]=results[1,2]*tab[`r',3]
	mat tab[`r',6]=results[1,2]*100
	local r=`r'+1
}


log using annual_homebound_incidence.txt, text replace
frmttable, statmat(tab) store(tab1) ctitles("Time period" "" "Community dwelling sample" ///
"Community dwelling estimate at start" "Incident homebound sample" "Incident HB estimate" ///
"Incident HB %") sdec(0,0,0,0,0,2,3) ///
note("Community dwelling sample includes LFU prior to next wave" ///
"Incident HB % is percentage of prior wave, excluding LFU from denominator" ///
"HB estimate is HB %*nat'l estimate at prior wave (including LFU)") ///
rtitles("1-2"\"2-3"\"3-4"\"4-5"\"5-6"\"6-7")

svy, subpop(if nwstat!=7): tab wave nwstatus, row ci
log close







H="CI and IR new 4/4"

tab status if wave==1
local p=r(N)
tab status if wave==2

//cumulative incidence

gen n=1 

mat tab=J(6,2,.)
local r=1
local c=1

forvalues i=1/6{
sum n if status==1 & wave==`i'
local a=r(N)
sum n if nwstatus==7 & wave==`i'
local d=r(N)
sum n if status==2 & wave==`i'+1
local b=r(N)
mat tab[`r',`c']=(`b'/(`a'-`d'))*100
local r=`r'+1
}
mat list tab

local r=1
local c=1

forvalues i=1/6{
sum n [aw=anfinw] if status==1 & wave==`i'
local a=r(sum_w)
sum n [aw=anfinw] if status==2 & wave==`i'+1
local b=r(sum_w)
mat tab[`r',`c'+1]=(`b'/`a')*100
local r=`r'+1
}
mat list tab
mat rownames tab="1-2" "2-3" "3-4" "4-5" "5-6" "6-7"
  mat colnames tab="Unweighted Cumulative Incidence" "Weighted Cumulative Incidence"
  mat list tab 
  
  frmttable using incidence.doc, replace statmat(tab) title("Cumulative Incidence for Homebound")


//incidence rate

capture drop fail
 gen fail=0
 replace fail=1 if everhb==1
 replace fail=2 if evernh==1
 replace fail=3 if everdied==1 & fail!=1 & fail!=2
preserve 
keep if wave==1 & status==1


  stset lw [pw=anfinwgt], failure(fail==1) id(spid)
 stptime,  output(stp, replace) 
  stset lw, failure(fail==1) id(spid)
 stptime,  output(stp1, replace)
 restore
 preserve
 
 //stp is weighted
 use stp.dta, clear
mat tab=J(1,4,.)

 sum _D  
 mat tab[1,1]=r(mean)
 sum _Rate 
 mat tab[1,2]=r(mean)
  sum _Lower 
 mat tab[1,3]=r(mean)
  sum _Upper 
 mat tab[1,4]=r(mean)
 
 mat rownames tab="Total"
  mat colnames tab="Weighted Failures" "Incidence Rate" "Lower 95% CI" "Upper 95% CI"
  mat list tab 
  
  frmttable using incidence.doc, replace statmat(tab) sdec(0,4,4,4) title("Incidence table for Homebound Weighted") ///
  note("IR is weighted") addtable 

 
 
 
 //stp1 is unweighted
  use stp1.dta, clear
mat tab=J(1,4,.)

 sum _D 
 mat tab[1,1]=r(mean)
 sum _Rate 
 mat tab[1,2]=r(mean)
  sum _Lower 
 mat tab[1,3]=r(mean)
  sum _Upper 
 mat tab[1,4]=r(mean)
  
   mat rownames tab="Total"
  mat colnames tab="Failures" "Incidence Rate" "Lower 95% CI" "Upper 95% CI"
  mat list tab 
  
  frmttable using incidence.doc, replace statmat(tab) sdec(0,4,4,4) title("Incidence table for Homebound Unweighted") ///
  note("IR is uwweighted") addtable 


H="changelog"


********************Change Log******************** 



Updates:

04/04/2019 MH
------------
New Cumulative Incidence rate per wave and Incidence Rate over full time period. 

03/08/2019 MH
------------
Cleaned some code, added notes, using whiteoth variable in tables. 

02/20/2019 MH
------------
Updated for round 7 data. No new analysis done. 

*/