= V4 Outline MultiLine NoSorting TabWidth=30

H="Not using Original Code anymore"


H="Original code"
clear all 
set more off
capture log close

local datapath "E:\nhats\data\Projects\pal_perf_scale\final_data"
local logpath "E:\nhats\data\Projects\Caregivers\logs"

log using "`logpath'\EOL_utilization_CGs.txt", text replace

use "`datapath'\pps_sample.dta" if !nhres & died_12

svyset [pw=anfin]

gen mult_hosp_adm_p12m=n_ip_admit_p12m>=2 & !missing(n_ip_admit_p12m)
gen ind_ed_p12m=ind_ed_adm_p12m==1 | ind_ed_op_p12m==1

local byvars ind_hs_p12m ind_hosp_adm_p12m mult_hosp_adm_p12m ind_icu_p12m ///
ind_ed_p12m 

gen ind_help_any=n_helpers>=1
label var mult_hosp "Multiple hospital admissions, p12m"
label var ind_ed_p12m "Any ED use, p12m"
label var ind_help_any "Any helpers"
gen n=1
/*
foreach x of local byvars {
	svy: tab `x'
}

foreach x of local byvars {
	local lab : var label `x'
	di "`lab'"
	sum ind_help_any ind_paid_helper n_helpers n_paid_helpers if `x'==0
	sum ind_help_any ind_paid_helper n_helpers n_paid_helpers if `x'==1
}

foreach x of local byvars {
	local lab : var label `x'
	di "`lab'"
	foreach y in ind_help_any ind_paid_helper {
		svy: tab `x' `y', row col 
}
	foreach y in n_helpers n_paid_helpers {
		svy: reg `y' `x' 
}
}
*/
//table



local rn : word count `byvars' n

mat tab=J(`rn',3,.)
local r=1
local c=1

foreach x in `byvars' n {
	sum `x' 
	mat tab[`r',1]=r(mean)*r(N)
	sum `x' [aw=anfinw]
	mat tab[`r',2]=r(sum)
	mat tab[`r',3]=r(mean)*100
	local r=`r'+1
}

label var n "Full Sample"
label var ind_hs_p12m "Any hospice use 12m post ivw"
label var ind_icu_p12m "Any ICU use 12m post ivw"

mat rownames tab=`byvars' n

frmttable using "`logpath'\EOL_utilization.rtf", replace statmat(tab) ctitles("" "N Yes" "Estimate Yes" "% Yes") ///
title("EOL Utilization") note("Restricted to wave 1 SPs with 6m FFS who die within 12m" ///
"All utilization measures are post-interview") ///
sdec(0,0,2) varlabels 

local rn : word count `byvars'

mat tab=J(`rn',24,.)
mat stars=J(`rn',24,0)
local r=1
local c=1


foreach x of local byvars {
	foreach y in ind_help_any ind_paid_helper {
		foreach i in 0 1 {
			sum `y' if `x'==`i' [aw=anfin]
			mat tab[`r',`c']=r(mean)*100
			local c=`c'+3
}
		svy: tab `x' `y'
		mat tab[`r',`c'-1]=e(p_Pear)
		mat stars[`r',`c'-1]=(e(p_Pear)<.05)+(e(p_Pear)<.01)

}
	foreach y in n_helpers n_paid_helpers {
		foreach i in 0 1 {
			sum `y' if `x'==`i' [aw=anfin]
			mat tab[`r',`c']=r(mean)
			mat tab[`r',`c'+1]=r(sd)
			local c=`c'+3
}
			svy: reg `y' `x'
			test
			mat tab[`r',`c'-1]=r(p)
			mat stars[`r',`c'-1]=(r(p)<.05)+(r(p)<.01)
}
	/*foreach i in 0 1 {
		sum n if `x'==`i'
		mat tab[`r',`c']=r(mean)*r(N)
		sum n if `x'==`i' [aw=anfin]
		mat tab[`r',`c'+1]=r(sum)
		local c=`c'+3
}*/
	local c=1
	local r=`r'+1

}

mat rownames tab=`byvars'

frmttable using "`logpath'\EOL_utilization.rtf", addtable statmat(tab) title("Helpers, by EOL utilization") ///
note("All utilization measures are post-interview") ///
ctitles("" "Any helpers" "" "Any paid helpers" "" "# helpers" "" ///
 "# paid helpers"  "" /*"N (estimate)"*/\ "" "No" "Yes" "No" "Yes" "No"  "Yes" "No" "Yes" ///
 /*"No" "Yes"*/) ///
sdec(2) substat(2) annotate(stars) asymbol(*,**) varlabels

	
merge 1:m spid using "E:\nhats\data\NHATS cleaned\nsoc_round_1.dta", keep(match)
svyset [pw=cgfin]

foreach x of varlist gain_* {
	local gain `gain' `x'
}

foreach x of varlist neg_* {
	local neg `neg' `x'
}

sum total_hours [aw=cgfin],d
gen top_quartile_hours=total_hours>=r(p75)
label var top_quartile_hours "Top quartile hours helping"

local cg top_quartile_hours cg_srh_pf `gain' `neg' cg_phq2_depressed

sum `cg'

foreach x of local byvars {
	local lab : var label `x'
	di "`lab'"
	foreach y of local cg {
		svy: tab `x' `y', row col
}
}
 //tables
 
 local rn : word count `byvars' `cg' n

mat tab=J(`rn',3,.)
local r=1
local c=1

foreach x in `byvars' `cg' n {
	sum `x' 
	mat tab[`r',1]=r(mean)*r(N)
	sum `x' [aw=cgfinw]
	mat tab[`r',2]=r(sum)
	mat tab[`r',3]=r(mean)*100
	local r=`r'+1
}

label var n "Full Sample"
label var ind_hs_p12m "Any hospice use 12m post ivw"
label var ind_icu_p12m "Any ICU use 12m post ivw"

mat rownames tab= `byvars' `cg' n

frmttable using "`logpath'\EOL_utilization.rtf", addtable statmat(tab) ctitles("" "N Yes" "Estimate Yes" "% Yes") ///
title("EOL Utilization") note("Wave 1 NSOC EOL CGs whose SP has 6m FFS") ///
sdec(0,0,2) varlabels

 local rn : word count `cg' 

mat tab=J(`rn',15,.)
mat stars=J(`rn',15,0)
local r=1
local c=1
foreach y of local cg {
	foreach x of local byvars {
		foreach i in 0 1 {
			sum `y' if `x'==`i' [aw=cgfin]
			mat tab[`r',`c']=r(mean)*100
			local c=`c'+1
}
		svy: tab `x' `y'
		mat tab[`r',`c']=e(p_Pear)
		mat stars[`r',`c']=(e(p_Pear)<.05)+(e(p_Pear)<.01)
		local c=`c'+1
}
	local c=1
	local r=`r'+1
}

mat rownames tab=`cg'

frmttable using "`logpath'\EOL_utilization.rtf", addtable statmat(tab) ctitles("" "" "Hospice" "" "" "Any Adm" "" "" "Mult Adm" ///
"" "" "ICU" "" "" "ED" "" \ "" "No" "Yes" "P" "No" "Yes" "P" "No" "Yes" "P" ///
"No" "Yes" "P") ///
sdec(2) varlabels
	

log close


H="newer"
clear all
set more off
capture log close


local datapath "E:\nhats\data\projects\serious_ill\final_data"
cd `datapath'
local logpath "E:\nhats\data\projects\caregivers\logs"
cd `logpath'


use "E:\nhats\data\nhats cleaned\op_round_1_6.dta" if wave<=3, clear
replace prim_helper_cat=op_relations if prim_==1
label values prim_helper_cat op_relationship_cat
keep if prim_==1
by spid wave, sort: egen hasspouse=max(spouse)
drop if hasspouse & !spouse
gen kid=inrange(prim_,2,3)
by spid wave, sort: egen haskid=max(kid)
drop if haskid & !kid
gen othfm=prim_==4
by spid wave, sort: egen hasoth=max(othfm)
drop if hasoth & !othfm
gen friend=prim_h==6
by spid wave, sort: egen hasfriend=max(friend)
drop if hasfr & !friend
duplicates drop spid wave prim_helper, force
keep spid prim_helper_cat wave
by spid wave, sort: replace prim_=7 if _N>1
by spid wave: keep if _n==1
label define op_relationship_cat 7 "Son and daughter tied", modify
tempfile op
save `op'

use "E:\nhats\data\nhats cleaned\op_round_1_6.dta" if wave<=3, clear
replace prim_helper_cat=op_relations if primary_cg==1
label values prim_helper_cat op_relationship_cat
keep if primary_cg==1
by spid wave, sort: egen hasspouse=max(spouse)
drop if hasspouse & !spouse
gen kid=inrange(prim_,2,3)
by spid wave, sort: egen haskid=max(kid)
drop if haskid & !kid
gen othfm=prim_==4
by spid wave, sort: egen hasoth=max(othfm)
drop if hasoth & !othfm
gen friend=prim_h==6
by spid wave, sort: egen hasfriend=max(friend)
drop if hasfr & !friend
duplicates drop spid wave prim_helper, force
keep spid prim_helper_cat wave
by spid wave, sort: replace prim_=7 if _N>1
by spid wave: keep if _n==1
label define op_relationship_cat 7 "Son and daughter tied", modify
tempfile op
save `op'

use `datapath'\serious_ill_nhats_sample.dta if wave<=3 & sp_ivw==1 & !lml & ///
n_helper>=1  & !nhres, clear
duplicates drop spid wave hs_los, force
drop prim*
merge 1:1 spid wave using `op'
/*identify the group we want to use subpop command
 -die w/in 12m (for the 14 who have 2 ivws in the year prior to death, take the earlier one)
 -no use of hs pre ivw
 -ffs not important because all HS claims are visible
 */
 
gen hs_prior=first_hs<ivw_date
gen pop=died_12==1 & !hs_prior 
sort spid pop ivw_date
by spid pop: replace pop=0 if _n>1 & pop==1
duplicates report spid if pop
//reweight so later waves aren't overweighted
gen orig_weight=anfinw
sum anfinw if wave==1
local w=r(mean)
forvalues i=1/3 {
sum anfinw if wave==`i'
replace anfinw=anfinw*`w'/r(mean) if wave==`i'
}
svyset varunit [pw=anfinw],strat(varstrat)

gen ind_hs=!missing(first_hs)
sum hs_los if pop,d
replace hs_los=0 if !ind_hs
tab hs_prior if pop
tab ind_hs if pop
*hist hs_los if pop
gen ind_help=n_helpers>0
tab ind_help if pop
gen hrswk_20=tot_hrswk_help_i>=20 & !missing(tot_hrswk_help_i)
gen ind_4_help=n_helpers>=4
label var hrswk_20 "20+ hours of help per week (all sources)"
label var ind_4_help "4+ helpers (incl. paid CGs)"
label var ind_help "Any helpers"
gen ind_solo_inf=n_help==n_paid+1
label var ind_solo_inf "Has solo informal caregiver"
gen ind_solo_solo=n_help==1 & n_paid==0
label var ind_solo_s "Has solo inf. & no paid CGs"
levelsof prim_, local(levels)
local prim
foreach l of local levels {
gen prim`l'=prim_==`l'
local lab : label op_relationship_cat `l'
label var prim`l' "Primary helper : `lab'"
local prim `prim' prim`l'
}
gen prim8=n_helpers==0
label var prim8 "No helpers listed"
local prim `prim' prim8
forvalues i=1/4 {
local lab : label region `i'
gen `lab'=region==`i'
label var `lab' "`lab'"
rename `lab', l
}
gen n=1
//table 1
gen onlypaid=n_paid==n_help
label var onlypaid "Paid caregivers only"
gen ind_noone=n_social==0
label var ind_noone "Nobody in social network"
local cvars1 age
local cvars2 aveincome
local cvars3 sr_numconditions1 n_helpers tot_hrswk_help_i
local ivars1 female white black hisp other_race married livealone ind_noone ///
educ_hs_ind medicaid medigap
local ivars2 creditdebt medpaynotcash govtasst proxy srh_fp 
local ivars3 ind_help ind_paid_helper ind_solo_inf ind_4_help hrswk_20 `prim' ///
adl_eat_help adl_bath_help adl_toil_help adl_dres_help ///
adl_ins_help adl_bed_help adl_impair iadl_impair ///
metro_ind northeast midwest south

gen full_samp=1


//for unweighted, just keep the population
keep if pop==1

label var full_samp "Full 12m mortality"
local colvars /*ind_solo_inf ind_solo_solo*/ onlypaid hrswk_20 ind_4_help 
tokenize `colvars'

local rn : word count `cvars1' `ivars1' `cvars2' `ivars2' `cvars3' `ivars3' 1

mat tab=J(`rn',4,.)
mat stars=J(`rn',4,0)
local r=1
local c=1

foreach group in "0,1" 0 1 {
	forvalues i=1/3 {
		foreach x of local cvars`i' {
			sum `x' if inlist(ind_hs,`group')
			mat tab[`r',`c']=r(mean)
			if "`group'"=="1" {
				ttest `x', by(ind_hs)
				mat tab[`r',`c'+1]=r(p)
				mat stars[`r',`c'+1]=(r(p)<.05)+(r(p)<.01)
}
			local r=`r'+1
}
		foreach x of local ivars`i' {
			sum `x' if inlist(ind_hs,`group')
			mat tab[`r',`c']=r(mean)*100
			if "`group'"=="1" {
				tab `x' ind_hs, chi2
				mat tab[`r',`c'+1]=r(p)
				mat stars[`r',`c'+1]=(r(p)<.05)+(r(p)<.01)
}
			local r=`r'+1
}
}
	sum n if inlist(ind_hs,`group')
	mat tab[`r',`c']=r(N)
	local r=1
	local c=`c'+1
}

mat rownames tab=`cvars1' `ivars1' `cvars2' `ivars2' `cvars3' `ivars3' N

frmttable using eol_cg_hs_table_1.rtf, replace statmat(tab) title("Sample Characteristics by Hospice Use") ///
ctitles("" "Full Sample" "No Hospice" "Yes Hospice" "P") varlabels ///
note("Waves 1-3 NHATS community-dwelling sample with 12m mortality and no hospice prior to ivw" ///
"If multiple ivws in 12m prior to death, earliest is taken" ///
"P-values diff. btwn Yes/No hospice, unweighted sample") annotate(stars) ///
asymbol(*,**)


mat tab=J(`rn',8,.)
mat stars=J(`rn',8,0)

local r=1
local c=1

forvalues group=1/3 {
	gen group`group'=``group''==1
	forvalues i=1/3 {
		foreach x of local cvars`i' {
			sum `x' if inlist(group`group',1)
			mat tab[`r',`c']=r(mean)
*			if "`group'"=="1" {
				ttest `x', by(group`group')
				mat tab[`r',`c'+1]=r(p)
				mat stars[`r',`c'+1]=(r(p)<.05)+(r(p)<.01)
*}
			local r=`r'+1
}
		foreach x of local ivars`i' {
			sum `x' if inlist(group`group',1)
			mat tab[`r',`c']=r(mean)*100
*			if "`group'"=="1" {
				tab `x' group`group', chi2
				mat tab[`r',`c'+1]=r(p)
				mat stars[`r',`c'+1]=(r(p)<.05)+(r(p)<.01)
*}
			local r=`r'+1
}
}
	sum n if inlist(group`group',1)
	mat tab[`r',`c']=r(N)
	local r=1
	local c=`c'+2
}

mat rownames tab=`cvars1' `ivars1' `cvars2' `ivars2' `cvars3' `ivars3' N
mat colnames tab=`1' P `2' P `3' P `4' P
frmttable using eol_cg_hs_table_1.rtf, addtable statmat(tab) ///
title("Sample Characteristics By CG Resources/Use") varlabels ///
note("Waves 1-3 NHATS community-dwelling sample with 12m mortality and no hospice prior to ivw" ///
"If multiple ivws in 12m prior to death, earliest is taken" ///
"P-values diff. btwn Yes/No for each indicator, unweighted sample") annotate(stars) ///
asymbol(*,**)

mat tab=J(5,3,.)
mat stars=J(5,3,0)

local r=1
local c=1

foreach x in `colvars' {
	forvalues i=0/1 {
		sum ind_hs if `x'==`i'
		mat tab[`r',`i'+1]=r(mean)*100
}
	*tab ind_hs `x', chi2
	ttest `x', by(ind_hs)
	mat tab[`r',3]=r(p)
	mat stars[`r',3]=(r(p)<.05)+(r(p)<.01)
	local r=`r'+1
}
mat rownames tab=`colvars'

frmttable using eol_cg_hs_table_1.rtf, addtable statmat(tab) ///
title("Hospice Use by CG Resources/Use") varlabels ///
ctitles("" "No hospice" "Yes Hospice" "P") sdec(2) annotate(stars) asymbol(*,**) 
