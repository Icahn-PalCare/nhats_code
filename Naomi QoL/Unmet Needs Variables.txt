/**Define all Adverse Consequences of unmet need*/
proc import out=round1 datafile="E:\nhats\data\NHATS Public\round_1\NHATS_Round_1_SP_File_stata12.dta"
dbms=dta replace;
run;

proc import out=round2 datafile="E:\nhats\data\NHATS Public\round_2\NHATS_Round_2_SP_File_stata12.dta"
dbms=dta replace;
run;

proc import out=round3 datafile="E:\nhats\data\NHATS Public\round_3\NHATS_Round_3_SP_File_stata12.dta"
dbms=dta replace;
run;

proc import out=round4 datafile="E:\nhats\data\NHATS Public\round_4\NHATS_Round_4_SP_File_stata12.dta"
dbms=dta replace;
run;

proc import out=round5 datafile="E:\nhats\data\NHATS Public\round_5\NHATS_Round_5_SP_File_stata12.dta"
dbms=dta replace;
run;

proc import out=round6 datafile="E:\nhats\data\NHATS Public\round_6\NHATS_Round_6_SP_File_stata12.dta"
dbms=dta replace;
run;


data round1; set round1; 
keep 
spid wave
sc1eathlp sc1eatslfdif sc1eatwout
sc1bathhlp sc1bathdif sc1bathwout
sc1toilhlp sc1toildif sc1toilwout
sc1dreshlp sc1dresdif sc1dreswout
mo1outhlp mo1outdif  mo1outwout
mo1insdhlp mo1insddif mo1insdwout
mo1bedhlp mo1beddif mo1bedwout
ha1launwout ha1laun  ha1dlaunreas  ha1laundif
ha1shopwout ha1shop  ha1dshopreas  ha1shopdif 
ha1mealwout ha1meal ha1dmealreas ha1mealdif
mc1medsmis mc1meds mc1medstrk  mc1medsdif mc1medsslf   mc1dmedsreas;
run; 

data round2; set round2; 
wave=2;
keep 
spid wave
sc2eathlp sc2eatslfdif sc2eatwout
sc2bathhlp sc2bathdif sc2bathwout
sc2toilhlp sc2toildif sc2toilwout
sc2dreshlp sc2dresdif sc2dreswout
mo2outhlp mo2outdif  mo2outwout
mo2insdhlp mo2insddif mo2insdwout
mo2bedhlp mo2beddif mo2bedwout
ha2launwout ha2laun  ha2dlaunreas  ha2laundif
ha2shopwout ha2shop  ha2dshopreas  ha2shopdif 
ha2mealwout ha2meal ha2dmealreas ha2mealdif
mc2medsmis mc2meds mc2medstrk  mc2medsdif mc2medsslf   mc2dmedsreas;
run; 

data round3; set round3; 
wave=3;
keep 
spid wave
sc3eathlp sc3eatslfdif sc3eatwout
sc3bathhlp sc3bathdif sc3bathwout
sc3toilhlp sc3toildif sc3toilwout
sc3dreshlp sc3dresdif sc3dreswout
mo3outhlp mo3outdif  mo3outwout
mo3insdhlp mo3insddif mo3insdwout
mo3bedhlp mo3beddif mo3bedwout
ha3launwout ha3laun  ha3dlaunreas  ha3laundif
ha3shopwout ha3shop  ha3dshopreas  ha3shopdif 
ha3mealwout ha3meal ha3dmealreas ha3mealdif
mc3medsmis mc3meds mc3medstrk  mc3medsdif mc3medsslf   mc3dmedsreas;
run; 

data round4; set round4; 
wave=4;
keep 
spid wave
sc4eathlp sc4eatslfdif sc4eatwout
sc4bathhlp sc4bathdif sc4bathwout
sc4toilhlp sc4toildif sc4toilwout
sc4dreshlp sc4dresdif sc4dreswout
mo4outhlp mo4outdif  mo4outwout
mo4insdhlp mo4insddif mo4insdwout
mo4bedhlp mo4beddif mo4bedwout
ha4launwout ha4laun  ha4dlaunreas  ha4laundif
ha4shopwout ha4shop  ha4dshopreas  ha4shopdif 
ha4mealwout ha4meal ha4dmealreas ha4mealdif
mc4medsmis mc4meds mc4medstrk  mc4medsdif mc4medsslf   mc4dmedsreas;
run; 

data round5; set round5; 
wave=5;
keep 
spid wave
sc5eathlp sc5eatslfdif sc5eatwout
sc5bathhlp sc5bathdif sc5bathwout
sc5toilhlp sc5toildif sc5toilwout
sc5dreshlp sc5dresdif sc5dreswout
mo5outhlp mo5outdif  mo5outwout
mo5insdhlp mo5insddif mo5insdwout
mo5bedhlp mo5beddif mo5bedwout
ha5launwout ha5laun  ha5dlaunreas  ha5laundif
ha5shopwout ha5shop  ha5dshopreas  ha5shopdif 
ha5mealwout ha5meal ha5dmealreas ha5mealdif
mc5medsmis mc5meds mc5medstrk  mc5medsdif mc5medsslf   mc5dmedsreas;
run; 

data round6; set round6; 
wave=6;
keep 
spid wave
sc6eathlp sc6eatslfdif sc6eatwout
sc6bathhlp sc6bathdif sc6bathwout
sc6toilhlp sc6toildif sc6toilwout
sc6dreshlp sc6dresdif sc6dreswout
mo6outhlp mo6outdif  mo6outwout
mo6insdhlp mo6insddif mo6insdwout
mo6bedhlp mo6beddif mo6bedwout
ha6launwout ha6laun  ha6dlaunreas  ha6laundif
ha6shopwout ha6shop  ha6dshopreas  ha6shopdif 
ha6mealwout ha6meal ha6dmealreas ha6mealdif
mc6medsmis mc6meds mc6medstrk  mc6medsdif mc6medsslf   mc6dmedsreas;
run; 

data unmet; set round1 round2 round3 round4 round5 round6; run;
proc freq data=unmet; tables wave; run;


data unmet1; set unmet;
if wave=1 then wave=1;
if wave=2 then wave=2;
if wave=3 then wave=3;
if wave=4 then wave=4;
if wave=5 then wave=5;
if wave=6 then wave=6;

/*Self care tasks*/
array eathlp{6} sc1eathlp sc2eathlp sc3eathlp sc4eathlp sc5eathlp sc6eathlp;
array eatdif{6} sc1eatslfdif sc2eatslfdif sc3eatslfdif sc4eatslfdif sc5eatslfdif sc6eatslfdif;
array eatwout{6} sc1eatwout sc2eatwout sc3eatwout sc4eatwout sc5eatwout sc6eatwout;

array bathhlp{6} sc1bathhlp sc2bathhlp sc3bathhlp sc4bathhlp sc5bathhlp sc6bathhlp;
array bathdif{6} sc1bathdif sc2bathdif sc3bathdif sc4bathdif sc5bathdif sc6bathdif;
array bathwout{6} sc1bathwout sc2bathwout sc3bathwout sc4bathwout sc5bathwout sc6bathwout;

array toilhlp{6} sc1toilhlp sc2toilhlp sc3toilhlp sc4toilhlp sc5toilhlp sc6toilhlp;
array toildif{6} sc1toildif sc2toildif sc3toildif sc4toildif sc5toildif sc6toildif;
array toilwout{6} sc1toilwout sc2toilwout sc3toilwout sc4toilwout sc5toilwout sc6toilwout;


array dreshlp{6} sc1dreshlp sc2dreshlp sc3dreshlp sc4dreshlp sc5dreshlp sc6dreshlp;
array dresdif{6} sc1dresdif sc2dresdif sc3dresdif sc4dresdif sc5dresdif sc6dresdif;
array dreswout{6} sc1dreswout sc2dreswout sc3dreswout sc4dreswout sc5dreswout sc6dreswout;

do i=1 to 6;
if wave=i then do;
adverse_eat=.;
if (eathlp(i)=2 and eatdif(i)=1) or eatwout(i)=2 then adverse_eat=0; 
if eatwout(i)=1 then adverse_eat=1;

adverse_bath=.;
if (bathhlp(i)=2 and bathdif(i)=1) or bathwout(i)=2 then adverse_bath=0;
if bathwout(i)=1 then adverse_bath=1;

adverse_toilet=.;
if (toilhlp(i)=2 and toildif(i)=1) or toilwout(i)=2 then adverse_toilet=0;
if toilwout(i)=1 then adverse_toilet=1;

adverse_dress=.;
if (dreshlp(i)=2 and dresdif(i)=1) or dreswout(i)=2 then adverse_dress=0;
if dreswout(i)=1 then adverse_dress=1;

if adverse_eat=1 or adverse_bath=1 or adverse_toilet=1 or adverse_dress=1 then adverse_sc=1;
if adverse_eat=0 and adverse_bath=0 and adverse_toilet=0 and adverse_dress=0 then adverse_sc=0;

end;
end;

/*Mobility Tasks*/
array moouthlp {6} mo1outhlp mo2outhlp mo3outhlp mo4outhlp mo5outhlp mo6outhlp;
array mooutdif{6} mo1outdif mo2outdif mo3outdif mo4outdif mo5outdif mo6outdif;
array mooutwout{6} mo1outwout mo2outwout mo3outwout mo4outwout mo5outwout mo6outwout;

array moinsdhlp{6} mo1insdhlp mo2insdhlp mo3insdhlp mo4insdhlp mo5insdhlp mo6insdhlp;
array moinsddif{6} mo1insddif mo2insddif mo3insddif mo4insddif mo5insddif mo6insddif;
array moinsdwout{6} mo1insdwout mo2insdwout mo3insdwout mo4insdwout mo5insdwout mo6insdwout;

array mobedhlp{6} mo1bedhlp mo2bedhlp mo3bedhlp mo4bedhlp mo5bedhlp mo6bedhlp;
array mobeddif{6} mo1beddif mo2beddif mo3beddif mo4beddif mo5beddif mo6beddif;
array mobedwout{6} mo1bedwout mo2bedwout mo3bedwout mo4bedwout mo5bedwout mo6bedwout;

do i=1 to 6;
if wave=i then do;
adverse_outside=.;
if (moouthlp(i)=2 and mooutdif(i)=1) or mooutwout(i)=2 then adverse_outside=0;
if mooutwout(i)=1 then adverse_outside=1;

adverse_inside=.;
if (moinsdhlp(i)=2 and moinsddif(i)=1) or moinsdwout(i)=2 then adverse_inside=0;
if moinsdwout(i)=1 then adverse_inside=1;

adverse_bed=.;
if (mobedhlp(i)=2 and mobeddif(i)=1) or mobedwout(i)=2 then adverse_bed=0;
if mobedwout(i)=1 then adverse_bed=1;

if adverse_outside=1 or adverse_inside=1 or adverse_bed=1 then adverse_mobility=1;
if adverse_outside=0 and adverse_inside=0 and adverse_bed=0 then adverse_mobility=0;

end;
end;



/*Household activities*/
array launwout {6} ha1launwout ha2launwout ha3launwout ha4launwout ha5launwout ha6launwout;
array laun {6} ha1laun ha2laun ha3laun ha4laun ha5laun ha6laun;
array launreas{6} ha1dlaunreas ha2dlaunreas ha3dlaunreas ha4dlaunreas ha5dlaunreas ha6dlaunreas;
array laundif{6} ha1laundif ha2laundif ha3laundif ha4laundif ha5laundif ha6laundif;

array shopwout {6} ha1shopwout ha2shopwout ha3shopwout ha4shopwout ha5shopwout ha6shopwout;
array shop {6} ha1shop ha2shop ha3shop ha4shop ha5shop ha6shop;
array shopreas{6} ha1dshopreas ha2dshopreas ha3dshopreas ha4dshopreas ha5dshopreas ha6dshopreas;
array shopdif{6} ha1lshopdif ha2shopdif ha3shopdif ha4shopdif ha5shopdif ha6shopdif;

array mealwout {6} ha1mealwout ha2mealwout ha3mealwout ha4mealwout ha5mealwout ha6mealwout;
array meal {6} ha1meal ha2meal ha3meal ha4meal ha5meal ha6meal;
array mealreas{6} ha1dmealreas ha2dmealreas ha3dmealreas ha4dmealreas ha5dmealreas ha6dmealreas;
array mealdif{6} ha1lmealdif ha2mealdif ha3mealdif ha4mealdif ha5mealdif ha6mealdif;

array medsmis{6} mc1medsmis mc2medsmis mc3medsmis mc4medsmis mc5medsmis mc6medsmis;
array meds{6} mc1meds mc2meds mc3meds mc4meds mc5meds mc6meds;
array medstrk{6} mc1medstrk mc2medstrk mc3medstrk mc4medstrk mc5medstrk mc6medstrk;
array medsslf{6} mc1medsslf mc2medsslf mc3medsslf mc4medsslf mc5medsslf mc6medsslf;
array medsreas{6} mc1medsreas mc2medsreas mc3medsreas mc4medsreas mc5medsreas mc6medsreas;
array medsdif{6} mc1medsdif mc2medsdif mc3medsdif mc4medsdif mc5medsdif mc6medsdif;
 


do i=1 to 6;
if wave=i then do;
adverse_laun=.;
if launwout(i)=1 then adverse_laun=1;
if launwout(i)=2 or (launwout(i)=-1 and laun(i)^=-1) then adverse_laun=0;
if laun(i) in (-7,-8) or launreas(i) in (-7,-8) or laundif(i) in (-7,-8) then adverse_laun=.;

adverse_shop=.;
if shopwout(i)=1 then adverse_shop=1;
if shopwout(i)=2 or (shopwout(i)=-1 and shop(i)^=-1) then adverse_shop=0;
if shop(i) in (-7,-8) or shopreas(i) in (-7,-8) or shopdif(i) in (-7,-8) then adverse_shop=.;

adverse_meal=.;
if mealwout(i)=1 then adverse_meal=1;
if mealwout(i)=2 or (mealwout(i)=-1 and meal(i)^=-1) then adverse_meal=0;
if meal(i) in (-7,-8) or mealreas(i) in (-7,-8) or mealdif(i) in (-7,-8) then adverse_meal=.;

adverse_meds=.;
if medsmis(i)=1 then adverse_meds=1;
if medsmis(i)=2 or (medsmis(i)=-1 and meds(i)^=-1) then adverse_meds=0;
if meds(i)=2 then adverse_meds=0;
if meds(i) in (-1,-7,-8,-9) or medstrk(i) in (-7,-8,-9) or medsslf(i) in (-7,-8,-9) or medsreas(i) in (-7,-8,-9)
or medsdif(i) in (-7,-8,-9) then adverse_meds=.;

if adverse_laun=1 or adverse_shop=1 or adverse_meal=1 or adverse_meds=1 then adverse_ha=1;
if adverse_laun=0 and adverse_shop=0 and adverse_meal=0 and adverse_meds=0 then adverse_ha=0;

end;
end;


if adverse_sc=1 or adverse_mobility=1 or adverse_ha=1 then adverse_all_cat=1;
if adverse_sc=0 and adverse_mobility=0 and adverse_ha=0 then adverse_all_cat=0; 
label adverse_all_cat="Unmet Needs in Self Care, Mobility, or Household Activities";

keep spid wave adverse_eat adverse_bath adverse_toilet adverse_dress adverse_sc
adverse_outside adverse_inside adverse_bed adverse_mobility
adverse_laun adverse_shop adverse_meal adverse_meds adverse_ha
adverse_all_cat;

run;

proc freq data=unmet1 ; tables (adverse_eat adverse_bath
adverse_toilet adverse_dress adverse_sc adverse_outside adverse_inside adverse_bed
adverse_mobility adverse_laun adverse_shop adverse_meal adverse_meds adverse_ha adverse_all_cat)*wave/missing; run;



libname out "E:\nhats\projects\Naomi QoL";

data out.unmetneeds; set unmet1; run;


